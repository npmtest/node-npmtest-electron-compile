{"/home/travis/build/npmtest/node-npmtest-electron-compile/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_electron_compile */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/lib.npmtest_electron_compile.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/lib.npmtest_electron_compile.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":61}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":67}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_electron_compile */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_electron_compile = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_electron_compile = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":60}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":74},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-electron-compile && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_electron_compile */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_electron_compile","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_electron_compile.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_electron_compile.rollup.js'] =","            local.assetsDict['/assets.npmtest_electron_compile.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_electron_compile.__dirname + '/lib.npmtest_electron_compile.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":3,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0},"b":{"1":[3,0],"2":[3,3],"3":[1,0],"4":[1,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"_interopRequireWildcard","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":32}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":13},"end":{"line":37,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":59}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":47}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":95}},"11":{"start":{"line":21,"column":39},"end":{"line":21,"column":93}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":269}},"13":{"start":{"line":23,"column":40},"end":{"line":23,"column":267}},"14":{"start":{"line":23,"column":69},"end":{"line":23,"column":80}},"15":{"start":{"line":23,"column":90},"end":{"line":23,"column":106}},"16":{"start":{"line":23,"column":107},"end":{"line":23,"column":228}},"17":{"start":{"line":23,"column":126},"end":{"line":23,"column":226}},"18":{"start":{"line":23,"column":149},"end":{"line":23,"column":224}},"19":{"start":{"line":23,"column":201},"end":{"line":23,"column":224}},"20":{"start":{"line":23,"column":229},"end":{"line":23,"column":250}},"21":{"start":{"line":23,"column":251},"end":{"line":23,"column":265}},"22":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}},"23":{"start":{"line":29,"column":0},"end":{"line":29,"column":21}},"24":{"start":{"line":31,"column":0},"end":{"line":41,"column":192}},"25":{"start":{"line":34,"column":4},"end":{"line":34,"column":85}},"26":{"start":{"line":35,"column":4},"end":{"line":35,"column":42}},"27":{"start":{"line":38,"column":4},"end":{"line":38,"column":67}},"28":{"start":{"line":39,"column":4},"end":{"line":39,"column":35}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":92}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":40},"end":{"line":23,"column":40}},{"start":{"line":23,"column":40},"end":{"line":23,"column":40}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":44},"end":{"line":23,"column":47}},{"start":{"line":23,"column":51},"end":{"line":23,"column":65}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":107},"end":{"line":23,"column":107}},{"start":{"line":23,"column":107},"end":{"line":23,"column":107}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":149},"end":{"line":23,"column":149}},{"start":{"line":23,"column":149},"end":{"line":23,"column":149}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":23},"end":{"line":34,"column":39}},{"start":{"line":34,"column":43},"end":{"line":34,"column":84}}]},"8":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":25}},{"start":{"line":38,"column":29},"end":{"line":38,"column":66}}]}},"code":["'use strict';","","var _configParser = require('./config-parser');","","var configParser = _interopRequireWildcard(_configParser);","","var _compilerHost = require('./compiler-host');","","var _compilerHost2 = _interopRequireDefault(_compilerHost);","","var _fileChangeCache = require('./file-change-cache');","","var _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);","","var _compileCache = require('./compile-cache');","","var _compileCache2 = _interopRequireDefault(_compileCache);","","var _protocolHook = require('./protocol-hook');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }","","//import {enableLiveReload} from './live-reload';","//import {watchPath} from './pathwatcher-rx';","","let enableLiveReload = null;","let watchPath = null;","","module.exports = Object.assign({","  // NB: delay-load live-reload so we don't load RxJS in production","  enableLiveReload: function () {","    enableLiveReload = enableLiveReload || require('./live-reload').enableLiveReload;","    return enableLiveReload(...arguments);","  },","  watchPath: function () {","    watchPath = watchPath || require('./pathwatcher-rx').watchPath;","    return watchPath(...arguments);","  }","}, configParser, { CompilerHost: _compilerHost2.default, FileChangedCache: _fileChangeCache2.default, CompileCache: _compileCache2.default, addBypassChecker: _protocolHook.addBypassChecker });","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJjb25maWdQYXJzZXIiLCJlbmFibGVMaXZlUmVsb2FkIiwid2F0Y2hQYXRoIiwibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImFzc2lnbiIsInJlcXVpcmUiLCJDb21waWxlckhvc3QiLCJGaWxlQ2hhbmdlZENhY2hlIiwiQ29tcGlsZUNhY2hlIiwiYWRkQnlwYXNzQ2hlY2tlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7SUFBWUEsWTs7QUFFWjs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBQ0E7QUFDQTs7QUFFQSxJQUFJQyxtQkFBbUIsSUFBdkI7QUFDQSxJQUFJQyxZQUFZLElBQWhCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCQyxPQUFPQyxNQUFQLENBQWM7QUFDN0I7QUFDQUwsb0JBQWtCLFlBQWtCO0FBQ2xDQSx1QkFBbUJBLG9CQUFvQk0sUUFBUSxlQUFSLEVBQXlCTixnQkFBaEU7QUFDQSxXQUFPQSxpQkFBaUIsWUFBakIsQ0FBUDtBQUNELEdBTDRCO0FBTTdCQyxhQUFXLFlBQWtCO0FBQzNCQSxnQkFBWUEsYUFBYUssUUFBUSxrQkFBUixFQUE0QkwsU0FBckQ7QUFDQSxXQUFPQSxVQUFVLFlBQVYsQ0FBUDtBQUNEO0FBVDRCLENBQWQsRUFXZkYsWUFYZSxFQVlmLEVBQUVRLG9DQUFGLEVBQWdCQywyQ0FBaEIsRUFBa0NDLG9DQUFsQyxFQUFnREMsZ0RBQWhELEVBWmUsQ0FBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjb25maWdQYXJzZXIgZnJvbSAnLi9jb25maWctcGFyc2VyJztcclxuXHJcbmltcG9ydCBDb21waWxlckhvc3QgZnJvbSAnLi9jb21waWxlci1ob3N0JztcclxuaW1wb3J0IEZpbGVDaGFuZ2VkQ2FjaGUgZnJvbSAnLi9maWxlLWNoYW5nZS1jYWNoZSc7XHJcbmltcG9ydCBDb21waWxlQ2FjaGUgZnJvbSAnLi9jb21waWxlLWNhY2hlJztcclxuaW1wb3J0IHthZGRCeXBhc3NDaGVja2VyfSBmcm9tICcuL3Byb3RvY29sLWhvb2snO1xyXG4vL2ltcG9ydCB7ZW5hYmxlTGl2ZVJlbG9hZH0gZnJvbSAnLi9saXZlLXJlbG9hZCc7XHJcbi8vaW1wb3J0IHt3YXRjaFBhdGh9IGZyb20gJy4vcGF0aHdhdGNoZXItcngnO1xyXG5cclxubGV0IGVuYWJsZUxpdmVSZWxvYWQgPSBudWxsO1xyXG5sZXQgd2F0Y2hQYXRoID0gbnVsbDtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbih7XHJcbiAgLy8gTkI6IGRlbGF5LWxvYWQgbGl2ZS1yZWxvYWQgc28gd2UgZG9uJ3QgbG9hZCBSeEpTIGluIHByb2R1Y3Rpb25cclxuICBlbmFibGVMaXZlUmVsb2FkOiBmdW5jdGlvbiguLi5hcmdzKSB7XHJcbiAgICBlbmFibGVMaXZlUmVsb2FkID0gZW5hYmxlTGl2ZVJlbG9hZCB8fCByZXF1aXJlKCcuL2xpdmUtcmVsb2FkJykuZW5hYmxlTGl2ZVJlbG9hZDtcclxuICAgIHJldHVybiBlbmFibGVMaXZlUmVsb2FkKC4uLmFyZ3MpO1xyXG4gIH0sXHJcbiAgd2F0Y2hQYXRoOiBmdW5jdGlvbiguLi5hcmdzKSB7XHJcbiAgICB3YXRjaFBhdGggPSB3YXRjaFBhdGggfHwgcmVxdWlyZSgnLi9wYXRod2F0Y2hlci1yeCcpLndhdGNoUGF0aDtcclxuICAgIHJldHVybiB3YXRjaFBhdGgoLi4uYXJncyk7XHJcbiAgfSxcclxufSxcclxuICBjb25maWdQYXJzZXIsXHJcbiAgeyBDb21waWxlckhvc3QsIEZpbGVDaGFuZ2VkQ2FjaGUsIENvbXBpbGVDYWNoZSwgYWRkQnlwYXNzQ2hlY2tlciB9XHJcbik7XHJcbiJdfQ=="],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":3,"23":1,"28":1,"29":1,"31":1,"34":0,"35":0,"38":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/config-parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/config-parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":7,"76":1,"77":3,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":1,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":1,"200":0,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[3,4],"24":[7,7],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":7,"8":3,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":31},"end":{"line":19,"column":48}}},"2":{"name":"createCompilerHostFromBabelRc","line":56,"loc":{"start":{"line":56,"column":9},"end":{"line":56,"column":53}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":32},"end":{"line":74,"column":49}}},"4":{"name":"createCompilerHostFromConfigFile","line":93,"loc":{"start":{"line":93,"column":9},"end":{"line":93,"column":56}}},"5":{"name":"(anonymous_5)","line":117,"loc":{"start":{"line":117,"column":32},"end":{"line":117,"column":52}}},"6":{"name":"createCompilerHostFromProjectRoot","line":142,"loc":{"start":{"line":142,"column":9},"end":{"line":142,"column":58}}},"7":{"name":"_interopRequireDefault","line":187,"loc":{"start":{"line":187,"column":0},"end":{"line":187,"column":37}}},"8":{"name":"_asyncToGenerator","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":31}}},"9":{"name":"(anonymous_9)","line":189,"loc":{"start":{"line":189,"column":40},"end":{"line":189,"column":52}}},"10":{"name":"(anonymous_10)","line":189,"loc":{"start":{"line":189,"column":110},"end":{"line":189,"column":137}}},"11":{"name":"step","line":189,"loc":{"start":{"line":189,"column":139},"end":{"line":189,"column":163}}},"12":{"name":"(anonymous_12)","line":189,"loc":{"start":{"line":189,"column":341},"end":{"line":189,"column":358}}},"13":{"name":"(anonymous_13)","line":189,"loc":{"start":{"line":189,"column":384},"end":{"line":189,"column":399}}},"14":{"name":"statSyncNoException","line":197,"loc":{"start":{"line":197,"column":0},"end":{"line":197,"column":37}}},"15":{"name":"initializeGlobalHooks","line":217,"loc":{"start":{"line":217,"column":0},"end":{"line":217,"column":45}}},"16":{"name":"(anonymous_16)","line":233,"loc":{"start":{"line":233,"column":19},"end":{"line":233,"column":31}}},"17":{"name":"init","line":270,"loc":{"start":{"line":270,"column":0},"end":{"line":270,"column":35}}},"18":{"name":"createCompilerHostFromConfiguration","line":301,"loc":{"start":{"line":301,"column":0},"end":{"line":301,"column":51}}},"19":{"name":"createCompilerHostFromBabelRcSync","line":343,"loc":{"start":{"line":343,"column":1},"end":{"line":343,"column":50}}},"20":{"name":"createCompilerHostFromConfigFileSync","line":380,"loc":{"start":{"line":380,"column":0},"end":{"line":380,"column":52}}},"21":{"name":"createCompilerHostFromProjectRootSync","line":399,"loc":{"start":{"line":399,"column":0},"end":{"line":399,"column":56}}},"22":{"name":"calculateDefaultCompileCacheDirectory","line":426,"loc":{"start":{"line":426,"column":0},"end":{"line":426,"column":49}}},"23":{"name":"createSourceMapDirectory","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":49}}},"24":{"name":"versionToFloat","line":442,"loc":{"start":{"line":442,"column":0},"end":{"line":442,"column":29}}},"25":{"name":"getElectronVersion","line":446,"loc":{"start":{"line":446,"column":0},"end":{"line":446,"column":37}}},"26":{"name":"getDefaultConfiguration","line":487,"loc":{"start":{"line":487,"column":0},"end":{"line":487,"column":42}}},"27":{"name":"createCompilers","line":508,"loc":{"start":{"line":508,"column":0},"end":{"line":508,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":137}},"3":{"start":{"line":18,"column":0},"end":{"line":59,"column":5}},"4":{"start":{"line":19,"column":2},"end":{"line":54,"column":5}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":96}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":97}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":71}},"8":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"9":{"start":{"line":27,"column":6},"end":{"line":27,"column":24}},"10":{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":82}},"12":{"start":{"line":32,"column":6},"end":{"line":32,"column":30}},"13":{"start":{"line":36,"column":4},"end":{"line":44,"column":5}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":49}},"15":{"start":{"line":38,"column":6},"end":{"line":43,"column":9}},"16":{"start":{"line":46,"column":4},"end":{"line":53,"column":7}},"17":{"start":{"line":56,"column":2},"end":{"line":58,"column":4}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}},"19":{"start":{"line":73,"column":0},"end":{"line":96,"column":5}},"20":{"start":{"line":74,"column":2},"end":{"line":91,"column":5}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":96}},"22":{"start":{"line":76,"column":4},"end":{"line":76,"column":97}},"23":{"start":{"line":78,"column":4},"end":{"line":78,"column":71}},"24":{"start":{"line":80,"column":4},"end":{"line":83,"column":5}},"25":{"start":{"line":81,"column":6},"end":{"line":81,"column":93}},"26":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"27":{"start":{"line":85,"column":4},"end":{"line":90,"column":7}},"28":{"start":{"line":93,"column":2},"end":{"line":95,"column":4}},"29":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"30":{"start":{"line":116,"column":0},"end":{"line":145,"column":5}},"31":{"start":{"line":117,"column":2},"end":{"line":140,"column":5}},"32":{"start":{"line":118,"column":4},"end":{"line":118,"column":96}},"33":{"start":{"line":119,"column":4},"end":{"line":119,"column":97}},"34":{"start":{"line":121,"column":4},"end":{"line":121,"column":63}},"35":{"start":{"line":122,"column":4},"end":{"line":125,"column":5}},"36":{"start":{"line":123,"column":6},"end":{"line":123,"column":56}},"37":{"start":{"line":124,"column":6},"end":{"line":124,"column":92}},"38":{"start":{"line":126,"column":4},"end":{"line":126,"column":25}},"39":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"40":{"start":{"line":128,"column":6},"end":{"line":128,"column":56}},"41":{"start":{"line":129,"column":6},"end":{"line":129,"column":92}},"42":{"start":{"line":132,"column":4},"end":{"line":132,"column":59}},"43":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"44":{"start":{"line":134,"column":6},"end":{"line":134,"column":52}},"45":{"start":{"line":135,"column":6},"end":{"line":135,"column":87}},"46":{"start":{"line":138,"column":4},"end":{"line":138,"column":64}},"47":{"start":{"line":139,"column":4},"end":{"line":139,"column":122}},"48":{"start":{"line":142,"column":2},"end":{"line":144,"column":4}},"49":{"start":{"line":143,"column":4},"end":{"line":143,"column":40}},"50":{"start":{"line":147,"column":0},"end":{"line":147,"column":54}},"51":{"start":{"line":148,"column":0},"end":{"line":148,"column":20}},"52":{"start":{"line":149,"column":0},"end":{"line":149,"column":82}},"53":{"start":{"line":150,"column":0},"end":{"line":150,"column":78}},"54":{"start":{"line":151,"column":0},"end":{"line":151,"column":84}},"55":{"start":{"line":152,"column":0},"end":{"line":152,"column":86}},"56":{"start":{"line":153,"column":0},"end":{"line":153,"column":86}},"57":{"start":{"line":154,"column":0},"end":{"line":154,"column":58}},"58":{"start":{"line":155,"column":0},"end":{"line":155,"column":42}},"59":{"start":{"line":157,"column":0},"end":{"line":157,"column":24}},"60":{"start":{"line":159,"column":0},"end":{"line":159,"column":39}},"61":{"start":{"line":161,"column":0},"end":{"line":161,"column":28}},"62":{"start":{"line":163,"column":0},"end":{"line":163,"column":43}},"63":{"start":{"line":165,"column":0},"end":{"line":165,"column":28}},"64":{"start":{"line":167,"column":0},"end":{"line":167,"column":43}},"65":{"start":{"line":169,"column":0},"end":{"line":169,"column":32}},"66":{"start":{"line":171,"column":0},"end":{"line":171,"column":47}},"67":{"start":{"line":173,"column":0},"end":{"line":173,"column":36}},"68":{"start":{"line":175,"column":0},"end":{"line":175,"column":54}},"69":{"start":{"line":177,"column":0},"end":{"line":177,"column":65}},"70":{"start":{"line":179,"column":0},"end":{"line":179,"column":47}},"71":{"start":{"line":181,"column":0},"end":{"line":181,"column":59}},"72":{"start":{"line":183,"column":0},"end":{"line":183,"column":45}},"73":{"start":{"line":185,"column":0},"end":{"line":185,"column":57}},"74":{"start":{"line":187,"column":0},"end":{"line":187,"column":95}},"75":{"start":{"line":187,"column":39},"end":{"line":187,"column":93}},"76":{"start":{"line":189,"column":0},"end":{"line":189,"column":458}},"77":{"start":{"line":189,"column":33},"end":{"line":189,"column":456}},"78":{"start":{"line":189,"column":54},"end":{"line":189,"column":90}},"79":{"start":{"line":189,"column":91},"end":{"line":189,"column":453}},"80":{"start":{"line":189,"column":139},"end":{"line":189,"column":428}},"81":{"start":{"line":189,"column":165},"end":{"line":189,"column":263}},"82":{"start":{"line":189,"column":171},"end":{"line":189,"column":196}},"83":{"start":{"line":189,"column":197},"end":{"line":189,"column":220}},"84":{"start":{"line":189,"column":239},"end":{"line":189,"column":253}},"85":{"start":{"line":189,"column":254},"end":{"line":189,"column":261}},"86":{"start":{"line":189,"column":264},"end":{"line":189,"column":426}},"87":{"start":{"line":189,"column":281},"end":{"line":189,"column":296}},"88":{"start":{"line":189,"column":306},"end":{"line":189,"column":424}},"89":{"start":{"line":189,"column":360},"end":{"line":189,"column":380}},"90":{"start":{"line":189,"column":401},"end":{"line":189,"column":420}},"91":{"start":{"line":189,"column":429},"end":{"line":189,"column":449}},"92":{"start":{"line":191,"column":0},"end":{"line":191,"column":61}},"93":{"start":{"line":195,"column":0},"end":{"line":195,"column":30}},"94":{"start":{"line":197,"column":0},"end":{"line":207,"column":1}},"95":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"96":{"start":{"line":199,"column":4},"end":{"line":199,"column":52}},"97":{"start":{"line":202,"column":2},"end":{"line":206,"column":3}},"98":{"start":{"line":203,"column":4},"end":{"line":203,"column":41}},"99":{"start":{"line":205,"column":4},"end":{"line":205,"column":16}},"100":{"start":{"line":217,"column":0},"end":{"line":242,"column":1}},"101":{"start":{"line":218,"column":2},"end":{"line":218,"column":35}},"102":{"start":{"line":219,"column":2},"end":{"line":219,"column":46}},"103":{"start":{"line":221,"column":2},"end":{"line":221,"column":43}},"104":{"start":{"line":223,"column":2},"end":{"line":241,"column":3}},"105":{"start":{"line":224,"column":4},"end":{"line":224,"column":39}},"106":{"start":{"line":226,"column":4},"end":{"line":226,"column":29}},"107":{"start":{"line":228,"column":4},"end":{"line":228,"column":47}},"108":{"start":{"line":230,"column":4},"end":{"line":230,"column":68}},"109":{"start":{"line":233,"column":4},"end":{"line":235,"column":6}},"110":{"start":{"line":234,"column":6},"end":{"line":234,"column":43}},"111":{"start":{"line":236,"column":4},"end":{"line":240,"column":5}},"112":{"start":{"line":237,"column":6},"end":{"line":237,"column":17}},"113":{"start":{"line":239,"column":6},"end":{"line":239,"column":32}},"114":{"start":{"line":270,"column":0},"end":{"line":293,"column":1}},"115":{"start":{"line":271,"column":2},"end":{"line":271,"column":96}},"116":{"start":{"line":272,"column":2},"end":{"line":272,"column":90}},"117":{"start":{"line":273,"column":2},"end":{"line":273,"column":95}},"118":{"start":{"line":275,"column":2},"end":{"line":275,"column":26}},"119":{"start":{"line":276,"column":2},"end":{"line":276,"column":72}},"120":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"121":{"start":{"line":279,"column":4},"end":{"line":279,"column":57}},"122":{"start":{"line":282,"column":2},"end":{"line":289,"column":3}},"123":{"start":{"line":283,"column":4},"end":{"line":283,"column":101}},"124":{"start":{"line":286,"column":4},"end":{"line":286,"column":53}},"125":{"start":{"line":287,"column":4},"end":{"line":287,"column":92}},"126":{"start":{"line":288,"column":4},"end":{"line":288,"column":86}},"127":{"start":{"line":291,"column":2},"end":{"line":291,"column":38}},"128":{"start":{"line":292,"column":2},"end":{"line":292,"column":35}},"129":{"start":{"line":301,"column":0},"end":{"line":343,"column":1}},"130":{"start":{"line":302,"column":2},"end":{"line":302,"column":36}},"131":{"start":{"line":303,"column":2},"end":{"line":303,"column":82}},"132":{"start":{"line":304,"column":2},"end":{"line":304,"column":64}},"133":{"start":{"line":306,"column":2},"end":{"line":308,"column":3}},"134":{"start":{"line":307,"column":4},"end":{"line":307,"column":44}},"135":{"start":{"line":310,"column":2},"end":{"line":310,"column":120}},"136":{"start":{"line":311,"column":2},"end":{"line":311,"column":68}},"137":{"start":{"line":313,"column":2},"end":{"line":313,"column":80}},"138":{"start":{"line":314,"column":2},"end":{"line":318,"column":3}},"139":{"start":{"line":315,"column":4},"end":{"line":315,"column":54}},"140":{"start":{"line":316,"column":4},"end":{"line":316,"column":58}},"141":{"start":{"line":317,"column":4},"end":{"line":317,"column":104}},"142":{"start":{"line":320,"column":2},"end":{"line":334,"column":5}},"143":{"start":{"line":321,"column":4},"end":{"line":321,"column":31}},"144":{"start":{"line":322,"column":4},"end":{"line":324,"column":5}},"145":{"start":{"line":323,"column":6},"end":{"line":323,"column":76}},"146":{"start":{"line":327,"column":4},"end":{"line":330,"column":5}},"147":{"start":{"line":328,"column":6},"end":{"line":328,"column":45}},"148":{"start":{"line":329,"column":6},"end":{"line":329,"column":30}},"149":{"start":{"line":332,"column":4},"end":{"line":332,"column":59}},"150":{"start":{"line":333,"column":4},"end":{"line":333,"column":40}},"151":{"start":{"line":336,"column":2},"end":{"line":336,"column":113}},"152":{"start":{"line":340,"column":2},"end":{"line":340,"column":67}},"153":{"start":{"line":341,"column":2},"end":{"line":341,"column":30}},"154":{"start":{"line":342,"column":2},"end":{"line":342,"column":13}},"155":{"start":{"line":343,"column":1},"end":{"line":378,"column":1}},"156":{"start":{"line":344,"column":2},"end":{"line":344,"column":94}},"157":{"start":{"line":345,"column":2},"end":{"line":345,"column":95}},"158":{"start":{"line":347,"column":2},"end":{"line":347,"column":65}},"159":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"160":{"start":{"line":351,"column":4},"end":{"line":351,"column":22}},"161":{"start":{"line":354,"column":2},"end":{"line":357,"column":3}},"162":{"start":{"line":355,"column":4},"end":{"line":355,"column":80}},"163":{"start":{"line":356,"column":4},"end":{"line":356,"column":28}},"164":{"start":{"line":360,"column":2},"end":{"line":368,"column":3}},"165":{"start":{"line":361,"column":4},"end":{"line":361,"column":47}},"166":{"start":{"line":362,"column":4},"end":{"line":367,"column":7}},"167":{"start":{"line":370,"column":2},"end":{"line":377,"column":5}},"168":{"start":{"line":380,"column":0},"end":{"line":397,"column":1}},"169":{"start":{"line":381,"column":2},"end":{"line":381,"column":94}},"170":{"start":{"line":382,"column":2},"end":{"line":382,"column":95}},"171":{"start":{"line":384,"column":2},"end":{"line":384,"column":65}},"172":{"start":{"line":386,"column":2},"end":{"line":389,"column":3}},"173":{"start":{"line":387,"column":4},"end":{"line":387,"column":91}},"174":{"start":{"line":388,"column":4},"end":{"line":388,"column":28}},"175":{"start":{"line":391,"column":2},"end":{"line":396,"column":5}},"176":{"start":{"line":399,"column":0},"end":{"line":417,"column":1}},"177":{"start":{"line":400,"column":2},"end":{"line":400,"column":94}},"178":{"start":{"line":401,"column":2},"end":{"line":401,"column":95}},"179":{"start":{"line":403,"column":2},"end":{"line":403,"column":61}},"180":{"start":{"line":404,"column":2},"end":{"line":407,"column":3}},"181":{"start":{"line":405,"column":4},"end":{"line":405,"column":54}},"182":{"start":{"line":406,"column":4},"end":{"line":406,"column":88}},"183":{"start":{"line":409,"column":2},"end":{"line":409,"column":57}},"184":{"start":{"line":410,"column":2},"end":{"line":413,"column":3}},"185":{"start":{"line":411,"column":4},"end":{"line":411,"column":50}},"186":{"start":{"line":412,"column":4},"end":{"line":412,"column":83}},"187":{"start":{"line":415,"column":2},"end":{"line":415,"column":62}},"188":{"start":{"line":416,"column":2},"end":{"line":416,"column":118}},"189":{"start":{"line":426,"column":0},"end":{"line":435,"column":1}},"190":{"start":{"line":427,"column":2},"end":{"line":427,"column":64}},"191":{"start":{"line":428,"column":2},"end":{"line":428,"column":88}},"192":{"start":{"line":430,"column":2},"end":{"line":430,"column":69}},"193":{"start":{"line":431,"column":2},"end":{"line":431,"column":34}},"194":{"start":{"line":433,"column":2},"end":{"line":433,"column":50}},"195":{"start":{"line":434,"column":2},"end":{"line":434,"column":18}},"196":{"start":{"line":437,"column":0},"end":{"line":440,"column":1}},"197":{"start":{"line":438,"column":2},"end":{"line":438,"column":39}},"198":{"start":{"line":439,"column":2},"end":{"line":439,"column":57}},"199":{"start":{"line":442,"column":0},"end":{"line":444,"column":1}},"200":{"start":{"line":443,"column":2},"end":{"line":443,"column":63}},"201":{"start":{"line":446,"column":0},"end":{"line":480,"column":1}},"202":{"start":{"line":447,"column":2},"end":{"line":449,"column":3}},"203":{"start":{"line":448,"column":4},"end":{"line":448,"column":53}},"204":{"start":{"line":451,"column":2},"end":{"line":451,"column":73}},"205":{"start":{"line":453,"column":2},"end":{"line":473,"column":20}},"206":{"start":{"line":454,"column":4},"end":{"line":459,"column":5}},"207":{"start":{"line":456,"column":6},"end":{"line":456,"column":53}},"208":{"start":{"line":457,"column":6},"end":{"line":457,"column":48}},"209":{"start":{"line":458,"column":6},"end":{"line":458,"column":33}},"210":{"start":{"line":458,"column":21},"end":{"line":458,"column":33}},"211":{"start":{"line":461,"column":4},"end":{"line":465,"column":5}},"212":{"start":{"line":462,"column":6},"end":{"line":462,"column":71}},"213":{"start":{"line":467,"column":4},"end":{"line":472,"column":5}},"214":{"start":{"line":468,"column":6},"end":{"line":468,"column":64}},"215":{"start":{"line":469,"column":6},"end":{"line":469,"column":32}},"216":{"start":{"line":471,"column":6},"end":{"line":471,"column":18}},"217":{"start":{"line":473,"column":15},"end":{"line":473,"column":18}},"218":{"start":{"line":475,"column":2},"end":{"line":477,"column":3}},"219":{"start":{"line":476,"column":4},"end":{"line":476,"column":113}},"220":{"start":{"line":479,"column":2},"end":{"line":479,"column":33}},"221":{"start":{"line":487,"column":0},"end":{"line":498,"column":1}},"222":{"start":{"line":488,"column":2},"end":{"line":497,"column":4}},"223":{"start":{"line":508,"column":0},"end":{"line":552,"column":1}},"224":{"start":{"line":509,"column":2},"end":{"line":527,"column":3}},"225":{"start":{"line":514,"column":4},"end":{"line":514,"column":73}},"226":{"start":{"line":516,"column":4},"end":{"line":522,"column":5}},"227":{"start":{"line":517,"column":6},"end":{"line":521,"column":7}},"228":{"start":{"line":518,"column":8},"end":{"line":518,"column":47}},"229":{"start":{"line":524,"column":4},"end":{"line":526,"column":5}},"230":{"start":{"line":525,"column":6},"end":{"line":525,"column":86}},"231":{"start":{"line":533,"column":2},"end":{"line":533,"column":15}},"232":{"start":{"line":534,"column":2},"end":{"line":540,"column":5}},"233":{"start":{"line":535,"column":4},"end":{"line":539,"column":5}},"234":{"start":{"line":536,"column":6},"end":{"line":536,"column":44}},"235":{"start":{"line":538,"column":6},"end":{"line":538,"column":25}},"236":{"start":{"line":542,"column":2},"end":{"line":549,"column":10}},"237":{"start":{"line":543,"column":4},"end":{"line":543,"column":53}},"238":{"start":{"line":545,"column":4},"end":{"line":547,"column":5}},"239":{"start":{"line":546,"column":6},"end":{"line":546,"column":20}},"240":{"start":{"line":548,"column":4},"end":{"line":548,"column":15}},"241":{"start":{"line":551,"column":2},"end":{"line":551,"column":13}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":76},"end":{"line":20,"column":88}},{"start":{"line":20,"column":91},"end":{"line":20,"column":95}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":43}},{"start":{"line":20,"column":47},"end":{"line":20,"column":73}}]},"3":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":77},"end":{"line":21,"column":89}},{"start":{"line":21,"column":92},"end":{"line":21,"column":96}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":24},"end":{"line":21,"column":44}},{"start":{"line":21,"column":48},"end":{"line":21,"column":74}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"6":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"7":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":19},"end":{"line":31,"column":40}},{"start":{"line":31,"column":44},"end":{"line":31,"column":64}},{"start":{"line":31,"column":68},"end":{"line":31,"column":81}}]},"8":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"9":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":22}},{"start":{"line":36,"column":26},"end":{"line":36,"column":43}}]},"10":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":76},"end":{"line":75,"column":88}},{"start":{"line":75,"column":91},"end":{"line":75,"column":95}}]},"11":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":23},"end":{"line":75,"column":43}},{"start":{"line":75,"column":47},"end":{"line":75,"column":73}}]},"12":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":77},"end":{"line":76,"column":89}},{"start":{"line":76,"column":92},"end":{"line":76,"column":96}}]},"13":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":24},"end":{"line":76,"column":44}},{"start":{"line":76,"column":48},"end":{"line":76,"column":74}}]},"14":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"15":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":19},"end":{"line":81,"column":51}},{"start":{"line":81,"column":55},"end":{"line":81,"column":75}},{"start":{"line":81,"column":79},"end":{"line":81,"column":92}}]},"16":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":76},"end":{"line":118,"column":88}},{"start":{"line":118,"column":91},"end":{"line":118,"column":95}}]},"17":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":23},"end":{"line":118,"column":43}},{"start":{"line":118,"column":47},"end":{"line":118,"column":73}}]},"18":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":77},"end":{"line":119,"column":89}},{"start":{"line":119,"column":92},"end":{"line":119,"column":96}}]},"19":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":24},"end":{"line":119,"column":44}},{"start":{"line":119,"column":48},"end":{"line":119,"column":74}}]},"20":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"21":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"22":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"23":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":70},"end":{"line":187,"column":73}},{"start":{"line":187,"column":76},"end":{"line":187,"column":92}}]},"24":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":46},"end":{"line":187,"column":49}},{"start":{"line":187,"column":53},"end":{"line":187,"column":67}}]},"25":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":264},"end":{"line":189,"column":264}},{"start":{"line":189,"column":264},"end":{"line":189,"column":264}}]},"26":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"27":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":18},"end":{"line":218,"column":24}},{"start":{"line":218,"column":28},"end":{"line":218,"column":34}}]},"28":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"29":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":23}},{"start":{"line":223,"column":27},"end":{"line":223,"column":53}}]},"30":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"31":{"line":271,"type":"cond-expr","locations":[{"start":{"line":271,"column":76},"end":{"line":271,"column":88}},{"start":{"line":271,"column":91},"end":{"line":271,"column":95}}]},"32":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":23},"end":{"line":271,"column":43}},{"start":{"line":271,"column":47},"end":{"line":271,"column":73}}]},"33":{"line":272,"type":"cond-expr","locations":[{"start":{"line":272,"column":70},"end":{"line":272,"column":82}},{"start":{"line":272,"column":85},"end":{"line":272,"column":89}}]},"34":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":17},"end":{"line":272,"column":37}},{"start":{"line":272,"column":41},"end":{"line":272,"column":67}}]},"35":{"line":273,"type":"cond-expr","locations":[{"start":{"line":273,"column":75},"end":{"line":273,"column":87}},{"start":{"line":273,"column":90},"end":{"line":273,"column":94}}]},"36":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":22},"end":{"line":273,"column":42}},{"start":{"line":273,"column":46},"end":{"line":273,"column":72}}]},"37":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":50},"end":{"line":276,"column":58}},{"start":{"line":276,"column":62},"end":{"line":276,"column":70}}]},"38":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"39":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"40":{"line":286,"type":"cond-expr","locations":[{"start":{"line":286,"column":33},"end":{"line":286,"column":45}},{"start":{"line":286,"column":48},"end":{"line":286,"column":52}}]},"41":{"line":287,"type":"cond-expr","locations":[{"start":{"line":287,"column":36},"end":{"line":287,"column":79}},{"start":{"line":287,"column":82},"end":{"line":287,"column":91}}]},"42":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":21},"end":{"line":303,"column":38}},{"start":{"line":303,"column":42},"end":{"line":303,"column":81}}]},"43":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":24},"end":{"line":304,"column":42}},{"start":{"line":304,"column":46},"end":{"line":304,"column":63}}]},"44":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"45":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"46":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":14},"end":{"line":320,"column":26}},{"start":{"line":320,"column":30},"end":{"line":320,"column":32}}]},"47":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]},"48":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":327,"column":4}},{"start":{"line":327,"column":4},"end":{"line":327,"column":4}}]},"49":{"line":344,"type":"cond-expr","locations":[{"start":{"line":344,"column":74},"end":{"line":344,"column":86}},{"start":{"line":344,"column":89},"end":{"line":344,"column":93}}]},"50":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":21},"end":{"line":344,"column":41}},{"start":{"line":344,"column":45},"end":{"line":344,"column":71}}]},"51":{"line":345,"type":"cond-expr","locations":[{"start":{"line":345,"column":75},"end":{"line":345,"column":87}},{"start":{"line":345,"column":90},"end":{"line":345,"column":94}}]},"52":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":22},"end":{"line":345,"column":42}},{"start":{"line":345,"column":46},"end":{"line":345,"column":72}}]},"53":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"54":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":2},"end":{"line":354,"column":2}},{"start":{"line":354,"column":2},"end":{"line":354,"column":2}}]},"55":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":17},"end":{"line":355,"column":38}},{"start":{"line":355,"column":42},"end":{"line":355,"column":62}},{"start":{"line":355,"column":66},"end":{"line":355,"column":79}}]},"56":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"57":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":20}},{"start":{"line":360,"column":24},"end":{"line":360,"column":41}}]},"58":{"line":381,"type":"cond-expr","locations":[{"start":{"line":381,"column":74},"end":{"line":381,"column":86}},{"start":{"line":381,"column":89},"end":{"line":381,"column":93}}]},"59":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":21},"end":{"line":381,"column":41}},{"start":{"line":381,"column":45},"end":{"line":381,"column":71}}]},"60":{"line":382,"type":"cond-expr","locations":[{"start":{"line":382,"column":75},"end":{"line":382,"column":87}},{"start":{"line":382,"column":90},"end":{"line":382,"column":94}}]},"61":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":22},"end":{"line":382,"column":42}},{"start":{"line":382,"column":46},"end":{"line":382,"column":72}}]},"62":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"63":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":17},"end":{"line":387,"column":49}},{"start":{"line":387,"column":53},"end":{"line":387,"column":73}},{"start":{"line":387,"column":77},"end":{"line":387,"column":90}}]},"64":{"line":400,"type":"cond-expr","locations":[{"start":{"line":400,"column":74},"end":{"line":400,"column":86}},{"start":{"line":400,"column":89},"end":{"line":400,"column":93}}]},"65":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":21},"end":{"line":400,"column":41}},{"start":{"line":400,"column":45},"end":{"line":400,"column":71}}]},"66":{"line":401,"type":"cond-expr","locations":[{"start":{"line":401,"column":75},"end":{"line":401,"column":87}},{"start":{"line":401,"column":90},"end":{"line":401,"column":94}}]},"67":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":22},"end":{"line":401,"column":42}},{"start":{"line":401,"column":46},"end":{"line":401,"column":72}}]},"68":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"69":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"70":{"line":427,"type":"binary-expr","locations":[{"start":{"line":427,"column":15},"end":{"line":427,"column":31}},{"start":{"line":427,"column":35},"end":{"line":427,"column":53}},{"start":{"line":427,"column":57},"end":{"line":427,"column":63}}]},"71":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"72":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":454,"column":4}},{"start":{"line":454,"column":4},"end":{"line":454,"column":4}}]},"73":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":8},"end":{"line":454,"column":34}},{"start":{"line":454,"column":38},"end":{"line":454,"column":69}}]},"74":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":6},"end":{"line":458,"column":6}},{"start":{"line":458,"column":6},"end":{"line":458,"column":6}}]},"75":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":10},"end":{"line":458,"column":11}},{"start":{"line":458,"column":15},"end":{"line":458,"column":19}}]},"76":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"77":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":2},"end":{"line":509,"column":2}},{"start":{"line":509,"column":2},"end":{"line":509,"column":2}}]},"78":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":4},"end":{"line":524,"column":4}},{"start":{"line":524,"column":4},"end":{"line":524,"column":4}}]},"79":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":4},"end":{"line":535,"column":4}},{"start":{"line":535,"column":4},"end":{"line":535,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.createCompilerHostFromProjectRoot = exports.createCompilerHostFromConfigFile = exports.createCompilerHostFromBabelRc = undefined;","","/**"," * Creates a compiler host from a .babelrc file. This method is usually called"," * from {@link createCompilerHostFromProjectRoot} instead of used directly."," *"," * @param  {string} file  The path to a .babelrc file"," *"," * @param  {string} rootCacheDir (optional)  The directory to use as a cache."," *"," * @return {Promise<CompilerHost>}  A set-up compiler host"," */","let createCompilerHostFromBabelRc = exports.createCompilerHostFromBabelRc = (() => {","  var _ref = _asyncToGenerator(function* (file) {","    let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","    let info = JSON.parse((yield _promise.pfs.readFile(file, 'utf8')));","","    // package.json","    if ('babel' in info) {","      info = info.babel;","    }","","    if ('env' in info) {","      let ourEnv = process.env.BABEL_ENV || process.env.NODE_ENV || 'development';","      info = info.env[ourEnv];","    }","","    // Are we still package.json (i.e. is there no babel info whatsoever?)","    if ('name' in info && 'version' in info) {","      let appRoot = _path2.default.dirname(file);","      return createCompilerHostFromConfiguration({","        appRoot: appRoot,","        options: getDefaultConfiguration(appRoot),","        rootCacheDir,","        sourceMapPath","      });","    }","","    return createCompilerHostFromConfiguration({","      appRoot: _path2.default.dirname(file),","      options: {","        'application/javascript': info","      },","      rootCacheDir,","      sourceMapPath","    });","  });","","  return function createCompilerHostFromBabelRc(_x4) {","    return _ref.apply(this, arguments);","  };","})();","","/**"," * Creates a compiler host from a .compilerc file. This method is usually called"," * from {@link createCompilerHostFromProjectRoot} instead of used directly."," *"," * @param  {string} file  The path to a .compilerc file"," *"," * @param  {string} rootCacheDir (optional)  The directory to use as a cache."," *"," * @return {Promise<CompilerHost>}  A set-up compiler host"," */","","","let createCompilerHostFromConfigFile = exports.createCompilerHostFromConfigFile = (() => {","  var _ref2 = _asyncToGenerator(function* (file) {","    let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","    let info = JSON.parse((yield _promise.pfs.readFile(file, 'utf8')));","","    if ('env' in info) {","      let ourEnv = process.env.ELECTRON_COMPILE_ENV || process.env.NODE_ENV || 'development';","      info = info.env[ourEnv];","    }","","    return createCompilerHostFromConfiguration({","      appRoot: _path2.default.dirname(file),","      options: info,","      rootCacheDir,","      sourceMapPath","    });","  });","","  return function createCompilerHostFromConfigFile(_x7) {","    return _ref2.apply(this, arguments);","  };","})();","","/**"," * Creates a configured {@link CompilerHost} instance from the project root"," * directory. This method first searches for a .compilerc (or .compilerc.json), then falls back to the"," * default locations for Babel configuration info. If neither are found, defaults"," * to standard settings"," *"," * @param  {string} rootDir  The root application directory (i.e. the directory"," *                           that has the app's package.json)"," *"," * @param  {string} rootCacheDir (optional)  The directory to use as a cache."," *"," * @param {string} sourceMapPath (optional) The directory to store sourcemap separately"," *                               if compiler option enabled to emit."," *"," * @return {Promise<CompilerHost>}  A set-up compiler host"," */","","","let createCompilerHostFromProjectRoot = exports.createCompilerHostFromProjectRoot = (() => {","  var _ref3 = _asyncToGenerator(function* (rootDir) {","    let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","    let compilerc = _path2.default.join(rootDir, '.compilerc');","    if (statSyncNoException(compilerc)) {","      d(`Found a .compilerc at ${compilerc}, using it`);","      return yield createCompilerHostFromConfigFile(compilerc, rootCacheDir, sourceMapPath);","    }","    compilerc += '.json';","    if (statSyncNoException(compilerc)) {","      d(`Found a .compilerc at ${compilerc}, using it`);","      return yield createCompilerHostFromConfigFile(compilerc, rootCacheDir, sourceMapPath);","    }","","    let babelrc = _path2.default.join(rootDir, '.babelrc');","    if (statSyncNoException(babelrc)) {","      d(`Found a .babelrc at ${babelrc}, using it`);","      return yield createCompilerHostFromBabelRc(babelrc, rootCacheDir, sourceMapPath);","    }","","    d(`Using package.json or default parameters at ${rootDir}`);","    return yield createCompilerHostFromBabelRc(_path2.default.join(rootDir, 'package.json'), rootCacheDir, sourceMapPath);","  });","","  return function createCompilerHostFromProjectRoot(_x10) {","    return _ref3.apply(this, arguments);","  };","})();","","exports.initializeGlobalHooks = initializeGlobalHooks;","exports.init = init;","exports.createCompilerHostFromConfiguration = createCompilerHostFromConfiguration;","exports.createCompilerHostFromBabelRcSync = createCompilerHostFromBabelRcSync;","exports.createCompilerHostFromConfigFileSync = createCompilerHostFromConfigFileSync;","exports.createCompilerHostFromProjectRootSync = createCompilerHostFromProjectRootSync;","exports.calculateDefaultCompileCacheDirectory = calculateDefaultCompileCacheDirectory;","exports.getDefaultConfiguration = getDefaultConfiguration;","exports.createCompilers = createCompilers;","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _path = require('path');","","var _path2 = _interopRequireDefault(_path);","","var _zlib = require('zlib');","","var _zlib2 = _interopRequireDefault(_zlib);","","var _mkdirp = require('mkdirp');","","var _mkdirp2 = _interopRequireDefault(_mkdirp);","","var _promise = require('./promise');","","var _fileChangeCache = require('./file-change-cache');","","var _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);","","var _compilerHost = require('./compiler-host');","","var _compilerHost2 = _interopRequireDefault(_compilerHost);","","var _requireHook = require('./require-hook');","","var _requireHook2 = _interopRequireDefault(_requireHook);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","const d = require('debug')('electron-compile:config-parser');","","// NB: We intentionally delay-load this so that in production, you can create","// cache-only versions of these compilers","let allCompilerClasses = null;","","function statSyncNoException(fsPath) {","  if ('statSyncNoException' in _fs2.default) {","    return _fs2.default.statSyncNoException(fsPath);","  }","","  try {","    return _fs2.default.statSync(fsPath);","  } catch (e) {","    return null;","  }","}","","/**"," * Initialize the global hooks (protocol hook for file:, node.js hook)"," * independent of initializing the compiler. This method is usually called by"," * init instead of directly"," *"," * @param {CompilerHost} compilerHost  The compiler host to use."," *"," */","function initializeGlobalHooks(compilerHost) {","  let globalVar = global || window;","  globalVar.globalCompilerHost = compilerHost;","","  (0, _requireHook2.default)(compilerHost);","","  if ('type' in process && process.type === 'browser') {","    var _require = require('electron');","","    const app = _require.app;","","    var _require2 = require('./protocol-hook');","","    const initializeProtocolHook = _require2.initializeProtocolHook;","","","    let protoify = function () {","      initializeProtocolHook(compilerHost);","    };","    if (app.isReady()) {","      protoify();","    } else {","      app.on('ready', protoify);","    }","  }","}","","/**"," * Initialize electron-compile and set it up, either for development or"," * production use. This is almost always the only method you need to use in order"," * to use electron-compile."," *"," * @param  {string} appRoot  The top-level directory for your application (i.e."," *                           the one which has your package.json)."," *"," * @param  {string} mainModule  The module to require in, relative to the module"," *                              calling init, that will start your app. Write this"," *                              as if you were writing a require call from here."," *"," * @param  {bool} productionMode   If explicitly True/False, will set read-only"," *                                 mode to be disabled/enabled. If not, we'll"," *                                 guess based on the presence of a production"," *                                 cache."," *"," * @param  {string} cacheDir  If not passed in, read-only will look in"," *                            `appRoot/.cache` and dev mode will compile to a"," *                            temporary directory. If it is passed in, both modes"," *                            will cache to/from `appRoot/{cacheDir}`"," *"," * @param {string} sourceMapPath (optional) The directory to store sourcemap separately"," *                               if compiler option enabled to emit."," *                               Default to cachePath if not specified, will be ignored for read-only mode."," */","function init(appRoot, mainModule) {","  let productionMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","  let cacheDir = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;","  let sourceMapPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;","","  let compilerHost = null;","  let rootCacheDir = _path2.default.join(appRoot, cacheDir || '.cache');","","  if (productionMode === null) {","    productionMode = !!statSyncNoException(rootCacheDir);","  }","","  if (productionMode) {","    compilerHost = _compilerHost2.default.createReadonlyFromConfigurationSync(rootCacheDir, appRoot);","  } else {","    // if cacheDir was passed in, pass it along. Otherwise, default to a tempdir.","    const cachePath = cacheDir ? rootCacheDir : null;","    const mapPath = sourceMapPath ? _path2.default.join(appRoot, sourceMapPath) : cachePath;","    compilerHost = createCompilerHostFromProjectRootSync(appRoot, cachePath, mapPath);","  }","","  initializeGlobalHooks(compilerHost);","  require.main.require(mainModule);","}","","/**"," * Creates a {@link CompilerHost} with the given information. This method is"," * usually called by {@link createCompilerHostFromProjectRoot}."," *"," * @private"," */","function createCompilerHostFromConfiguration(info) {","  let compilers = createCompilers();","  let rootCacheDir = info.rootCacheDir || calculateDefaultCompileCacheDirectory();","  const sourceMapPath = info.sourceMapPath || info.rootCacheDir;","","  if (info.sourceMapPath) {","    createSourceMapDirectory(sourceMapPath);","  }","","  d(`Creating CompilerHost: ${JSON.stringify(info)}, rootCacheDir = ${rootCacheDir}, sourceMapPath = ${sourceMapPath}`);","  let fileChangeCache = new _fileChangeCache2.default(info.appRoot);","","  let compilerInfo = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');","  if (_fs2.default.existsSync(compilerInfo)) {","    let buf = _fs2.default.readFileSync(compilerInfo);","    let json = JSON.parse(_zlib2.default.gunzipSync(buf));","    fileChangeCache = _fileChangeCache2.default.loadFromData(json.fileChangeCache, info.appRoot, false);","  }","","  Object.keys(info.options || {}).forEach(x => {","    let opts = info.options[x];","    if (!(x in compilers)) {","      throw new Error(`Found compiler settings for missing compiler: ${x}`);","    }","","    // NB: Let's hope this isn't a valid compiler option...","    if (opts.passthrough) {","      compilers[x] = compilers['text/plain'];","      delete opts.passthrough;","    }","","    d(`Setting options for ${x}: ${JSON.stringify(opts)}`);","    compilers[x].compilerOptions = opts;","  });","","  let ret = new _compilerHost2.default(rootCacheDir, compilers, fileChangeCache, false, compilers['text/plain']);","","  // NB: It's super important that we guarantee that the configuration is saved","  // out, because we'll need to re-read it in the renderer process","  d(`Created compiler host with options: ${JSON.stringify(info)}`);","  ret.saveConfigurationSync();","  return ret;","}function createCompilerHostFromBabelRcSync(file) {","  let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","  let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","  let info = JSON.parse(_fs2.default.readFileSync(file, 'utf8'));","","  // package.json","  if ('babel' in info) {","    info = info.babel;","  }","","  if ('env' in info) {","    let ourEnv = process.env.BABEL_ENV || process.env.NODE_ENV || 'development';","    info = info.env[ourEnv];","  }","","  // Are we still package.json (i.e. is there no babel info whatsoever?)","  if ('name' in info && 'version' in info) {","    let appRoot = _path2.default.dirname(file);","    return createCompilerHostFromConfiguration({","      appRoot: appRoot,","      options: getDefaultConfiguration(appRoot),","      rootCacheDir,","      sourceMapPath","    });","  }","","  return createCompilerHostFromConfiguration({","    appRoot: _path2.default.dirname(file),","    options: {","      'application/javascript': info","    },","    rootCacheDir,","    sourceMapPath","  });","}","","function createCompilerHostFromConfigFileSync(file) {","  let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","  let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","  let info = JSON.parse(_fs2.default.readFileSync(file, 'utf8'));","","  if ('env' in info) {","    let ourEnv = process.env.ELECTRON_COMPILE_ENV || process.env.NODE_ENV || 'development';","    info = info.env[ourEnv];","  }","","  return createCompilerHostFromConfiguration({","    appRoot: _path2.default.dirname(file),","    options: info,","    rootCacheDir,","    sourceMapPath","  });","}","","function createCompilerHostFromProjectRootSync(rootDir) {","  let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","  let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","  let compilerc = _path2.default.join(rootDir, '.compilerc');","  if (statSyncNoException(compilerc)) {","    d(`Found a .compilerc at ${compilerc}, using it`);","    return createCompilerHostFromConfigFileSync(compilerc, rootCacheDir, sourceMapPath);","  }","","  let babelrc = _path2.default.join(rootDir, '.babelrc');","  if (statSyncNoException(babelrc)) {","    d(`Found a .babelrc at ${babelrc}, using it`);","    return createCompilerHostFromBabelRcSync(babelrc, rootCacheDir, sourceMapPath);","  }","","  d(`Using package.json or default parameters at ${rootDir}`);","  return createCompilerHostFromBabelRcSync(_path2.default.join(rootDir, 'package.json'), rootCacheDir, sourceMapPath);","}","","/**"," * Returns what electron-compile would use as a default rootCacheDir. Usually only"," * used for debugging purposes"," *"," * @return {string}  A path that may or may not exist where electron-compile would"," *                   set up a development mode cache."," */","function calculateDefaultCompileCacheDirectory() {","  let tmpDir = process.env.TEMP || process.env.TMPDIR || '/tmp';","  let hash = require('crypto').createHash('md5').update(process.execPath).digest('hex');","","  let cacheDir = _path2.default.join(tmpDir, `compileCache_${hash}`);","  _mkdirp2.default.sync(cacheDir);","","  d(`Using default cache directory: ${cacheDir}`);","  return cacheDir;","}","","function createSourceMapDirectory(sourceMapPath) {","  _mkdirp2.default.sync(sourceMapPath);","  d(`Using separate sourcemap path at ${sourceMapPath}`);","}","","function versionToFloat(ver) {","  return parseFloat(ver.replace(/^([^\\.]\\.[^\\.])\\..*$/, '$1'));","}","","function getElectronVersion(rootDir) {","  if (process.versions.electron) {","    return versionToFloat(process.versions.electron);","  }","","  let ourPkgJson = require(_path2.default.join(rootDir, 'package.json'));","","  let version = ['electron-prebuilt-compile', 'electron'].map(mod => {","    if (ourPkgJson.devDependencies && ourPkgJson.devDependencies[mod]) {","      // NB: lol this code","      let verRange = ourPkgJson.devDependencies[mod];","      let m = verRange.match(/(\\d+\\.\\d+\\.\\d+)/);","      if (m && m[1]) return m[1];","    }","","    try {","      return process.mainModule.require(`${mod}/package.json`).version;","    } catch (e) {","      // NB: This usually doesn't work, but sometimes maybe?","    }","","    try {","      let p = _path2.default.join(rootDir, mod, 'package.json');","      return require(p).version;","    } catch (e) {","      return null;","    }","  }).find(x => !!x);","","  if (!version) {","    throw new Error(\"Can't automatically discover the version of Electron, you probably need a .compilerc file\");","  }","","  return versionToFloat(version);","}","","/**"," * Returns the default .configrc if no configuration information can be found."," *"," * @return {Object}  A list of default config settings for electron-compiler."," */","function getDefaultConfiguration(rootDir) {","  return {","    'application/javascript': {","      \"presets\": [[\"env\", {","        \"targets\": {","          \"electron\": getElectronVersion(rootDir)","        }","      }], \"react\"],","      \"sourceMaps\": \"inline\"","    }","  };","}","","/**"," * Allows you to create new instances of all compilers that are supported by"," * electron-compile and use them directly. Currently supports Babel, CoffeeScript,"," * TypeScript, Less, and Jade."," *"," * @return {Object}  An Object whose Keys are MIME types, and whose values"," * are instances of @{link CompilerBase}."," */","function createCompilers() {","  if (!allCompilerClasses) {","    // First we want to see if electron-compilers itself has been installed with","    // devDependencies. If that's not the case, check to see if","    // electron-compilers is installed as a peer dependency (probably as a","    // devDependency of the root project).","    const locations = ['electron-compilers', '../../electron-compilers'];","","    for (let location of locations) {","      try {","        allCompilerClasses = require(location);","      } catch (e) {","        // Yolo","      }","    }","","    if (!allCompilerClasses) {","      throw new Error(\"Electron compilers not found but were requested to be loaded\");","    }","  }","","  // NB: Note that this code is carefully set up so that InlineHtmlCompiler","  // (i.e. classes with `createFromCompilers`) initially get an empty object,","  // but will have a reference to the final result of what we return, which","  // resolves the circular dependency we'd otherwise have here.","  let ret = {};","  let instantiatedClasses = allCompilerClasses.map(Klass => {","    if ('createFromCompilers' in Klass) {","      return Klass.createFromCompilers(ret);","    } else {","      return new Klass();","    }","  });","","  instantiatedClasses.reduce((acc, x) => {","    let Klass = Object.getPrototypeOf(x).constructor;","","    for (let type of Klass.getInputMimeTypes()) {","      acc[type] = x;","    }","    return acc;","  }, ret);","","  return ret;","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"l":{"3":1,"6":1,"18":1,"19":1,"20":0,"21":0,"23":0,"26":0,"27":0,"30":0,"31":0,"32":0,"36":0,"37":0,"38":0,"46":0,"56":1,"57":0,"73":1,"74":1,"75":0,"76":0,"78":0,"80":0,"81":0,"82":0,"85":0,"93":1,"94":0,"116":1,"117":1,"118":0,"119":0,"121":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"129":0,"132":0,"133":0,"134":0,"135":0,"138":0,"139":0,"142":1,"143":0,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"157":1,"159":1,"161":1,"163":1,"165":1,"167":1,"169":1,"171":1,"173":1,"175":1,"177":1,"179":1,"181":1,"183":1,"185":1,"187":7,"189":3,"191":1,"195":1,"197":1,"198":0,"199":0,"202":0,"203":0,"205":0,"217":1,"218":0,"219":0,"221":0,"223":0,"224":0,"226":0,"228":0,"230":0,"233":0,"234":0,"236":0,"237":0,"239":0,"270":1,"271":0,"272":0,"273":0,"275":0,"276":0,"278":0,"279":0,"282":0,"283":0,"286":0,"287":0,"288":0,"291":0,"292":0,"301":1,"302":0,"303":0,"304":0,"306":0,"307":0,"310":0,"311":0,"313":0,"314":0,"315":0,"316":0,"317":0,"320":0,"321":0,"322":0,"323":0,"327":0,"328":0,"329":0,"332":0,"333":0,"336":0,"340":0,"341":0,"342":0,"343":1,"344":0,"345":0,"347":0,"350":0,"351":0,"354":0,"355":0,"356":0,"360":0,"361":0,"362":0,"370":0,"380":1,"381":0,"382":0,"384":0,"386":0,"387":0,"388":0,"391":0,"399":1,"400":0,"401":0,"403":0,"404":0,"405":0,"406":0,"409":0,"410":0,"411":0,"412":0,"415":0,"416":0,"426":1,"427":0,"428":0,"430":0,"431":0,"433":0,"434":0,"437":1,"438":0,"439":0,"442":1,"443":0,"446":1,"447":0,"448":0,"451":0,"453":0,"454":0,"456":0,"457":0,"458":0,"461":0,"462":0,"467":0,"468":0,"469":0,"471":0,"473":0,"475":0,"476":0,"479":0,"487":1,"488":0,"508":1,"509":0,"514":0,"516":0,"517":0,"518":0,"524":0,"525":0,"533":0,"534":0,"535":0,"536":0,"538":0,"542":0,"543":0,"545":0,"546":0,"548":0,"551":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/promise.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":67}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.pzlib = exports.pfs = undefined;","","var _pify = require('pify');","","var _pify2 = _interopRequireDefault(_pify);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// NB: We do this so that every module doesn't have to run pify","// on fs and zlib","","","/**"," * @private"," */","const pfs = exports.pfs = (0, _pify2.default)(require('fs'));","","/**"," * @private"," */","const pzlib = exports.pzlib = (0, _pify2.default)(require('zlib'));","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcm9taXNlLmpzIl0sIm5hbWVzIjpbInBmcyIsInJlcXVpcmUiLCJwemxpYiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQTtBQUNBOzs7QUFHQTs7O0FBR08sTUFBTUEsb0JBQU0sb0JBQUtDLFFBQVEsSUFBUixDQUFMLENBQVo7O0FBRVA7OztBQUdPLE1BQU1DLHdCQUFRLG9CQUFLRCxRQUFRLE1BQVIsQ0FBTCxDQUFkIiwiZmlsZSI6InByb21pc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGlmeSBmcm9tICdwaWZ5JztcclxuXHJcbi8vIE5COiBXZSBkbyB0aGlzIHNvIHRoYXQgZXZlcnkgbW9kdWxlIGRvZXNuJ3QgaGF2ZSB0byBydW4gcGlmeVxyXG4vLyBvbiBmcyBhbmQgemxpYlxyXG5cclxuXHJcbi8qKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKi8gXHJcbmV4cG9ydCBjb25zdCBwZnMgPSBwaWZ5KHJlcXVpcmUoJ2ZzJykpO1xyXG5cclxuLyoqXHJcbiAqIEBwcml2YXRlXHJcbiAqLyBcclxuZXhwb3J0IGNvbnN0IHB6bGliID0gcGlmeShyZXF1aXJlKCd6bGliJykpO1xyXG4iXX0="],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"21":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/file-change-cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/file-change-cache.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}}},"2":{"name":"_asyncToGenerator","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":40},"end":{"line":27,"column":52}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":110},"end":{"line":27,"column":137}}},"5":{"name":"step","line":27,"loc":{"start":{"line":27,"column":139},"end":{"line":27,"column":163}}},"6":{"name":"(anonymous_6)","line":27,"loc":{"start":{"line":27,"column":341},"end":{"line":27,"column":358}}},"7":{"name":"(anonymous_7)","line":27,"loc":{"start":{"line":27,"column":384},"end":{"line":27,"column":399}}},"8":{"name":"(anonymous_8)","line":43,"loc":{"start":{"line":43,"column":13},"end":{"line":43,"column":23}}},"9":{"name":"(anonymous_9)","line":52,"loc":{"start":{"line":52,"column":21},"end":{"line":52,"column":40}}},"10":{"name":"(anonymous_10)","line":72,"loc":{"start":{"line":72,"column":21},"end":{"line":72,"column":37}}},"11":{"name":"(anonymous_11)","line":95,"loc":{"start":{"line":95,"column":21},"end":{"line":95,"column":37}}},"12":{"name":"(anonymous_12)","line":97,"loc":{"start":{"line":97,"column":29},"end":{"line":97,"column":42}}},"13":{"name":"(anonymous_13)","line":123,"loc":{"start":{"line":123,"column":16},"end":{"line":123,"column":35}}},"14":{"name":"(anonymous_14)","line":126,"loc":{"start":{"line":126,"column":29},"end":{"line":126,"column":42}}},"15":{"name":"(anonymous_15)","line":180,"loc":{"start":{"line":180,"column":22},"end":{"line":180,"column":41}}},"16":{"name":"(anonymous_16)","line":181,"loc":{"start":{"line":181,"column":29},"end":{"line":181,"column":42}}},"17":{"name":"(anonymous_17)","line":200,"loc":{"start":{"line":200,"column":22},"end":{"line":200,"column":41}}},"18":{"name":"(anonymous_18)","line":233,"loc":{"start":{"line":233,"column":16},"end":{"line":233,"column":35}}},"19":{"name":"(anonymous_19)","line":238,"loc":{"start":{"line":238,"column":29},"end":{"line":238,"column":42}}},"20":{"name":"(anonymous_20)","line":255,"loc":{"start":{"line":255,"column":14},"end":{"line":255,"column":17}}},"21":{"name":"(anonymous_21)","line":266,"loc":{"start":{"line":266,"column":6},"end":{"line":266,"column":17}}},"22":{"name":"(anonymous_22)","line":269,"loc":{"start":{"line":269,"column":29},"end":{"line":269,"column":42}}},"23":{"name":"(anonymous_23)","line":277,"loc":{"start":{"line":277,"column":22},"end":{"line":277,"column":41}}},"24":{"name":"(anonymous_24)","line":278,"loc":{"start":{"line":278,"column":29},"end":{"line":278,"column":42}}},"25":{"name":"(anonymous_25)","line":294,"loc":{"start":{"line":294,"column":20},"end":{"line":294,"column":39}}},"26":{"name":"(anonymous_26)","line":358,"loc":{"start":{"line":358,"column":10},"end":{"line":358,"column":21}}},"27":{"name":"(anonymous_27)","line":365,"loc":{"start":{"line":365,"column":26},"end":{"line":365,"column":45}}},"28":{"name":"(anonymous_28)","line":385,"loc":{"start":{"line":385,"column":28},"end":{"line":385,"column":37}}},"29":{"name":"(anonymous_29)","line":410,"loc":{"start":{"line":410,"column":24},"end":{"line":410,"column":35}}},"30":{"name":"(anonymous_30)","line":419,"loc":{"start":{"line":419,"column":21},"end":{"line":419,"column":34}}},"31":{"name":"(anonymous_31)","line":430,"loc":{"start":{"line":430,"column":27},"end":{"line":430,"column":36}}},"32":{"name":"(anonymous_32)","line":452,"loc":{"start":{"line":452,"column":34},"end":{"line":452,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":49}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":95}},"12":{"start":{"line":25,"column":39},"end":{"line":25,"column":93}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":458}},"14":{"start":{"line":27,"column":33},"end":{"line":27,"column":456}},"15":{"start":{"line":27,"column":54},"end":{"line":27,"column":90}},"16":{"start":{"line":27,"column":91},"end":{"line":27,"column":453}},"17":{"start":{"line":27,"column":139},"end":{"line":27,"column":428}},"18":{"start":{"line":27,"column":165},"end":{"line":27,"column":263}},"19":{"start":{"line":27,"column":171},"end":{"line":27,"column":196}},"20":{"start":{"line":27,"column":197},"end":{"line":27,"column":220}},"21":{"start":{"line":27,"column":239},"end":{"line":27,"column":253}},"22":{"start":{"line":27,"column":254},"end":{"line":27,"column":261}},"23":{"start":{"line":27,"column":264},"end":{"line":27,"column":426}},"24":{"start":{"line":27,"column":281},"end":{"line":27,"column":296}},"25":{"start":{"line":27,"column":306},"end":{"line":27,"column":424}},"26":{"start":{"line":27,"column":360},"end":{"line":27,"column":380}},"27":{"start":{"line":27,"column":401},"end":{"line":27,"column":420}},"28":{"start":{"line":27,"column":429},"end":{"line":27,"column":449}},"29":{"start":{"line":29,"column":0},"end":{"line":29,"column":65}},"30":{"start":{"line":44,"column":4},"end":{"line":44,"column":100}},"31":{"start":{"line":46,"column":4},"end":{"line":46,"column":57}},"32":{"start":{"line":48,"column":4},"end":{"line":48,"column":43}},"33":{"start":{"line":49,"column":4},"end":{"line":49,"column":26}},"34":{"start":{"line":53,"column":4},"end":{"line":53,"column":67}},"35":{"start":{"line":54,"column":4},"end":{"line":54,"column":33}},"36":{"start":{"line":54,"column":17},"end":{"line":54,"column":33}},"37":{"start":{"line":56,"column":4},"end":{"line":56,"column":51}},"38":{"start":{"line":73,"column":4},"end":{"line":73,"column":99}},"39":{"start":{"line":75,"column":4},"end":{"line":75,"column":61}},"40":{"start":{"line":76,"column":4},"end":{"line":76,"column":39}},"41":{"start":{"line":77,"column":4},"end":{"line":77,"column":39}},"42":{"start":{"line":79,"column":4},"end":{"line":79,"column":15}},"43":{"start":{"line":96,"column":4},"end":{"line":96,"column":99}},"44":{"start":{"line":97,"column":4},"end":{"line":102,"column":9}},"45":{"start":{"line":98,"column":6},"end":{"line":98,"column":56}},"46":{"start":{"line":100,"column":6},"end":{"line":100,"column":50}},"47":{"start":{"line":101,"column":6},"end":{"line":101,"column":117}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":21}},"49":{"start":{"line":126,"column":4},"end":{"line":177,"column":9}},"50":{"start":{"line":127,"column":6},"end":{"line":127,"column":79}},"51":{"start":{"line":129,"column":6},"end":{"line":130,"column":52}},"52":{"start":{"line":133,"column":6},"end":{"line":135,"column":7}},"53":{"start":{"line":134,"column":8},"end":{"line":134,"column":31}},"54":{"start":{"line":137,"column":6},"end":{"line":137,"column":68}},"55":{"start":{"line":139,"column":6},"end":{"line":140,"column":27}},"56":{"start":{"line":143,"column":6},"end":{"line":152,"column":7}},"57":{"start":{"line":144,"column":8},"end":{"line":144,"column":103}},"58":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"59":{"start":{"line":147,"column":10},"end":{"line":147,"column":33}},"60":{"start":{"line":150,"column":8},"end":{"line":150,"column":106}},"61":{"start":{"line":151,"column":8},"end":{"line":151,"column":44}},"62":{"start":{"line":154,"column":6},"end":{"line":154,"column":69}},"63":{"start":{"line":156,"column":6},"end":{"line":158,"column":40}},"64":{"start":{"line":161,"column":6},"end":{"line":167,"column":8}},"65":{"start":{"line":169,"column":6},"end":{"line":169,"column":58}},"66":{"start":{"line":170,"column":6},"end":{"line":170,"column":87}},"67":{"start":{"line":172,"column":6},"end":{"line":176,"column":7}},"68":{"start":{"line":173,"column":8},"end":{"line":173,"column":51}},"69":{"start":{"line":175,"column":8},"end":{"line":175,"column":51}},"70":{"start":{"line":181,"column":4},"end":{"line":190,"column":9}},"71":{"start":{"line":182,"column":6},"end":{"line":182,"column":59}},"72":{"start":{"line":183,"column":6},"end":{"line":183,"column":85}},"73":{"start":{"line":183,"column":35},"end":{"line":183,"column":85}},"74":{"start":{"line":185,"column":6},"end":{"line":189,"column":8}},"75":{"start":{"line":201,"column":4},"end":{"line":201,"column":66}},"76":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"77":{"start":{"line":203,"column":6},"end":{"line":203,"column":52}},"78":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"79":{"start":{"line":209,"column":6},"end":{"line":209,"column":60}},"80":{"start":{"line":212,"column":4},"end":{"line":212,"column":48}},"81":{"start":{"line":214,"column":4},"end":{"line":220,"column":5}},"82":{"start":{"line":215,"column":6},"end":{"line":219,"column":7}},"83":{"start":{"line":216,"column":8},"end":{"line":216,"column":68}},"84":{"start":{"line":217,"column":8},"end":{"line":217,"column":103}},"85":{"start":{"line":218,"column":8},"end":{"line":218,"column":85}},"86":{"start":{"line":222,"column":4},"end":{"line":222,"column":36}},"87":{"start":{"line":234,"column":4},"end":{"line":234,"column":22}},"88":{"start":{"line":236,"column":4},"end":{"line":236,"column":94}},"89":{"start":{"line":237,"column":4},"end":{"line":237,"column":96}},"90":{"start":{"line":238,"column":4},"end":{"line":247,"column":9}},"91":{"start":{"line":239,"column":6},"end":{"line":239,"column":90}},"92":{"start":{"line":240,"column":6},"end":{"line":240,"column":91}},"93":{"start":{"line":242,"column":6},"end":{"line":244,"column":7}},"94":{"start":{"line":243,"column":8},"end":{"line":243,"column":98}},"95":{"start":{"line":246,"column":6},"end":{"line":246,"column":19}},"96":{"start":{"line":256,"column":4},"end":{"line":256,"column":68}},"97":{"start":{"line":267,"column":4},"end":{"line":267,"column":22}},"98":{"start":{"line":269,"column":4},"end":{"line":274,"column":9}},"99":{"start":{"line":270,"column":6},"end":{"line":270,"column":41}},"100":{"start":{"line":272,"column":6},"end":{"line":272,"column":78}},"101":{"start":{"line":273,"column":6},"end":{"line":273,"column":50}},"102":{"start":{"line":278,"column":4},"end":{"line":291,"column":9}},"103":{"start":{"line":279,"column":6},"end":{"line":279,"column":62}},"104":{"start":{"line":280,"column":6},"end":{"line":280,"column":62}},"105":{"start":{"line":282,"column":6},"end":{"line":285,"column":7}},"106":{"start":{"line":283,"column":8},"end":{"line":283,"column":83}},"107":{"start":{"line":284,"column":8},"end":{"line":284,"column":61}},"108":{"start":{"line":287,"column":6},"end":{"line":287,"column":79}},"109":{"start":{"line":288,"column":6},"end":{"line":288,"column":96}},"110":{"start":{"line":290,"column":6},"end":{"line":290,"column":54}},"111":{"start":{"line":295,"column":4},"end":{"line":295,"column":66}},"112":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"113":{"start":{"line":298,"column":6},"end":{"line":298,"column":71}},"114":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"115":{"start":{"line":304,"column":6},"end":{"line":304,"column":79}},"116":{"start":{"line":307,"column":4},"end":{"line":307,"column":48}},"117":{"start":{"line":309,"column":4},"end":{"line":317,"column":5}},"118":{"start":{"line":310,"column":6},"end":{"line":314,"column":7}},"119":{"start":{"line":311,"column":8},"end":{"line":311,"column":68}},"120":{"start":{"line":312,"column":8},"end":{"line":312,"column":103}},"121":{"start":{"line":313,"column":8},"end":{"line":313,"column":85}},"122":{"start":{"line":316,"column":6},"end":{"line":316,"column":29}},"123":{"start":{"line":319,"column":4},"end":{"line":319,"column":55}},"124":{"start":{"line":320,"column":4},"end":{"line":320,"column":37}},"125":{"start":{"line":321,"column":4},"end":{"line":321,"column":25}},"126":{"start":{"line":322,"column":4},"end":{"line":322,"column":83}},"127":{"start":{"line":322,"column":33},"end":{"line":322,"column":83}},"128":{"start":{"line":324,"column":4},"end":{"line":331,"column":5}},"129":{"start":{"line":325,"column":6},"end":{"line":327,"column":7}},"130":{"start":{"line":326,"column":8},"end":{"line":326,"column":31}},"131":{"start":{"line":329,"column":6},"end":{"line":329,"column":104}},"132":{"start":{"line":330,"column":6},"end":{"line":330,"column":41}},"133":{"start":{"line":333,"column":4},"end":{"line":333,"column":80}},"134":{"start":{"line":335,"column":4},"end":{"line":337,"column":54}},"135":{"start":{"line":340,"column":4},"end":{"line":346,"column":6}},"136":{"start":{"line":348,"column":4},"end":{"line":348,"column":55}},"137":{"start":{"line":349,"column":4},"end":{"line":349,"column":84}},"138":{"start":{"line":351,"column":4},"end":{"line":355,"column":5}},"139":{"start":{"line":352,"column":6},"end":{"line":352,"column":49}},"140":{"start":{"line":354,"column":6},"end":{"line":354,"column":49}},"141":{"start":{"line":359,"column":4},"end":{"line":359,"column":37}},"142":{"start":{"line":361,"column":4},"end":{"line":361,"column":74}},"143":{"start":{"line":362,"column":4},"end":{"line":362,"column":46}},"144":{"start":{"line":366,"column":4},"end":{"line":366,"column":58}},"145":{"start":{"line":367,"column":4},"end":{"line":367,"column":60}},"146":{"start":{"line":369,"column":4},"end":{"line":372,"column":5}},"147":{"start":{"line":370,"column":6},"end":{"line":370,"column":81}},"148":{"start":{"line":371,"column":6},"end":{"line":371,"column":59}},"149":{"start":{"line":374,"column":4},"end":{"line":374,"column":75}},"150":{"start":{"line":375,"column":4},"end":{"line":375,"column":94}},"151":{"start":{"line":377,"column":4},"end":{"line":377,"column":52}},"152":{"start":{"line":386,"column":4},"end":{"line":386,"column":31}},"153":{"start":{"line":387,"column":4},"end":{"line":387,"column":37}},"154":{"start":{"line":387,"column":23},"end":{"line":387,"column":37}},"155":{"start":{"line":389,"column":4},"end":{"line":389,"column":25}},"156":{"start":{"line":392,"column":4},"end":{"line":394,"column":5}},"157":{"start":{"line":393,"column":6},"end":{"line":393,"column":45}},"158":{"start":{"line":393,"column":30},"end":{"line":393,"column":45}},"159":{"start":{"line":397,"column":4},"end":{"line":399,"column":5}},"160":{"start":{"line":398,"column":6},"end":{"line":398,"column":25}},"161":{"start":{"line":401,"column":4},"end":{"line":401,"column":46}},"162":{"start":{"line":402,"column":4},"end":{"line":402,"column":30}},"163":{"start":{"line":411,"column":4},"end":{"line":411,"column":115}},"164":{"start":{"line":420,"column":4},"end":{"line":420,"column":38}},"165":{"start":{"line":421,"column":4},"end":{"line":421,"column":76}},"166":{"start":{"line":431,"column":4},"end":{"line":431,"column":40}},"167":{"start":{"line":431,"column":27},"end":{"line":431,"column":40}},"168":{"start":{"line":432,"column":4},"end":{"line":432,"column":68}},"169":{"start":{"line":434,"column":4},"end":{"line":434,"column":42}},"170":{"start":{"line":436,"column":4},"end":{"line":436,"column":17}},"171":{"start":{"line":437,"column":4},"end":{"line":441,"column":5}},"172":{"start":{"line":438,"column":6},"end":{"line":438,"column":101}},"173":{"start":{"line":438,"column":37},"end":{"line":438,"column":99}},"174":{"start":{"line":440,"column":6},"end":{"line":440,"column":99}},"175":{"start":{"line":440,"column":37},"end":{"line":440,"column":97}},"176":{"start":{"line":443,"column":4},"end":{"line":443,"column":20}},"177":{"start":{"line":453,"column":4},"end":{"line":453,"column":25}},"178":{"start":{"line":454,"column":4},"end":{"line":454,"column":23}},"179":{"start":{"line":455,"column":4},"end":{"line":455,"column":22}},"180":{"start":{"line":456,"column":4},"end":{"line":456,"column":39}},"181":{"start":{"line":456,"column":25},"end":{"line":456,"column":39}},"182":{"start":{"line":457,"column":4},"end":{"line":457,"column":40}},"183":{"start":{"line":457,"column":26},"end":{"line":457,"column":40}},"184":{"start":{"line":459,"column":4},"end":{"line":466,"column":5}},"185":{"start":{"line":460,"column":6},"end":{"line":460,"column":32}},"186":{"start":{"line":461,"column":6},"end":{"line":461,"column":47}},"187":{"start":{"line":461,"column":32},"end":{"line":461,"column":47}},"188":{"start":{"line":462,"column":6},"end":{"line":462,"column":43}},"189":{"start":{"line":462,"column":28},"end":{"line":462,"column":43}},"190":{"start":{"line":463,"column":6},"end":{"line":463,"column":33}},"191":{"start":{"line":463,"column":20},"end":{"line":463,"column":33}},"192":{"start":{"line":465,"column":6},"end":{"line":465,"column":48}},"193":{"start":{"line":465,"column":36},"end":{"line":465,"column":48}},"194":{"start":{"line":468,"column":4},"end":{"line":468,"column":44}},"195":{"start":{"line":468,"column":32},"end":{"line":468,"column":44}},"196":{"start":{"line":470,"column":4},"end":{"line":470,"column":41}},"197":{"start":{"line":470,"column":28},"end":{"line":470,"column":41}},"198":{"start":{"line":471,"column":4},"end":{"line":471,"column":44}},"199":{"start":{"line":474,"column":0},"end":{"line":474,"column":35}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":70},"end":{"line":25,"column":73}},{"start":{"line":25,"column":76},"end":{"line":25,"column":92}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":46},"end":{"line":25,"column":49}},{"start":{"line":25,"column":53},"end":{"line":25,"column":67}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":264},"end":{"line":27,"column":264}},{"start":{"line":27,"column":264},"end":{"line":27,"column":264}}]},"4":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":79},"end":{"line":44,"column":91}},{"start":{"line":44,"column":94},"end":{"line":44,"column":99}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":26},"end":{"line":44,"column":46}},{"start":{"line":44,"column":50},"end":{"line":44,"column":76}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":79},"end":{"line":73,"column":91}},{"start":{"line":73,"column":94},"end":{"line":73,"column":98}}]},"8":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":26},"end":{"line":73,"column":46}},{"start":{"line":73,"column":50},"end":{"line":73,"column":76}}]},"9":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":79},"end":{"line":96,"column":91}},{"start":{"line":96,"column":94},"end":{"line":96,"column":98}}]},"10":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":26},"end":{"line":96,"column":46}},{"start":{"line":96,"column":50},"end":{"line":96,"column":76}}]},"11":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"12":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":6}},{"start":{"line":143,"column":6},"end":{"line":143,"column":6}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"14":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":57},"end":{"line":163,"column":67}},{"start":{"line":163,"column":71},"end":{"line":163,"column":73}}]},"15":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":52},"end":{"line":165,"column":62}},{"start":{"line":165,"column":66},"end":{"line":165,"column":68}}]},"16":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]},"17":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"18":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":10},"end":{"line":183,"column":15}},{"start":{"line":183,"column":19},"end":{"line":183,"column":33}}]},"19":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"20":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"21":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"22":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":6}},{"start":{"line":215,"column":6},"end":{"line":215,"column":6}}]},"23":{"line":236,"type":"cond-expr","locations":[{"start":{"line":236,"column":74},"end":{"line":236,"column":86}},{"start":{"line":236,"column":89},"end":{"line":236,"column":93}}]},"24":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":21},"end":{"line":236,"column":41}},{"start":{"line":236,"column":45},"end":{"line":236,"column":71}}]},"25":{"line":237,"type":"cond-expr","locations":[{"start":{"line":237,"column":76},"end":{"line":237,"column":88}},{"start":{"line":237,"column":91},"end":{"line":237,"column":95}}]},"26":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":23},"end":{"line":237,"column":43}},{"start":{"line":237,"column":47},"end":{"line":237,"column":73}}]},"27":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":19},"end":{"line":239,"column":29}},{"start":{"line":239,"column":33},"end":{"line":239,"column":89}}]},"28":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":21},"end":{"line":240,"column":33}},{"start":{"line":240,"column":38},"end":{"line":240,"column":89}}]},"29":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":6},"end":{"line":242,"column":6}},{"start":{"line":242,"column":6},"end":{"line":242,"column":6}}]},"30":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":17},"end":{"line":243,"column":55}},{"start":{"line":243,"column":59},"end":{"line":243,"column":96}}]},"31":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":6},"end":{"line":282,"column":6}},{"start":{"line":282,"column":6},"end":{"line":282,"column":6}}]},"32":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"33":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"34":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"35":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":6},"end":{"line":310,"column":6}},{"start":{"line":310,"column":6},"end":{"line":310,"column":6}}]},"36":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]},"37":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":13}},{"start":{"line":322,"column":17},"end":{"line":322,"column":31}}]},"38":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"39":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"40":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":10},"end":{"line":325,"column":35}},{"start":{"line":325,"column":39},"end":{"line":325,"column":63}}]},"41":{"line":342,"type":"binary-expr","locations":[{"start":{"line":342,"column":55},"end":{"line":342,"column":65}},{"start":{"line":342,"column":69},"end":{"line":342,"column":71}}]},"42":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":50},"end":{"line":344,"column":60}},{"start":{"line":344,"column":64},"end":{"line":344,"column":66}}]},"43":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"44":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":369,"column":4}},{"start":{"line":369,"column":4},"end":{"line":369,"column":4}}]},"45":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":387,"column":4}},{"start":{"line":387,"column":4},"end":{"line":387,"column":4}}]},"46":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":6},"end":{"line":393,"column":6}},{"start":{"line":393,"column":6},"end":{"line":393,"column":6}}]},"47":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":4},"end":{"line":397,"column":4}},{"start":{"line":397,"column":4},"end":{"line":397,"column":4}}]},"48":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":14},"end":{"line":411,"column":70}},{"start":{"line":411,"column":74},"end":{"line":411,"column":113}}]},"49":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":4},"end":{"line":431,"column":4}},{"start":{"line":431,"column":4},"end":{"line":431,"column":4}}]},"50":{"line":432,"type":"cond-expr","locations":[{"start":{"line":432,"column":37},"end":{"line":432,"column":43}},{"start":{"line":432,"column":46},"end":{"line":432,"column":67}}]},"51":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":4},"end":{"line":437,"column":4}},{"start":{"line":437,"column":4},"end":{"line":437,"column":4}}]},"52":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":4},"end":{"line":456,"column":4}},{"start":{"line":456,"column":4},"end":{"line":456,"column":4}}]},"53":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":4},"end":{"line":457,"column":4}},{"start":{"line":457,"column":4},"end":{"line":457,"column":4}}]},"54":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":6}},{"start":{"line":461,"column":6},"end":{"line":461,"column":6}}]},"55":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":10},"end":{"line":461,"column":21}},{"start":{"line":461,"column":25},"end":{"line":461,"column":30}}]},"56":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":6},"end":{"line":462,"column":6}},{"start":{"line":462,"column":6},"end":{"line":462,"column":6}}]},"57":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":10},"end":{"line":462,"column":16}},{"start":{"line":462,"column":20},"end":{"line":462,"column":26}}]},"58":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":6},"end":{"line":463,"column":6}},{"start":{"line":463,"column":6},"end":{"line":463,"column":6}}]},"59":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"60":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":4},"end":{"line":468,"column":4}},{"start":{"line":468,"column":4},"end":{"line":468,"column":4}}]},"61":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":4},"end":{"line":470,"column":4}},{"start":{"line":470,"column":4},"end":{"line":470,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _zlib = require('zlib');","","var _zlib2 = _interopRequireDefault(_zlib);","","var _crypto = require('crypto');","","var _crypto2 = _interopRequireDefault(_crypto);","","var _promise = require('./promise');","","var _sanitizePaths = require('./sanitize-paths');","","var _sanitizePaths2 = _interopRequireDefault(_sanitizePaths);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","const d = require('debug')('electron-compile:file-change-cache');","","/**"," * This class caches information about files and determines whether they have"," * changed contents or not. Most importantly, this class caches the hash of seen"," * files so that at development time, we don't have to recalculate them constantly."," *"," * This class is also the core of how electron-compile runs quickly in production"," * mode - after precompilation, the cache is serialized along with the rest of the"," * data in {@link CompilerHost}, so that when we load the app in production mode,"," * we don't end up calculating hashes of file content at all, only using the contents"," * of this cache."," */","class FileChangedCache {","  constructor(appRoot) {","    let failOnCacheMiss = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;","","    this.appRoot = (0, _sanitizePaths2.default)(appRoot);","","    this.failOnCacheMiss = failOnCacheMiss;","    this.changeCache = {};","  }","","  static removePrefix(needle, haystack) {","    let idx = haystack.toLowerCase().indexOf(needle.toLowerCase());","    if (idx < 0) return haystack;","","    return haystack.substring(idx + needle.length);","  }","","  /**","   * Allows you to create a FileChangedCache from serialized data saved from","   * {@link getSavedData}.","   *","   * @param  {Object} data  Saved data from getSavedData.","   *","   * @param  {string} appRoot  The top-level directory for your application (i.e.","   *                           the one which has your package.json).","   *","   * @param  {boolean} failOnCacheMiss (optional)  If True, cache misses will throw.","   *","   * @return {FileChangedCache}","   */","  static loadFromData(data, appRoot) {","    let failOnCacheMiss = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;","","    let ret = new FileChangedCache(appRoot, failOnCacheMiss);","    ret.changeCache = data.changeCache;","    ret.originalAppRoot = data.appRoot;","","    return ret;","  }","","  /**","   * Allows you to create a FileChangedCache from serialized data saved from","   * {@link save}.","   *","   * @param  {string} file  Saved data from save.","   *","   * @param  {string} appRoot  The top-level directory for your application (i.e.","   *                           the one which has your package.json).","   *","   * @param  {boolean} failOnCacheMiss (optional)  If True, cache misses will throw.","   *","   * @return {Promise<FileChangedCache>}","   */","  static loadFromFile(file, appRoot) {","    let failOnCacheMiss = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;","    return _asyncToGenerator(function* () {","      d(`Loading canned FileChangedCache from ${file}`);","","      let buf = yield _promise.pfs.readFile(file);","      return FileChangedCache.loadFromData(JSON.parse((yield _promise.pzlib.gunzip(buf))), appRoot, failOnCacheMiss);","    })();","  }","","  /**","   * Returns information about a given file, including its hash. This method is","   * the main method for this cache.","   *","   * @param  {string} absoluteFilePath  The path to a file to retrieve info on.","   *","   * @return {Promise<Object>}","   *","   * @property {string} hash  The SHA1 hash of the file","   * @property {boolean} isMinified  True if the file is minified","   * @property {boolean} isInNodeModules  True if the file is in a library directory","   * @property {boolean} hasSourceMap  True if the file has a source map","   * @property {boolean} isFileBinary  True if the file is not a text file","   * @property {Buffer} binaryData (optional)  The buffer that was read if the file","   *                                           was binary and there was a cache miss.","   * @property {string} code (optional)  The string that was read if the file","   *                                     was text and there was a cache miss","   */","  getHashForPath(absoluteFilePath) {","    var _this = this;","","    return _asyncToGenerator(function* () {","      var _getCacheEntryForPath = _this.getCacheEntryForPath(absoluteFilePath);","","      let cacheEntry = _getCacheEntryForPath.cacheEntry,","          cacheKey = _getCacheEntryForPath.cacheKey;","","","      if (_this.failOnCacheMiss) {","        return cacheEntry.info;","      }","","      var _ref = yield _this.getInfoForCacheEntry(absoluteFilePath);","","      let ctime = _ref.ctime,","          size = _ref.size;","","","      if (cacheEntry) {","        let fileHasChanged = yield _this.hasFileChanged(absoluteFilePath, cacheEntry, { ctime, size });","","        if (!fileHasChanged) {","          return cacheEntry.info;","        }","","        d(`Invalidating cache entry: ${cacheEntry.ctime} === ${ctime} && ${cacheEntry.size} === ${size}`);","        delete _this.changeCache.cacheEntry;","      }","","      var _ref2 = yield _this.calculateHashForFile(absoluteFilePath);","","      let digest = _ref2.digest,","          sourceCode = _ref2.sourceCode,","          binaryData = _ref2.binaryData;","","","      let info = {","        hash: digest,","        isMinified: FileChangedCache.contentsAreMinified(sourceCode || ''),","        isInNodeModules: FileChangedCache.isInNodeModules(absoluteFilePath),","        hasSourceMap: FileChangedCache.hasSourceMap(sourceCode || ''),","        isFileBinary: !!binaryData","      };","","      _this.changeCache[cacheKey] = { ctime, size, info };","      d(`Cache entry for ${cacheKey}: ${JSON.stringify(_this.changeCache[cacheKey])}`);","","      if (binaryData) {","        return Object.assign({ binaryData }, info);","      } else {","        return Object.assign({ sourceCode }, info);","      }","    })();","  }","","  getInfoForCacheEntry(absoluteFilePath) {","    return _asyncToGenerator(function* () {","      let stat = yield _promise.pfs.stat(absoluteFilePath);","      if (!stat || !stat.isFile()) throw new Error(`Can't stat ${absoluteFilePath}`);","","      return {","        stat,","        ctime: stat.ctime.getTime(),","        size: stat.size","      };","    })();","  }","","  /**","   * Gets the cached data for a file path, if it exists.","   *","   * @param  {string} absoluteFilePath  The path to a file to retrieve info on.","   *","   * @return {Object}","   */","  getCacheEntryForPath(absoluteFilePath) {","    let cacheKey = (0, _sanitizePaths2.default)(absoluteFilePath);","    if (this.appRoot) {","      cacheKey = cacheKey.replace(this.appRoot, '');","    }","","    // NB: We do this because x-require will include an absolute path from the","    // original built app and we need to still grok it","    if (this.originalAppRoot) {","      cacheKey = cacheKey.replace(this.originalAppRoot, '');","    }","","    let cacheEntry = this.changeCache[cacheKey];","","    if (this.failOnCacheMiss) {","      if (!cacheEntry) {","        d(`Tried to read file cache entry for ${absoluteFilePath}`);","        d(`cacheKey: ${cacheKey}, appRoot: ${this.appRoot}, originalAppRoot: ${this.originalAppRoot}`);","        throw new Error(`Asked for ${absoluteFilePath} but it was not precompiled!`);","      }","    }","","    return { cacheEntry, cacheKey };","  }","","  /**","   * Checks the file cache to see if a file has changed.","   *","   * @param  {string} absoluteFilePath  The path to a file to retrieve info on.","   * @param  {Object} cacheEntry  Cache data from {@link getCacheEntryForPath}","   *","   * @return {boolean}","   */","  hasFileChanged(absoluteFilePath) {","    var _this2 = this;","","    let cacheEntry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","    let fileHashInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","    return _asyncToGenerator(function* () {","      cacheEntry = cacheEntry || _this2.getCacheEntryForPath(absoluteFilePath).cacheEntry;","      fileHashInfo = fileHashInfo || (yield _this2.getInfoForCacheEntry(absoluteFilePath));","","      if (cacheEntry) {","        return !(cacheEntry.ctime >= fileHashInfo.ctime && cacheEntry.size === fileHashInfo.size);","      }","","      return false;","    })();","  }","","  /**","   * Returns data that can passed to {@link loadFromData} to rehydrate this cache.","   *","   * @return {Object}","   */","  getSavedData() {","    return { changeCache: this.changeCache, appRoot: this.appRoot };","  }","","  /**","   * Serializes this object's data to a file.","   *","   * @param {string} filePath  The path to save data to.","   *","   * @return {Promise} Completion.","   */","  save(filePath) {","    var _this3 = this;","","    return _asyncToGenerator(function* () {","      let toSave = _this3.getSavedData();","","      let buf = yield _promise.pzlib.gzip(new Buffer(JSON.stringify(toSave)));","      yield _promise.pfs.writeFile(filePath, buf);","    })();","  }","","  calculateHashForFile(absoluteFilePath) {","    return _asyncToGenerator(function* () {","      let buf = yield _promise.pfs.readFile(absoluteFilePath);","      let encoding = FileChangedCache.detectFileEncoding(buf);","","      if (!encoding) {","        let digest = _crypto2.default.createHash('sha1').update(buf).digest('hex');","        return { sourceCode: null, digest, binaryData: buf };","      }","","      let sourceCode = yield _promise.pfs.readFile(absoluteFilePath, encoding);","      let digest = _crypto2.default.createHash('sha1').update(sourceCode, 'utf8').digest('hex');","","      return { sourceCode, digest, binaryData: null };","    })();","  }","","  getHashForPathSync(absoluteFilePath) {","    let cacheKey = (0, _sanitizePaths2.default)(absoluteFilePath);","","    if (this.appRoot) {","      cacheKey = FileChangedCache.removePrefix(this.appRoot, cacheKey);","    }","","    // NB: We do this because x-require will include an absolute path from the","    // original built app and we need to still grok it","    if (this.originalAppRoot) {","      cacheKey = FileChangedCache.removePrefix(this.originalAppRoot, cacheKey);","    }","","    let cacheEntry = this.changeCache[cacheKey];","","    if (this.failOnCacheMiss) {","      if (!cacheEntry) {","        d(`Tried to read file cache entry for ${absoluteFilePath}`);","        d(`cacheKey: ${cacheKey}, appRoot: ${this.appRoot}, originalAppRoot: ${this.originalAppRoot}`);","        throw new Error(`Asked for ${absoluteFilePath} but it was not precompiled!`);","      }","","      return cacheEntry.info;","    }","","    let stat = _fs2.default.statSync(absoluteFilePath);","    let ctime = stat.ctime.getTime();","    let size = stat.size;","    if (!stat || !stat.isFile()) throw new Error(`Can't stat ${absoluteFilePath}`);","","    if (cacheEntry) {","      if (cacheEntry.ctime >= ctime && cacheEntry.size === size) {","        return cacheEntry.info;","      }","","      d(`Invalidating cache entry: ${cacheEntry.ctime} === ${ctime} && ${cacheEntry.size} === ${size}`);","      delete this.changeCache.cacheEntry;","    }","","    var _calculateHashForFile = this.calculateHashForFileSync(absoluteFilePath);","","    let digest = _calculateHashForFile.digest,","        sourceCode = _calculateHashForFile.sourceCode,","        binaryData = _calculateHashForFile.binaryData;","","","    let info = {","      hash: digest,","      isMinified: FileChangedCache.contentsAreMinified(sourceCode || ''),","      isInNodeModules: FileChangedCache.isInNodeModules(absoluteFilePath),","      hasSourceMap: FileChangedCache.hasSourceMap(sourceCode || ''),","      isFileBinary: !!binaryData","    };","","    this.changeCache[cacheKey] = { ctime, size, info };","    d(`Cache entry for ${cacheKey}: ${JSON.stringify(this.changeCache[cacheKey])}`);","","    if (binaryData) {","      return Object.assign({ binaryData }, info);","    } else {","      return Object.assign({ sourceCode }, info);","    }","  }","","  saveSync(filePath) {","    let toSave = this.getSavedData();","","    let buf = _zlib2.default.gzipSync(new Buffer(JSON.stringify(toSave)));","    _fs2.default.writeFileSync(filePath, buf);","  }","","  calculateHashForFileSync(absoluteFilePath) {","    let buf = _fs2.default.readFileSync(absoluteFilePath);","    let encoding = FileChangedCache.detectFileEncoding(buf);","","    if (!encoding) {","      let digest = _crypto2.default.createHash('sha1').update(buf).digest('hex');","      return { sourceCode: null, digest, binaryData: buf };","    }","","    let sourceCode = _fs2.default.readFileSync(absoluteFilePath, encoding);","    let digest = _crypto2.default.createHash('sha1').update(sourceCode, 'utf8').digest('hex');","","    return { sourceCode, digest, binaryData: null };","  }","","  /**","   * Determines via some statistics whether a file is likely to be minified.","   *","   * @private","   */","  static contentsAreMinified(source) {","    let length = source.length;","    if (length > 1024) length = 1024;","","    let newlineCount = 0;","","    // Roll through the characters and determine the average line length","    for (let i = 0; i < source.length; i++) {","      if (source[i] === '\\n') newlineCount++;","    }","","    // No Newlines? Any file other than a super small one is minified","    if (newlineCount === 0) {","      return length > 80;","    }","","    let avgLineLength = length / newlineCount;","    return avgLineLength > 80;","  }","","  /**","   * Determines whether a path is in node_modules or the Electron init code","   *","   * @private","   */","  static isInNodeModules(filePath) {","    return !!(filePath.match(/(node_modules|bower_components)[\\\\\\/]/i) || filePath.match(/(atom|electron)\\.asar/));","  }","","  /**","   * Returns whether a file has an inline source map","   *","   * @private","   */","  static hasSourceMap(sourceCode) {","    const trimmed = sourceCode.trim();","    return trimmed.lastIndexOf('//# sourceMap') > trimmed.lastIndexOf('\\n');","  }","","  /**","   * Determines the encoding of a file from the two most common encodings by trying","   * to decode it then looking for encoding errors","   *","   * @private","   */","  static detectFileEncoding(buffer) {","    if (buffer.length < 1) return false;","    let buf = buffer.length < 4096 ? buffer : buffer.slice(0, 4096);","","    const encodings = ['utf8', 'utf16le'];","","    let encoding;","    if (buffer.length <= 128) {","      encoding = encodings.find(x => Buffer.compare(new Buffer(buffer.toString(), x), buffer) === 0);","    } else {","      encoding = encodings.find(x => !FileChangedCache.containsControlCharacters(buf.toString(x)));","    }","","    return encoding;","  }","","  /**","   * Determines whether a string is likely to be poorly encoded by looking for","   * control characters above a certain threshold","   *","   * @private","   */","  static containsControlCharacters(str) {","    let controlCount = 0;","    let spaceCount = 0;","    let threshold = 2;","    if (str.length > 64) threshold = 4;","    if (str.length > 512) threshold = 8;","","    for (let i = 0; i < str.length; i++) {","      let c = str.charCodeAt(i);","      if (c === 65536 || c < 8) controlCount++;","      if (c > 14 && c < 32) controlCount++;","      if (c === 32) spaceCount++;","","      if (controlCount > threshold) return true;","    }","","    if (spaceCount < threshold) return true;","","    if (controlCount === 0) return false;","    return controlCount / str.length < 0.02;","  }","}","exports.default = FileChangedCache;","//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":4,"27":1,"29":1,"44":0,"46":0,"48":0,"49":0,"53":0,"54":0,"56":0,"73":0,"75":0,"76":0,"77":0,"79":0,"96":0,"97":0,"98":0,"100":0,"101":0,"124":0,"126":0,"127":0,"129":0,"133":0,"134":0,"137":0,"139":0,"143":0,"144":0,"146":0,"147":0,"150":0,"151":0,"154":0,"156":0,"161":0,"169":0,"170":0,"172":0,"173":0,"175":0,"181":0,"182":0,"183":0,"185":0,"201":0,"202":0,"203":0,"208":0,"209":0,"212":0,"214":0,"215":0,"216":0,"217":0,"218":0,"222":0,"234":0,"236":0,"237":0,"238":0,"239":0,"240":0,"242":0,"243":0,"246":0,"256":0,"267":0,"269":0,"270":0,"272":0,"273":0,"278":0,"279":0,"280":0,"282":0,"283":0,"284":0,"287":0,"288":0,"290":0,"295":0,"297":0,"298":0,"303":0,"304":0,"307":0,"309":0,"310":0,"311":0,"312":0,"313":0,"316":0,"319":0,"320":0,"321":0,"322":0,"324":0,"325":0,"326":0,"329":0,"330":0,"333":0,"335":0,"340":0,"348":0,"349":0,"351":0,"352":0,"354":0,"359":0,"361":0,"362":0,"366":0,"367":0,"369":0,"370":0,"371":0,"374":0,"375":0,"377":0,"386":0,"387":0,"389":0,"392":0,"393":0,"397":0,"398":0,"401":0,"402":0,"411":0,"420":0,"421":0,"431":0,"432":0,"434":0,"436":0,"437":0,"438":0,"440":0,"443":0,"453":0,"454":0,"455":0,"456":0,"457":0,"459":0,"460":0,"461":0,"462":0,"463":0,"465":0,"468":0,"470":0,"471":0,"474":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/sanitize-paths.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/sanitize-paths.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"cachedRealpath","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}}},"3":{"name":"sanitizeFilePath","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":59}},"11":{"start":{"line":21,"column":0},"end":{"line":30,"column":1}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":33}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":22}},"14":{"start":{"line":23,"column":11},"end":{"line":23,"column":22}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":37}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":57}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":28}},"18":{"start":{"line":29,"column":2},"end":{"line":29,"column":13}},"19":{"start":{"line":39,"column":0},"end":{"line":60,"column":1}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":25}},"21":{"start":{"line":40,"column":13},"end":{"line":40,"column":25}},"22":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"23":{"start":{"line":49,"column":2},"end":{"line":49,"column":49}},"24":{"start":{"line":50,"column":2},"end":{"line":57,"column":3}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":36}},"26":{"start":{"line":56,"column":4},"end":{"line":56,"column":66}},"27":{"start":{"line":59,"column":2},"end":{"line":59,"column":42}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = sanitizeFilePath;","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _lruCache = require('lru-cache');","","var _lruCache2 = _interopRequireDefault(_lruCache);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","const d = require('debug')('electron-compile:sanitize-paths');","const realpathCache = (0, _lruCache2.default)({ max: 32 });","","function cachedRealpath(p) {","  let ret = realpathCache.get(p);","  if (ret) return ret;","","  ret = _fs2.default.realpathSync(p);","  d(`Cache miss for cachedRealpath: '${p}' => '${ret}'`);","","  realpathCache.set(p, ret);","  return ret;","}","","/**"," * Electron will sometimes hand us paths that don't match the platform if they"," * were derived from a URL (i.e. 'C:/Users/Paul/...'), whereas the cache will have"," * saved paths with backslashes."," *"," * @private"," */","function sanitizeFilePath(file) {","  if (!file) return file;","","  // NB: Some people add symlinks into system directories. node.js will internally","  // call realpath on paths that it finds, which will break our cache resolution.","  // We need to catch this scenario and fix it up. The tricky part is, some parts","  // of Electron will give us the pre-resolved paths, and others will give us the","  // post-resolved one. We need to handle both.","","  let realFile = null;","  let parts = file.split(/[\\\\\\/]app.asar[\\\\\\/]/);","  if (!parts[1]) {","    // Not using an ASAR archive","    realFile = cachedRealpath(file);","  } else {","    // We do all this silliness to work around","    // https://github.com/atom/electron/issues/4610","    realFile = `${cachedRealpath(parts[0])}/app.asar/${parts[1]}`;","  }","","  return realFile.replace(/[\\\\\\/]/g, '/');","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zYW5pdGl6ZS1wYXRocy5qcyJdLCJuYW1lcyI6WyJzYW5pdGl6ZUZpbGVQYXRoIiwiZCIsInJlcXVpcmUiLCJyZWFscGF0aENhY2hlIiwibWF4IiwiY2FjaGVkUmVhbHBhdGgiLCJwIiwicmV0IiwiZ2V0IiwicmVhbHBhdGhTeW5jIiwic2V0IiwiZmlsZSIsInJlYWxGaWxlIiwicGFydHMiLCJzcGxpdCIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiI7Ozs7O2tCQXdCd0JBLGdCOztBQXhCeEI7Ozs7QUFDQTs7Ozs7O0FBRUEsTUFBTUMsSUFBSUMsUUFBUSxPQUFSLEVBQWlCLGlDQUFqQixDQUFWO0FBQ0EsTUFBTUMsZ0JBQWdCLHdCQUFTLEVBQUVDLEtBQUssRUFBUCxFQUFULENBQXRCOztBQUVBLFNBQVNDLGNBQVQsQ0FBd0JDLENBQXhCLEVBQTJCO0FBQ3pCLE1BQUlDLE1BQU1KLGNBQWNLLEdBQWQsQ0FBa0JGLENBQWxCLENBQVY7QUFDQSxNQUFJQyxHQUFKLEVBQVMsT0FBT0EsR0FBUDs7QUFFVEEsUUFBTSxhQUFHRSxZQUFILENBQWdCSCxDQUFoQixDQUFOO0FBQ0FMLElBQUcsbUNBQWtDSyxDQUFFLFNBQVFDLEdBQUksR0FBbkQ7O0FBRUFKLGdCQUFjTyxHQUFkLENBQWtCSixDQUFsQixFQUFxQkMsR0FBckI7QUFDQSxTQUFPQSxHQUFQO0FBQ0Q7O0FBRUQ7Ozs7Ozs7QUFPZSxTQUFTUCxnQkFBVCxDQUEwQlcsSUFBMUIsRUFBZ0M7QUFDN0MsTUFBSSxDQUFDQSxJQUFMLEVBQVcsT0FBT0EsSUFBUDs7QUFFWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQUlDLFdBQVcsSUFBZjtBQUNBLE1BQUlDLFFBQVFGLEtBQUtHLEtBQUwsQ0FBVyxzQkFBWCxDQUFaO0FBQ0EsTUFBSSxDQUFDRCxNQUFNLENBQU4sQ0FBTCxFQUFlO0FBQ2I7QUFDQUQsZUFBV1AsZUFBZU0sSUFBZixDQUFYO0FBQ0QsR0FIRCxNQUdPO0FBQ0w7QUFDQTtBQUNBQyxlQUFZLEdBQUVQLGVBQWVRLE1BQU0sQ0FBTixDQUFmLENBQXlCLGFBQVlBLE1BQU0sQ0FBTixDQUFTLEVBQTVEO0FBQ0Q7O0FBRUQsU0FBT0QsU0FBU0csT0FBVCxDQUFpQixTQUFqQixFQUE0QixHQUE1QixDQUFQO0FBQ0QiLCJmaWxlIjoic2FuaXRpemUtcGF0aHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IExSVUNhY2hlIGZyb20gJ2xydS1jYWNoZSc7XG5cbmNvbnN0IGQgPSByZXF1aXJlKCdkZWJ1ZycpKCdlbGVjdHJvbi1jb21waWxlOnNhbml0aXplLXBhdGhzJyk7XG5jb25zdCByZWFscGF0aENhY2hlID0gTFJVQ2FjaGUoeyBtYXg6IDMyIH0pO1xuXG5mdW5jdGlvbiBjYWNoZWRSZWFscGF0aChwKSB7XG4gIGxldCByZXQgPSByZWFscGF0aENhY2hlLmdldChwKTtcbiAgaWYgKHJldCkgcmV0dXJuIHJldDtcblxuICByZXQgPSBmcy5yZWFscGF0aFN5bmMocCk7XG4gIGQoYENhY2hlIG1pc3MgZm9yIGNhY2hlZFJlYWxwYXRoOiAnJHtwfScgPT4gJyR7cmV0fSdgKTtcblxuICByZWFscGF0aENhY2hlLnNldChwLCByZXQpO1xuICByZXR1cm4gcmV0O1xufVxuXG4vKipcbiAqIEVsZWN0cm9uIHdpbGwgc29tZXRpbWVzIGhhbmQgdXMgcGF0aHMgdGhhdCBkb24ndCBtYXRjaCB0aGUgcGxhdGZvcm0gaWYgdGhleVxuICogd2VyZSBkZXJpdmVkIGZyb20gYSBVUkwgKGkuZS4gJ0M6L1VzZXJzL1BhdWwvLi4uJyksIHdoZXJlYXMgdGhlIGNhY2hlIHdpbGwgaGF2ZVxuICogc2F2ZWQgcGF0aHMgd2l0aCBiYWNrc2xhc2hlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzYW5pdGl6ZUZpbGVQYXRoKGZpbGUpIHtcbiAgaWYgKCFmaWxlKSByZXR1cm4gZmlsZTtcblxuICAvLyBOQjogU29tZSBwZW9wbGUgYWRkIHN5bWxpbmtzIGludG8gc3lzdGVtIGRpcmVjdG9yaWVzLiBub2RlLmpzIHdpbGwgaW50ZXJuYWxseVxuICAvLyBjYWxsIHJlYWxwYXRoIG9uIHBhdGhzIHRoYXQgaXQgZmluZHMsIHdoaWNoIHdpbGwgYnJlYWsgb3VyIGNhY2hlIHJlc29sdXRpb24uXG4gIC8vIFdlIG5lZWQgdG8gY2F0Y2ggdGhpcyBzY2VuYXJpbyBhbmQgZml4IGl0IHVwLiBUaGUgdHJpY2t5IHBhcnQgaXMsIHNvbWUgcGFydHNcbiAgLy8gb2YgRWxlY3Ryb24gd2lsbCBnaXZlIHVzIHRoZSBwcmUtcmVzb2x2ZWQgcGF0aHMsIGFuZCBvdGhlcnMgd2lsbCBnaXZlIHVzIHRoZVxuICAvLyBwb3N0LXJlc29sdmVkIG9uZS4gV2UgbmVlZCB0byBoYW5kbGUgYm90aC5cblxuICBsZXQgcmVhbEZpbGUgPSBudWxsO1xuICBsZXQgcGFydHMgPSBmaWxlLnNwbGl0KC9bXFxcXFxcL11hcHAuYXNhcltcXFxcXFwvXS8pO1xuICBpZiAoIXBhcnRzWzFdKSB7XG4gICAgLy8gTm90IHVzaW5nIGFuIEFTQVIgYXJjaGl2ZVxuICAgIHJlYWxGaWxlID0gY2FjaGVkUmVhbHBhdGgoZmlsZSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gV2UgZG8gYWxsIHRoaXMgc2lsbGluZXNzIHRvIHdvcmsgYXJvdW5kXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2F0b20vZWxlY3Ryb24vaXNzdWVzLzQ2MTBcbiAgICByZWFsRmlsZSA9IGAke2NhY2hlZFJlYWxwYXRoKHBhcnRzWzBdKX0vYXBwLmFzYXIvJHtwYXJ0c1sxXX1gO1xuICB9XG5cbiAgcmV0dXJuIHJlYWxGaWxlLnJlcGxhY2UoL1tcXFxcXFwvXS9nLCAnLycpO1xufVxuIl19"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":1,"21":1,"22":0,"23":0,"25":0,"26":0,"28":0,"29":0,"39":1,"40":0,"48":0,"49":0,"50":0,"52":0,"56":0,"59":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/compiler-host.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/compiler-host.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":7,"47":1,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[3,4],"9":[7,7],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0,0,0],"93":[0,0],"94":[0,0,0],"95":[0,0],"96":[0,0,0]},"f":{"1":1,"2":0,"3":0,"4":7,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":21},"end":{"line":7,"column":33}}},"2":{"name":"sliceIterator","line":7,"loc":{"start":{"line":7,"column":35},"end":{"line":7,"column":66}}},"3":{"name":"(anonymous_3)","line":7,"loc":{"start":{"line":7,"column":436},"end":{"line":7,"column":454}}},"4":{"name":"_interopRequireDefault","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":37}}},"5":{"name":"_asyncToGenerator","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":40},"end":{"line":47,"column":52}}},"7":{"name":"(anonymous_7)","line":47,"loc":{"start":{"line":47,"column":110},"end":{"line":47,"column":137}}},"8":{"name":"step","line":47,"loc":{"start":{"line":47,"column":139},"end":{"line":47,"column":163}}},"9":{"name":"(anonymous_9)","line":47,"loc":{"start":{"line":47,"column":341},"end":{"line":47,"column":358}}},"10":{"name":"(anonymous_10)","line":47,"loc":{"start":{"line":47,"column":384},"end":{"line":47,"column":399}}},"11":{"name":"(anonymous_11)","line":108,"loc":{"start":{"line":108,"column":13},"end":{"line":108,"column":70}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":40},"end":{"line":146,"column":64}}},"13":{"name":"(anonymous_13)","line":148,"loc":{"start":{"line":148,"column":29},"end":{"line":148,"column":42}}},"14":{"name":"(anonymous_14)","line":155,"loc":{"start":{"line":155,"column":57},"end":{"line":155,"column":75}}},"15":{"name":"(anonymous_15)","line":193,"loc":{"start":{"line":193,"column":32},"end":{"line":193,"column":77}}},"16":{"name":"(anonymous_16)","line":195,"loc":{"start":{"line":195,"column":29},"end":{"line":195,"column":42}}},"17":{"name":"(anonymous_17)","line":202,"loc":{"start":{"line":202,"column":42},"end":{"line":202,"column":55}}},"18":{"name":"(anonymous_18)","line":218,"loc":{"start":{"line":218,"column":19},"end":{"line":218,"column":22}}},"19":{"name":"(anonymous_19)","line":221,"loc":{"start":{"line":221,"column":29},"end":{"line":221,"column":42}}},"20":{"name":"(anonymous_20)","line":222,"loc":{"start":{"line":222,"column":81},"end":{"line":222,"column":99}}},"21":{"name":"(anonymous_21)","line":262,"loc":{"start":{"line":262,"column":9},"end":{"line":262,"column":20}}},"22":{"name":"(anonymous_22)","line":271,"loc":{"start":{"line":271,"column":17},"end":{"line":271,"column":28}}},"23":{"name":"(anonymous_23)","line":274,"loc":{"start":{"line":274,"column":29},"end":{"line":274,"column":42}}},"24":{"name":"(anonymous_24)","line":334,"loc":{"start":{"line":334,"column":13},"end":{"line":334,"column":24}}},"25":{"name":"(anonymous_25)","line":337,"loc":{"start":{"line":337,"column":29},"end":{"line":337,"column":42}}},"26":{"name":"(anonymous_26)","line":363,"loc":{"start":{"line":363,"column":46},"end":{"line":363,"column":76}}},"27":{"name":"(anonymous_27)","line":374,"loc":{"start":{"line":374,"column":17},"end":{"line":374,"column":48}}},"28":{"name":"(anonymous_28)","line":377,"loc":{"start":{"line":377,"column":29},"end":{"line":377,"column":42}}},"29":{"name":"(anonymous_29)","line":438,"loc":{"start":{"line":438,"column":12},"end":{"line":438,"column":28}}},"30":{"name":"(anonymous_30)","line":442,"loc":{"start":{"line":442,"column":29},"end":{"line":442,"column":42}}},"31":{"name":"(anonymous_31)","line":443,"loc":{"start":{"line":443,"column":36},"end":{"line":443,"column":48}}},"32":{"name":"(anonymous_32)","line":447,"loc":{"start":{"line":447,"column":57},"end":{"line":447,"column":70}}},"33":{"name":"(anonymous_33)","line":456,"loc":{"start":{"line":456,"column":23},"end":{"line":456,"column":26}}},"34":{"name":"(anonymous_34)","line":469,"loc":{"start":{"line":469,"column":13},"end":{"line":469,"column":24}}},"35":{"name":"(anonymous_35)","line":473,"loc":{"start":{"line":473,"column":44},"end":{"line":473,"column":68}}},"36":{"name":"(anonymous_36)","line":492,"loc":{"start":{"line":492,"column":36},"end":{"line":492,"column":81}}},"37":{"name":"(anonymous_37)","line":509,"loc":{"start":{"line":509,"column":23},"end":{"line":509,"column":26}}},"38":{"name":"(anonymous_38)","line":535,"loc":{"start":{"line":535,"column":21},"end":{"line":535,"column":32}}},"39":{"name":"(anonymous_39)","line":597,"loc":{"start":{"line":597,"column":17},"end":{"line":597,"column":28}}},"40":{"name":"(anonymous_40)","line":626,"loc":{"start":{"line":626,"column":21},"end":{"line":626,"column":52}}},"41":{"name":"(anonymous_41)","line":672,"loc":{"start":{"line":672,"column":16},"end":{"line":672,"column":32}}},"42":{"name":"(anonymous_42)","line":675,"loc":{"start":{"line":675,"column":34},"end":{"line":675,"column":46}}},"43":{"name":"(anonymous_43)","line":694,"loc":{"start":{"line":694,"column":24},"end":{"line":694,"column":27}}},"44":{"name":"(anonymous_44)","line":706,"loc":{"start":{"line":706,"column":26},"end":{"line":706,"column":37}}},"45":{"name":"(anonymous_45)","line":716,"loc":{"start":{"line":716,"column":36},"end":{"line":716,"column":70}}},"46":{"name":"(anonymous_46)","line":717,"loc":{"start":{"line":717,"column":29},"end":{"line":717,"column":42}}},"47":{"name":"(anonymous_47)","line":745,"loc":{"start":{"line":745,"column":40},"end":{"line":745,"column":74}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":664}},"3":{"start":{"line":7,"column":35},"end":{"line":7,"column":428}},"4":{"start":{"line":7,"column":68},"end":{"line":7,"column":82}},"5":{"start":{"line":7,"column":83},"end":{"line":7,"column":97}},"6":{"start":{"line":7,"column":98},"end":{"line":7,"column":113}},"7":{"start":{"line":7,"column":114},"end":{"line":7,"column":133}},"8":{"start":{"line":7,"column":134},"end":{"line":7,"column":413}},"9":{"start":{"line":7,"column":140},"end":{"line":7,"column":283}},"10":{"start":{"line":7,"column":226},"end":{"line":7,"column":246}},"11":{"start":{"line":7,"column":247},"end":{"line":7,"column":281}},"12":{"start":{"line":7,"column":275},"end":{"line":7,"column":281}},"13":{"start":{"line":7,"column":300},"end":{"line":7,"column":310}},"14":{"start":{"line":7,"column":311},"end":{"line":7,"column":320}},"15":{"start":{"line":7,"column":333},"end":{"line":7,"column":411}},"16":{"start":{"line":7,"column":339},"end":{"line":7,"column":379}},"17":{"start":{"line":7,"column":364},"end":{"line":7,"column":379}},"18":{"start":{"line":7,"column":392},"end":{"line":7,"column":409}},"19":{"start":{"line":7,"column":400},"end":{"line":7,"column":409}},"20":{"start":{"line":7,"column":414},"end":{"line":7,"column":426}},"21":{"start":{"line":7,"column":429},"end":{"line":7,"column":659}},"22":{"start":{"line":7,"column":456},"end":{"line":7,"column":656}},"23":{"start":{"line":7,"column":482},"end":{"line":7,"column":493}},"24":{"start":{"line":7,"column":501},"end":{"line":7,"column":656}},"25":{"start":{"line":7,"column":539},"end":{"line":7,"column":568}},"26":{"start":{"line":7,"column":578},"end":{"line":7,"column":654}},"27":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"28":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"29":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"30":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"31":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"32":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"33":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}},"34":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}},"35":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}},"36":{"start":{"line":27,"column":0},"end":{"line":27,"column":46}},"37":{"start":{"line":29,"column":0},"end":{"line":29,"column":47}},"38":{"start":{"line":31,"column":0},"end":{"line":31,"column":59}},"39":{"start":{"line":33,"column":0},"end":{"line":33,"column":54}},"40":{"start":{"line":35,"column":0},"end":{"line":35,"column":65}},"41":{"start":{"line":37,"column":0},"end":{"line":37,"column":56}},"42":{"start":{"line":39,"column":0},"end":{"line":39,"column":67}},"43":{"start":{"line":41,"column":0},"end":{"line":41,"column":49}},"44":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}},"45":{"start":{"line":45,"column":0},"end":{"line":45,"column":95}},"46":{"start":{"line":45,"column":39},"end":{"line":45,"column":93}},"47":{"start":{"line":47,"column":0},"end":{"line":47,"column":458}},"48":{"start":{"line":47,"column":33},"end":{"line":47,"column":456}},"49":{"start":{"line":47,"column":54},"end":{"line":47,"column":90}},"50":{"start":{"line":47,"column":91},"end":{"line":47,"column":453}},"51":{"start":{"line":47,"column":139},"end":{"line":47,"column":428}},"52":{"start":{"line":47,"column":165},"end":{"line":47,"column":263}},"53":{"start":{"line":47,"column":171},"end":{"line":47,"column":196}},"54":{"start":{"line":47,"column":197},"end":{"line":47,"column":220}},"55":{"start":{"line":47,"column":239},"end":{"line":47,"column":253}},"56":{"start":{"line":47,"column":254},"end":{"line":47,"column":261}},"57":{"start":{"line":47,"column":264},"end":{"line":47,"column":426}},"58":{"start":{"line":47,"column":281},"end":{"line":47,"column":296}},"59":{"start":{"line":47,"column":306},"end":{"line":47,"column":424}},"60":{"start":{"line":47,"column":360},"end":{"line":47,"column":380}},"61":{"start":{"line":47,"column":401},"end":{"line":47,"column":420}},"62":{"start":{"line":47,"column":429},"end":{"line":47,"column":449}},"63":{"start":{"line":49,"column":0},"end":{"line":49,"column":61}},"64":{"start":{"line":51,"column":0},"end":{"line":51,"column":35}},"65":{"start":{"line":54,"column":0},"end":{"line":61,"column":2}},"66":{"start":{"line":109,"column":4},"end":{"line":109,"column":100}},"67":{"start":{"line":110,"column":4},"end":{"line":110,"column":97}},"68":{"start":{"line":112,"column":4},"end":{"line":112,"column":59}},"69":{"start":{"line":113,"column":4},"end":{"line":113,"column":112}},"70":{"start":{"line":114,"column":4},"end":{"line":114,"column":48}},"71":{"start":{"line":116,"column":4},"end":{"line":122,"column":18}},"72":{"start":{"line":117,"column":6},"end":{"line":117,"column":44}},"73":{"start":{"line":118,"column":6},"end":{"line":118,"column":40}},"74":{"start":{"line":118,"column":29},"end":{"line":118,"column":40}},"75":{"start":{"line":120,"column":6},"end":{"line":120,"column":137}},"76":{"start":{"line":121,"column":6},"end":{"line":121,"column":17}},"77":{"start":{"line":147,"column":4},"end":{"line":147,"column":100}},"78":{"start":{"line":148,"column":4},"end":{"line":163,"column":9}},"79":{"start":{"line":149,"column":6},"end":{"line":149,"column":78}},"80":{"start":{"line":150,"column":6},"end":{"line":150,"column":52}},"81":{"start":{"line":151,"column":6},"end":{"line":151,"column":64}},"82":{"start":{"line":153,"column":6},"end":{"line":153,"column":104}},"83":{"start":{"line":155,"column":6},"end":{"line":160,"column":13}},"84":{"start":{"line":156,"column":8},"end":{"line":156,"column":36}},"85":{"start":{"line":157,"column":8},"end":{"line":157,"column":120}},"86":{"start":{"line":159,"column":8},"end":{"line":159,"column":19}},"87":{"start":{"line":162,"column":6},"end":{"line":162,"column":96}},"88":{"start":{"line":194,"column":4},"end":{"line":194,"column":100}},"89":{"start":{"line":195,"column":4},"end":{"line":208,"column":9}},"90":{"start":{"line":196,"column":6},"end":{"line":196,"column":78}},"91":{"start":{"line":197,"column":6},"end":{"line":197,"column":52}},"92":{"start":{"line":198,"column":6},"end":{"line":198,"column":64}},"93":{"start":{"line":200,"column":6},"end":{"line":200,"column":105}},"94":{"start":{"line":202,"column":6},"end":{"line":205,"column":9}},"95":{"start":{"line":203,"column":8},"end":{"line":203,"column":36}},"96":{"start":{"line":204,"column":8},"end":{"line":204,"column":69}},"97":{"start":{"line":207,"column":6},"end":{"line":207,"column":107}},"98":{"start":{"line":219,"column":4},"end":{"line":219,"column":21}},"99":{"start":{"line":221,"column":4},"end":{"line":245,"column":9}},"100":{"start":{"line":222,"column":6},"end":{"line":235,"column":13}},"101":{"start":{"line":223,"column":8},"end":{"line":223,"column":52}},"102":{"start":{"line":224,"column":8},"end":{"line":224,"column":64}},"103":{"start":{"line":226,"column":8},"end":{"line":231,"column":10}},"104":{"start":{"line":233,"column":8},"end":{"line":233,"column":21}},"105":{"start":{"line":234,"column":8},"end":{"line":234,"column":19}},"106":{"start":{"line":237,"column":6},"end":{"line":240,"column":8}},"107":{"start":{"line":242,"column":6},"end":{"line":242,"column":84}},"108":{"start":{"line":243,"column":6},"end":{"line":243,"column":76}},"109":{"start":{"line":244,"column":6},"end":{"line":244,"column":48}},"110":{"start":{"line":263,"column":4},"end":{"line":263,"column":91}},"111":{"start":{"line":272,"column":4},"end":{"line":272,"column":22}},"112":{"start":{"line":274,"column":4},"end":{"line":326,"column":9}},"113":{"start":{"line":276,"column":6},"end":{"line":276,"column":54}},"114":{"start":{"line":277,"column":6},"end":{"line":282,"column":7}},"115":{"start":{"line":278,"column":8},"end":{"line":281,"column":10}},"116":{"start":{"line":284,"column":6},"end":{"line":284,"column":75}},"117":{"start":{"line":288,"column":6},"end":{"line":288,"column":149}},"118":{"start":{"line":295,"column":6},"end":{"line":297,"column":7}},"119":{"start":{"line":296,"column":8},"end":{"line":296,"column":51}},"120":{"start":{"line":299,"column":6},"end":{"line":309,"column":7}},"121":{"start":{"line":300,"column":8},"end":{"line":300,"column":43}},"122":{"start":{"line":302,"column":8},"end":{"line":302,"column":48}},"123":{"start":{"line":304,"column":8},"end":{"line":306,"column":37}},"124":{"start":{"line":308,"column":8},"end":{"line":308,"column":54}},"125":{"start":{"line":311,"column":6},"end":{"line":311,"column":58}},"126":{"start":{"line":313,"column":6},"end":{"line":313,"column":44}},"127":{"start":{"line":315,"column":6},"end":{"line":317,"column":36}},"128":{"start":{"line":320,"column":6},"end":{"line":320,"column":32}},"129":{"start":{"line":321,"column":6},"end":{"line":323,"column":7}},"130":{"start":{"line":322,"column":8},"end":{"line":322,"column":101}},"131":{"start":{"line":325,"column":6},"end":{"line":325,"column":32}},"132":{"start":{"line":335,"column":4},"end":{"line":335,"column":22}},"133":{"start":{"line":337,"column":4},"end":{"line":366,"column":9}},"134":{"start":{"line":338,"column":6},"end":{"line":338,"column":33}},"135":{"start":{"line":340,"column":6},"end":{"line":340,"column":75}},"136":{"start":{"line":341,"column":6},"end":{"line":341,"column":54}},"137":{"start":{"line":343,"column":6},"end":{"line":343,"column":95}},"138":{"start":{"line":345,"column":6},"end":{"line":349,"column":7}},"139":{"start":{"line":346,"column":8},"end":{"line":346,"column":90}},"140":{"start":{"line":347,"column":8},"end":{"line":347,"column":110}},"141":{"start":{"line":348,"column":8},"end":{"line":348,"column":40}},"142":{"start":{"line":351,"column":6},"end":{"line":351,"column":149}},"143":{"start":{"line":353,"column":6},"end":{"line":356,"column":7}},"144":{"start":{"line":354,"column":8},"end":{"line":354,"column":66}},"145":{"start":{"line":355,"column":8},"end":{"line":355,"column":43}},"146":{"start":{"line":358,"column":6},"end":{"line":360,"column":7}},"147":{"start":{"line":359,"column":8},"end":{"line":359,"column":68}},"148":{"start":{"line":362,"column":6},"end":{"line":362,"column":58}},"149":{"start":{"line":363,"column":6},"end":{"line":365,"column":9}},"150":{"start":{"line":364,"column":8},"end":{"line":364,"column":68}},"151":{"start":{"line":375,"column":4},"end":{"line":375,"column":22}},"152":{"start":{"line":377,"column":4},"end":{"line":422,"column":9}},"153":{"start":{"line":378,"column":6},"end":{"line":378,"column":63}},"154":{"start":{"line":380,"column":6},"end":{"line":386,"column":7}},"155":{"start":{"line":381,"column":8},"end":{"line":385,"column":10}},"156":{"start":{"line":388,"column":6},"end":{"line":388,"column":19}},"157":{"start":{"line":389,"column":6},"end":{"line":389,"column":88}},"158":{"start":{"line":391,"column":6},"end":{"line":394,"column":7}},"159":{"start":{"line":392,"column":8},"end":{"line":392,"column":72}},"160":{"start":{"line":393,"column":8},"end":{"line":393,"column":92}},"161":{"start":{"line":396,"column":6},"end":{"line":396,"column":87}},"162":{"start":{"line":398,"column":6},"end":{"line":398,"column":79}},"163":{"start":{"line":399,"column":6},"end":{"line":399,"column":63}},"164":{"start":{"line":401,"column":6},"end":{"line":401,"column":97}},"165":{"start":{"line":403,"column":6},"end":{"line":403,"column":123}},"166":{"start":{"line":405,"column":6},"end":{"line":421,"column":7}},"167":{"start":{"line":407,"column":8},"end":{"line":407,"column":57}},"168":{"start":{"line":409,"column":8},"end":{"line":409,"column":129}},"169":{"start":{"line":411,"column":8},"end":{"line":411,"column":99}},"170":{"start":{"line":412,"column":8},"end":{"line":412,"column":81}},"171":{"start":{"line":414,"column":8},"end":{"line":418,"column":9}},"172":{"start":{"line":415,"column":10},"end":{"line":415,"column":89}},"173":{"start":{"line":417,"column":10},"end":{"line":417,"column":132}},"174":{"start":{"line":420,"column":8},"end":{"line":420,"column":138}},"175":{"start":{"line":439,"column":4},"end":{"line":439,"column":22}},"176":{"start":{"line":441,"column":4},"end":{"line":441,"column":97}},"177":{"start":{"line":442,"column":4},"end":{"line":453,"column":9}},"178":{"start":{"line":443,"column":6},"end":{"line":445,"column":8}},"179":{"start":{"line":444,"column":8},"end":{"line":444,"column":20}},"180":{"start":{"line":447,"column":6},"end":{"line":452,"column":9}},"181":{"start":{"line":448,"column":8},"end":{"line":448,"column":31}},"182":{"start":{"line":448,"column":24},"end":{"line":448,"column":31}},"183":{"start":{"line":450,"column":8},"end":{"line":450,"column":28}},"184":{"start":{"line":451,"column":8},"end":{"line":451,"column":61}},"185":{"start":{"line":457,"column":4},"end":{"line":462,"column":7}},"186":{"start":{"line":458,"column":6},"end":{"line":458,"column":43}},"187":{"start":{"line":460,"column":6},"end":{"line":460,"column":23}},"188":{"start":{"line":461,"column":6},"end":{"line":461,"column":15}},"189":{"start":{"line":470,"column":4},"end":{"line":470,"column":99}},"190":{"start":{"line":474,"column":4},"end":{"line":474,"column":100}},"191":{"start":{"line":476,"column":4},"end":{"line":476,"column":76}},"192":{"start":{"line":477,"column":4},"end":{"line":477,"column":48}},"193":{"start":{"line":478,"column":4},"end":{"line":478,"column":58}},"194":{"start":{"line":480,"column":4},"end":{"line":480,"column":102}},"195":{"start":{"line":482,"column":4},"end":{"line":487,"column":11}},"196":{"start":{"line":483,"column":6},"end":{"line":483,"column":34}},"197":{"start":{"line":484,"column":6},"end":{"line":484,"column":118}},"198":{"start":{"line":486,"column":6},"end":{"line":486,"column":17}},"199":{"start":{"line":489,"column":4},"end":{"line":489,"column":94}},"200":{"start":{"line":493,"column":4},"end":{"line":493,"column":100}},"201":{"start":{"line":495,"column":4},"end":{"line":495,"column":76}},"202":{"start":{"line":496,"column":4},"end":{"line":496,"column":48}},"203":{"start":{"line":497,"column":4},"end":{"line":497,"column":58}},"204":{"start":{"line":499,"column":4},"end":{"line":499,"column":103}},"205":{"start":{"line":501,"column":4},"end":{"line":504,"column":7}},"206":{"start":{"line":502,"column":6},"end":{"line":502,"column":34}},"207":{"start":{"line":503,"column":6},"end":{"line":503,"column":67}},"208":{"start":{"line":506,"column":4},"end":{"line":506,"column":105}},"209":{"start":{"line":510,"column":4},"end":{"line":523,"column":11}},"210":{"start":{"line":511,"column":6},"end":{"line":511,"column":49}},"211":{"start":{"line":512,"column":6},"end":{"line":512,"column":62}},"212":{"start":{"line":514,"column":6},"end":{"line":519,"column":8}},"213":{"start":{"line":521,"column":6},"end":{"line":521,"column":19}},"214":{"start":{"line":522,"column":6},"end":{"line":522,"column":17}},"215":{"start":{"line":525,"column":4},"end":{"line":528,"column":6}},"216":{"start":{"line":530,"column":4},"end":{"line":530,"column":81}},"217":{"start":{"line":531,"column":4},"end":{"line":531,"column":72}},"218":{"start":{"line":532,"column":4},"end":{"line":532,"column":44}},"219":{"start":{"line":537,"column":4},"end":{"line":537,"column":52}},"220":{"start":{"line":538,"column":4},"end":{"line":543,"column":5}},"221":{"start":{"line":539,"column":6},"end":{"line":542,"column":8}},"222":{"start":{"line":545,"column":4},"end":{"line":545,"column":69}},"223":{"start":{"line":548,"column":4},"end":{"line":553,"column":5}},"224":{"start":{"line":549,"column":6},"end":{"line":552,"column":8}},"225":{"start":{"line":557,"column":4},"end":{"line":557,"column":143}},"226":{"start":{"line":564,"column":4},"end":{"line":566,"column":5}},"227":{"start":{"line":565,"column":6},"end":{"line":565,"column":47}},"228":{"start":{"line":568,"column":4},"end":{"line":578,"column":5}},"229":{"start":{"line":569,"column":6},"end":{"line":569,"column":39}},"230":{"start":{"line":571,"column":6},"end":{"line":571,"column":57}},"231":{"start":{"line":573,"column":6},"end":{"line":575,"column":48}},"232":{"start":{"line":577,"column":6},"end":{"line":577,"column":52}},"233":{"start":{"line":580,"column":4},"end":{"line":580,"column":54}},"234":{"start":{"line":582,"column":4},"end":{"line":582,"column":49}},"235":{"start":{"line":584,"column":4},"end":{"line":586,"column":43}},"236":{"start":{"line":589,"column":4},"end":{"line":589,"column":30}},"237":{"start":{"line":590,"column":4},"end":{"line":592,"column":5}},"238":{"start":{"line":591,"column":6},"end":{"line":591,"column":99}},"239":{"start":{"line":594,"column":4},"end":{"line":594,"column":30}},"240":{"start":{"line":598,"column":4},"end":{"line":598,"column":31}},"241":{"start":{"line":600,"column":4},"end":{"line":600,"column":69}},"242":{"start":{"line":601,"column":4},"end":{"line":601,"column":52}},"243":{"start":{"line":603,"column":4},"end":{"line":603,"column":93}},"244":{"start":{"line":605,"column":4},"end":{"line":609,"column":5}},"245":{"start":{"line":606,"column":6},"end":{"line":606,"column":84}},"246":{"start":{"line":607,"column":6},"end":{"line":607,"column":104}},"247":{"start":{"line":608,"column":6},"end":{"line":608,"column":38}},"248":{"start":{"line":611,"column":4},"end":{"line":611,"column":143}},"249":{"start":{"line":613,"column":4},"end":{"line":616,"column":5}},"250":{"start":{"line":614,"column":6},"end":{"line":614,"column":64}},"251":{"start":{"line":615,"column":6},"end":{"line":615,"column":39}},"252":{"start":{"line":618,"column":4},"end":{"line":620,"column":5}},"253":{"start":{"line":619,"column":6},"end":{"line":619,"column":66}},"254":{"start":{"line":622,"column":4},"end":{"line":622,"column":54}},"255":{"start":{"line":623,"column":4},"end":{"line":623,"column":122}},"256":{"start":{"line":623,"column":66},"end":{"line":623,"column":120}},"257":{"start":{"line":627,"column":4},"end":{"line":627,"column":61}},"258":{"start":{"line":629,"column":4},"end":{"line":635,"column":5}},"259":{"start":{"line":630,"column":6},"end":{"line":634,"column":8}},"260":{"start":{"line":637,"column":4},"end":{"line":637,"column":17}},"261":{"start":{"line":638,"column":4},"end":{"line":638,"column":82}},"262":{"start":{"line":640,"column":4},"end":{"line":643,"column":5}},"263":{"start":{"line":641,"column":6},"end":{"line":641,"column":70}},"264":{"start":{"line":642,"column":6},"end":{"line":642,"column":90}},"265":{"start":{"line":645,"column":4},"end":{"line":645,"column":83}},"266":{"start":{"line":647,"column":4},"end":{"line":647,"column":59}},"267":{"start":{"line":649,"column":4},"end":{"line":649,"column":95}},"268":{"start":{"line":651,"column":4},"end":{"line":651,"column":121}},"269":{"start":{"line":653,"column":4},"end":{"line":669,"column":5}},"270":{"start":{"line":655,"column":6},"end":{"line":655,"column":55}},"271":{"start":{"line":657,"column":6},"end":{"line":657,"column":127}},"272":{"start":{"line":659,"column":6},"end":{"line":659,"column":97}},"273":{"start":{"line":660,"column":6},"end":{"line":660,"column":77}},"274":{"start":{"line":662,"column":6},"end":{"line":666,"column":7}},"275":{"start":{"line":663,"column":8},"end":{"line":663,"column":87}},"276":{"start":{"line":665,"column":8},"end":{"line":665,"column":130}},"277":{"start":{"line":668,"column":6},"end":{"line":668,"column":132}},"278":{"start":{"line":673,"column":4},"end":{"line":673,"column":97}},"279":{"start":{"line":675,"column":4},"end":{"line":677,"column":6}},"280":{"start":{"line":676,"column":6},"end":{"line":676,"column":18}},"281":{"start":{"line":679,"column":4},"end":{"line":682,"column":7}},"282":{"start":{"line":680,"column":6},"end":{"line":680,"column":29}},"283":{"start":{"line":680,"column":22},"end":{"line":680,"column":29}},"284":{"start":{"line":681,"column":6},"end":{"line":681,"column":59}},"285":{"start":{"line":695,"column":4},"end":{"line":695,"column":50}},"286":{"start":{"line":707,"column":4},"end":{"line":707,"column":109}},"287":{"start":{"line":717,"column":4},"end":{"line":736,"column":9}},"288":{"start":{"line":718,"column":6},"end":{"line":718,"column":77}},"289":{"start":{"line":719,"column":6},"end":{"line":719,"column":68}},"290":{"start":{"line":721,"column":6},"end":{"line":733,"column":7}},"291":{"start":{"line":722,"column":8},"end":{"line":722,"column":50}},"292":{"start":{"line":724,"column":8},"end":{"line":732,"column":9}},"293":{"start":{"line":725,"column":10},"end":{"line":725,"column":49}},"294":{"start":{"line":727,"column":10},"end":{"line":727,"column":59}},"295":{"start":{"line":728,"column":10},"end":{"line":728,"column":102}},"296":{"start":{"line":729,"column":10},"end":{"line":729,"column":79}},"297":{"start":{"line":731,"column":10},"end":{"line":731,"column":94}},"298":{"start":{"line":735,"column":6},"end":{"line":735,"column":24}},"299":{"start":{"line":746,"column":4},"end":{"line":746,"column":75}},"300":{"start":{"line":747,"column":4},"end":{"line":747,"column":66}},"301":{"start":{"line":749,"column":4},"end":{"line":761,"column":5}},"302":{"start":{"line":750,"column":6},"end":{"line":750,"column":48}},"303":{"start":{"line":752,"column":6},"end":{"line":760,"column":7}},"304":{"start":{"line":753,"column":8},"end":{"line":753,"column":45}},"305":{"start":{"line":755,"column":8},"end":{"line":755,"column":57}},"306":{"start":{"line":756,"column":8},"end":{"line":756,"column":100}},"307":{"start":{"line":757,"column":8},"end":{"line":757,"column":77}},"308":{"start":{"line":759,"column":8},"end":{"line":759,"column":92}},"309":{"start":{"line":763,"column":4},"end":{"line":763,"column":22}},"310":{"start":{"line":766,"column":0},"end":{"line":766,"column":31}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":247},"end":{"line":7,"column":247}},{"start":{"line":7,"column":247},"end":{"line":7,"column":247}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":251},"end":{"line":7,"column":252}},{"start":{"line":7,"column":256},"end":{"line":7,"column":273}}]},"3":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":339},"end":{"line":7,"column":339}},{"start":{"line":7,"column":339},"end":{"line":7,"column":339}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":343},"end":{"line":7,"column":346}},{"start":{"line":7,"column":350},"end":{"line":7,"column":362}}]},"5":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":392},"end":{"line":7,"column":392}},{"start":{"line":7,"column":392},"end":{"line":7,"column":392}}]},"6":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":456},"end":{"line":7,"column":456}},{"start":{"line":7,"column":456},"end":{"line":7,"column":456}}]},"7":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":501},"end":{"line":7,"column":501}},{"start":{"line":7,"column":501},"end":{"line":7,"column":501}}]},"8":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":70},"end":{"line":45,"column":73}},{"start":{"line":45,"column":76},"end":{"line":45,"column":92}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":46},"end":{"line":45,"column":49}},{"start":{"line":45,"column":53},"end":{"line":45,"column":67}}]},"10":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":264},"end":{"line":47,"column":264}},{"start":{"line":47,"column":264},"end":{"line":47,"column":264}}]},"11":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":80},"end":{"line":109,"column":92}},{"start":{"line":109,"column":95},"end":{"line":109,"column":99}}]},"12":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":27},"end":{"line":109,"column":47}},{"start":{"line":109,"column":51},"end":{"line":109,"column":77}}]},"13":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":77},"end":{"line":110,"column":89}},{"start":{"line":110,"column":92},"end":{"line":110,"column":96}}]},"14":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":24},"end":{"line":110,"column":44}},{"start":{"line":110,"column":48},"end":{"line":110,"column":74}}]},"15":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":6}},{"start":{"line":118,"column":6},"end":{"line":118,"column":6}}]},"16":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":80},"end":{"line":147,"column":92}},{"start":{"line":147,"column":95},"end":{"line":147,"column":99}}]},"17":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":27},"end":{"line":147,"column":47}},{"start":{"line":147,"column":51},"end":{"line":147,"column":77}}]},"18":{"line":194,"type":"cond-expr","locations":[{"start":{"line":194,"column":80},"end":{"line":194,"column":92}},{"start":{"line":194,"column":95},"end":{"line":194,"column":99}}]},"19":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":27},"end":{"line":194,"column":47}},{"start":{"line":194,"column":51},"end":{"line":194,"column":77}}]},"20":{"line":263,"type":"cond-expr","locations":[{"start":{"line":263,"column":31},"end":{"line":263,"column":61}},{"start":{"line":263,"column":64},"end":{"line":263,"column":90}}]},"21":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":6}},{"start":{"line":277,"column":6},"end":{"line":277,"column":6}}]},"22":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":20},"end":{"line":279,"column":24}},{"start":{"line":279,"column":28},"end":{"line":279,"column":52}}]},"23":{"line":288,"type":"cond-expr","locations":[{"start":{"line":288,"column":64},"end":{"line":288,"column":95}},{"start":{"line":288,"column":98},"end":{"line":288,"column":148}}]},"24":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":125},"end":{"line":288,"column":129}},{"start":{"line":288,"column":133},"end":{"line":288,"column":147}}]},"25":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":295,"column":6}},{"start":{"line":295,"column":6},"end":{"line":295,"column":6}}]},"26":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":10},"end":{"line":295,"column":26}},{"start":{"line":295,"column":30},"end":{"line":295,"column":39}}]},"27":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"28":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":23},"end":{"line":308,"column":27}},{"start":{"line":308,"column":31},"end":{"line":308,"column":41}}]},"29":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":13},"end":{"line":320,"column":17}},{"start":{"line":320,"column":21},"end":{"line":320,"column":31}}]},"30":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":6},"end":{"line":321,"column":6}},{"start":{"line":321,"column":6},"end":{"line":321,"column":6}}]},"31":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":10},"end":{"line":321,"column":15}},{"start":{"line":321,"column":19},"end":{"line":321,"column":28}}]},"32":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":6},"end":{"line":345,"column":6}},{"start":{"line":345,"column":6},"end":{"line":345,"column":6}}]},"33":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":19},"end":{"line":346,"column":38}},{"start":{"line":346,"column":43},"end":{"line":346,"column":88}}]},"34":{"line":351,"type":"cond-expr","locations":[{"start":{"line":351,"column":64},"end":{"line":351,"column":95}},{"start":{"line":351,"column":98},"end":{"line":351,"column":148}}]},"35":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":125},"end":{"line":351,"column":129}},{"start":{"line":351,"column":133},"end":{"line":351,"column":147}}]},"36":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":6},"end":{"line":353,"column":6}},{"start":{"line":353,"column":6},"end":{"line":353,"column":6}}]},"37":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":6},"end":{"line":358,"column":6}},{"start":{"line":358,"column":6},"end":{"line":358,"column":6}}]},"38":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":6},"end":{"line":380,"column":6}},{"start":{"line":380,"column":6},"end":{"line":380,"column":6}}]},"39":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":22},"end":{"line":382,"column":41}},{"start":{"line":382,"column":46},"end":{"line":382,"column":83}}]},"40":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":17},"end":{"line":389,"column":36}},{"start":{"line":389,"column":41},"end":{"line":389,"column":86}}]},"41":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":6},"end":{"line":391,"column":6}},{"start":{"line":391,"column":6},"end":{"line":391,"column":6}}]},"42":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":32},"end":{"line":401,"column":61}},{"start":{"line":401,"column":65},"end":{"line":401,"column":96}}]},"43":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":26},"end":{"line":403,"column":58}},{"start":{"line":403,"column":62},"end":{"line":403,"column":78}},{"start":{"line":403,"column":82},"end":{"line":403,"column":122}}]},"44":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":6},"end":{"line":405,"column":6}},{"start":{"line":405,"column":6},"end":{"line":405,"column":6}}]},"45":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":10},"end":{"line":405,"column":37}},{"start":{"line":405,"column":41},"end":{"line":405,"column":61}},{"start":{"line":405,"column":65},"end":{"line":405,"column":78}}]},"46":{"line":412,"type":"binary-expr","locations":[{"start":{"line":412,"column":46},"end":{"line":412,"column":61}},{"start":{"line":412,"column":65},"end":{"line":412,"column":79}}]},"47":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":8}},{"start":{"line":414,"column":8},"end":{"line":414,"column":8}}]},"48":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":89},"end":{"line":420,"column":104}},{"start":{"line":420,"column":108},"end":{"line":420,"column":113}}]},"49":{"line":441,"type":"cond-expr","locations":[{"start":{"line":441,"column":77},"end":{"line":441,"column":89}},{"start":{"line":441,"column":92},"end":{"line":441,"column":96}}]},"50":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":24},"end":{"line":441,"column":44}},{"start":{"line":441,"column":48},"end":{"line":441,"column":74}}]},"51":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":19},"end":{"line":443,"column":32}},{"start":{"line":443,"column":36},"end":{"line":445,"column":7}}]},"52":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":8},"end":{"line":448,"column":8}},{"start":{"line":448,"column":8},"end":{"line":448,"column":8}}]},"53":{"line":470,"type":"cond-expr","locations":[{"start":{"line":470,"column":31},"end":{"line":470,"column":65}},{"start":{"line":470,"column":68},"end":{"line":470,"column":98}}]},"54":{"line":474,"type":"cond-expr","locations":[{"start":{"line":474,"column":80},"end":{"line":474,"column":92}},{"start":{"line":474,"column":95},"end":{"line":474,"column":99}}]},"55":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":27},"end":{"line":474,"column":47}},{"start":{"line":474,"column":51},"end":{"line":474,"column":77}}]},"56":{"line":493,"type":"cond-expr","locations":[{"start":{"line":493,"column":80},"end":{"line":493,"column":92}},{"start":{"line":493,"column":95},"end":{"line":493,"column":99}}]},"57":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":27},"end":{"line":493,"column":47}},{"start":{"line":493,"column":51},"end":{"line":493,"column":77}}]},"58":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":4},"end":{"line":538,"column":4}},{"start":{"line":538,"column":4},"end":{"line":538,"column":4}}]},"59":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":18},"end":{"line":540,"column":22}},{"start":{"line":540,"column":26},"end":{"line":540,"column":50}}]},"60":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":548,"column":4}},{"start":{"line":548,"column":4},"end":{"line":548,"column":4}}]},"61":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":14},"end":{"line":551,"column":33}},{"start":{"line":551,"column":37},"end":{"line":551,"column":80}}]},"62":{"line":557,"type":"cond-expr","locations":[{"start":{"line":557,"column":62},"end":{"line":557,"column":91}},{"start":{"line":557,"column":94},"end":{"line":557,"column":142}}]},"63":{"line":557,"type":"binary-expr","locations":[{"start":{"line":557,"column":119},"end":{"line":557,"column":123}},{"start":{"line":557,"column":127},"end":{"line":557,"column":141}}]},"64":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":4},"end":{"line":564,"column":4}},{"start":{"line":564,"column":4},"end":{"line":564,"column":4}}]},"65":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":8},"end":{"line":564,"column":24}},{"start":{"line":564,"column":28},"end":{"line":564,"column":37}}]},"66":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":4},"end":{"line":568,"column":4}},{"start":{"line":568,"column":4},"end":{"line":568,"column":4}}]},"67":{"line":577,"type":"binary-expr","locations":[{"start":{"line":577,"column":21},"end":{"line":577,"column":25}},{"start":{"line":577,"column":29},"end":{"line":577,"column":39}}]},"68":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":11},"end":{"line":589,"column":15}},{"start":{"line":589,"column":19},"end":{"line":589,"column":29}}]},"69":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":4},"end":{"line":590,"column":4}},{"start":{"line":590,"column":4},"end":{"line":590,"column":4}}]},"70":{"line":590,"type":"binary-expr","locations":[{"start":{"line":590,"column":8},"end":{"line":590,"column":13}},{"start":{"line":590,"column":17},"end":{"line":590,"column":26}}]},"71":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":4},"end":{"line":605,"column":4}},{"start":{"line":605,"column":4},"end":{"line":605,"column":4}}]},"72":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":17},"end":{"line":606,"column":36}},{"start":{"line":606,"column":40},"end":{"line":606,"column":83}}]},"73":{"line":611,"type":"cond-expr","locations":[{"start":{"line":611,"column":62},"end":{"line":611,"column":91}},{"start":{"line":611,"column":94},"end":{"line":611,"column":142}}]},"74":{"line":611,"type":"binary-expr","locations":[{"start":{"line":611,"column":119},"end":{"line":611,"column":123}},{"start":{"line":611,"column":127},"end":{"line":611,"column":141}}]},"75":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"76":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"77":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":4},"end":{"line":629,"column":4}},{"start":{"line":629,"column":4},"end":{"line":629,"column":4}}]},"78":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":20},"end":{"line":631,"column":39}},{"start":{"line":631,"column":43},"end":{"line":631,"column":78}}]},"79":{"line":638,"type":"binary-expr","locations":[{"start":{"line":638,"column":15},"end":{"line":638,"column":34}},{"start":{"line":638,"column":38},"end":{"line":638,"column":81}}]},"80":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":4},"end":{"line":640,"column":4}},{"start":{"line":640,"column":4},"end":{"line":640,"column":4}}]},"81":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":30},"end":{"line":649,"column":59}},{"start":{"line":649,"column":63},"end":{"line":649,"column":94}}]},"82":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":24},"end":{"line":651,"column":56}},{"start":{"line":651,"column":60},"end":{"line":651,"column":76}},{"start":{"line":651,"column":80},"end":{"line":651,"column":120}}]},"83":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":4},"end":{"line":653,"column":4}},{"start":{"line":653,"column":4},"end":{"line":653,"column":4}}]},"84":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":8},"end":{"line":653,"column":35}},{"start":{"line":653,"column":39},"end":{"line":653,"column":59}},{"start":{"line":653,"column":63},"end":{"line":653,"column":76}}]},"85":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":42},"end":{"line":660,"column":57}},{"start":{"line":660,"column":61},"end":{"line":660,"column":75}}]},"86":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":6},"end":{"line":662,"column":6}},{"start":{"line":662,"column":6},"end":{"line":662,"column":6}}]},"87":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":83},"end":{"line":668,"column":98}},{"start":{"line":668,"column":102},"end":{"line":668,"column":107}}]},"88":{"line":673,"type":"cond-expr","locations":[{"start":{"line":673,"column":77},"end":{"line":673,"column":89}},{"start":{"line":673,"column":92},"end":{"line":673,"column":96}}]},"89":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":24},"end":{"line":673,"column":44}},{"start":{"line":673,"column":48},"end":{"line":673,"column":74}}]},"90":{"line":675,"type":"binary-expr","locations":[{"start":{"line":675,"column":17},"end":{"line":675,"column":30}},{"start":{"line":675,"column":34},"end":{"line":677,"column":5}}]},"91":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":6},"end":{"line":680,"column":6}},{"start":{"line":680,"column":6},"end":{"line":680,"column":6}}]},"92":{"line":707,"type":"binary-expr","locations":[{"start":{"line":707,"column":11},"end":{"line":707,"column":30}},{"start":{"line":707,"column":34},"end":{"line":707,"column":58}},{"start":{"line":707,"column":62},"end":{"line":707,"column":83}},{"start":{"line":707,"column":87},"end":{"line":707,"column":108}}]},"93":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":6},"end":{"line":721,"column":6}},{"start":{"line":721,"column":6},"end":{"line":721,"column":6}}]},"94":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":10},"end":{"line":721,"column":28}},{"start":{"line":721,"column":32},"end":{"line":721,"column":53}},{"start":{"line":721,"column":57},"end":{"line":721,"column":85}}]},"95":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":4},"end":{"line":749,"column":4}},{"start":{"line":749,"column":4},"end":{"line":749,"column":4}}]},"96":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":8},"end":{"line":749,"column":26}},{"start":{"line":749,"column":30},"end":{"line":749,"column":51}},{"start":{"line":749,"column":55},"end":{"line":749,"column":83}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();","","var _mimeTypes = require('@paulcbetts/mime-types');","","var _mimeTypes2 = _interopRequireDefault(_mimeTypes);","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _zlib = require('zlib');","","var _zlib2 = _interopRequireDefault(_zlib);","","var _path = require('path');","","var _path2 = _interopRequireDefault(_path);","","var _promise = require('./promise');","","var _forAllFiles = require('./for-all-files');","","var _compileCache = require('./compile-cache');","","var _compileCache2 = _interopRequireDefault(_compileCache);","","var _fileChangeCache = require('./file-change-cache');","","var _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);","","var _readOnlyCompiler = require('./read-only-compiler');","","var _readOnlyCompiler2 = _interopRequireDefault(_readOnlyCompiler);","","var _browserSignal = require('./browser-signal');","","require('rxjs/add/operator/map');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","const d = require('debug')('electron-compile:compiler-host');","","require('./rig-mime-types').init();","","// This isn't even my","const finalForms = {","  'text/javascript': true,","  'application/javascript': true,","  'text/html': true,","  'text/css': true,","  'image/svg+xml': true,","  'application/json': true","};","","/**"," * This class is the top-level class that encapsulates all of the logic of"," * compiling and caching application code. If you're looking for a \"Main class\","," * this is it."," *"," * This class can be created directly but it is usually created via the methods"," * in config-parser, which will among other things, set up the compiler options"," * given a project root."," *"," * CompilerHost is also the top-level class that knows how to serialize all of the"," * information necessary to recreate itself, either as a development host (i.e."," * will allow cache misses and actual compilation), or as a read-only version of"," * itself for production."," */","class CompilerHost {","  /**","   * Creates an instance of CompilerHost. You probably want to use the methods","   * in config-parser for development, or {@link createReadonlyFromConfiguration}","   * for production instead.","   *","   * @param  {string} rootCacheDir  The root directory to use for the cache","   *","   * @param  {Object} compilers  an Object whose keys are input MIME types and","   *                             whose values are instances of CompilerBase. Create","   *                             this via the {@link createCompilers} method in","   *                             config-parser.","   *","   * @param  {FileChangedCache} fileChangeCache  A file-change cache that is","   *                                             optionally pre-loaded.","   *","   * @param  {boolean} readOnlyMode  If True, cache misses will fail and","   *                                 compilation will not be attempted.","   *","   * @param  {CompilerBase} fallbackCompiler (optional)  When a file is compiled","   *                                         which doesn't have a matching compiler,","   *                                         this compiler will be used instead. If","   *                                         null, will fail compilation. A good","   *                                         alternate fallback is the compiler for","   *                                         'text/plain', which is guaranteed to be","   *                                         present.","   *","   * @param {string} sourceMapPath (optional) The directory to store sourcemap separately","   *                               if compiler option enabled to emit.","   *                               Default to cachePath if not specified.","   */","  constructor(rootCacheDir, compilers, fileChangeCache, readOnlyMode) {","    let fallbackCompiler = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;","    let sourceMapPath = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;","","    let compilersByMimeType = Object.assign({}, compilers);","    Object.assign(this, { rootCacheDir, compilersByMimeType, fileChangeCache, readOnlyMode, fallbackCompiler });","    this.appRoot = this.fileChangeCache.appRoot;","","    this.cachesForCompilers = Object.keys(compilersByMimeType).reduce((acc, x) => {","      let compiler = compilersByMimeType[x];","      if (acc.has(compiler)) return acc;","","      acc.set(compiler, _compileCache2.default.createFromCompiler(rootCacheDir, compiler, fileChangeCache, readOnlyMode, sourceMapPath));","      return acc;","    }, new Map());","  }","","  /**","   * Creates a production-mode CompilerHost from the previously saved","   * configuration","   *","   * @param  {string} rootCacheDir  The root directory to use for the cache. This","   *                                cache must have cache information saved via","   *                                {@link saveConfiguration}","   *","   * @param  {string} appRoot  The top-level directory for your application (i.e.","   *                           the one which has your package.json).","   *","   * @param  {CompilerBase} fallbackCompiler (optional)  When a file is compiled","   *                                         which doesn't have a matching compiler,","   *                                         this compiler will be used instead. If","   *                                         null, will fail compilation. A good","   *                                         alternate fallback is the compiler for","   *                                         'text/plain', which is guaranteed to be","   *                                         present.","   *","   * @return {Promise<CompilerHost>}  A read-only CompilerHost","   */","  static createReadonlyFromConfiguration(rootCacheDir, appRoot) {","    let fallbackCompiler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","    return _asyncToGenerator(function* () {","      let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');","      let buf = yield _promise.pfs.readFile(target);","      let info = JSON.parse((yield _promise.pzlib.gunzip(buf)));","","      let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, true);","","      let compilers = Object.keys(info.compilers).reduce(function (acc, x) {","        let cur = info.compilers[x];","        acc[x] = new _readOnlyCompiler2.default(cur.name, cur.compilerVersion, cur.compilerOptions, cur.inputMimeTypes);","","        return acc;","      }, {});","","      return new CompilerHost(rootCacheDir, compilers, fileChangeCache, true, fallbackCompiler);","    })();","  }","","  /**","   * Creates a development-mode CompilerHost from the previously saved","   * configuration.","   *","   * @param  {string} rootCacheDir  The root directory to use for the cache. This","   *                                cache must have cache information saved via","   *                                {@link saveConfiguration}","   *","   * @param  {string} appRoot  The top-level directory for your application (i.e.","   *                           the one which has your package.json).","   *","   * @param  {Object} compilersByMimeType  an Object whose keys are input MIME","   *                                       types and whose values are instances","   *                                       of CompilerBase. Create this via the","   *                                       {@link createCompilers} method in","   *                                       config-parser.","   *","   * @param  {CompilerBase} fallbackCompiler (optional)  When a file is compiled","   *                                         which doesn't have a matching compiler,","   *                                         this compiler will be used instead. If","   *                                         null, will fail compilation. A good","   *                                         alternate fallback is the compiler for","   *                                         'text/plain', which is guaranteed to be","   *                                         present.","   *","   * @return {Promise<CompilerHost>}  A read-only CompilerHost","   */","  static createFromConfiguration(rootCacheDir, appRoot, compilersByMimeType) {","    let fallbackCompiler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;","    return _asyncToGenerator(function* () {","      let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');","      let buf = yield _promise.pfs.readFile(target);","      let info = JSON.parse((yield _promise.pzlib.gunzip(buf)));","","      let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, false);","","      Object.keys(info.compilers).forEach(function (x) {","        let cur = info.compilers[x];","        compilersByMimeType[x].compilerOptions = cur.compilerOptions;","      });","","      return new CompilerHost(rootCacheDir, compilersByMimeType, fileChangeCache, false, fallbackCompiler);","    })();","  }","","  /**","   * Saves the current compiler configuration to a file that","   * {@link createReadonlyFromConfiguration} can use to recreate the current","   * compiler environment","   *","   * @return {Promise}  Completion","   */","  saveConfiguration() {","    var _this = this;","","    return _asyncToGenerator(function* () {","      let serializedCompilerOpts = Object.keys(_this.compilersByMimeType).reduce(function (acc, x) {","        let compiler = _this.compilersByMimeType[x];","        let Klass = Object.getPrototypeOf(compiler).constructor;","","        let val = {","          name: Klass.name,","          inputMimeTypes: Klass.getInputMimeTypes(),","          compilerOptions: compiler.compilerOptions,","          compilerVersion: compiler.getCompilerVersion()","        };","","        acc[x] = val;","        return acc;","      }, {});","","      let info = {","        fileChangeCache: _this.fileChangeCache.getSavedData(),","        compilers: serializedCompilerOpts","      };","","      let target = _path2.default.join(_this.rootCacheDir, 'compiler-info.json.gz');","      let buf = yield _promise.pzlib.gzip(new Buffer(JSON.stringify(info)));","      yield _promise.pfs.writeFile(target, buf);","    })();","  }","","  /**","   * Compiles a file and returns the compiled result.","   *","   * @param  {string} filePath  The path to the file to compile","   *","   * @return {Promise<object>}  An Object with the compiled result","   *","   * @property {Object} hashInfo  The hash information returned from getHashForPath","   * @property {string} code  The source code if the file was a text file","   * @property {Buffer} binaryData  The file if it was a binary file","   * @property {string} mimeType  The MIME type saved in the cache.","   * @property {string[]} dependentFiles  The dependent files returned from","   *                                      compiling the file, if any.","   */","  compile(filePath) {","    return this.readOnlyMode ? this.compileReadOnly(filePath) : this.fullCompile(filePath);","  }","","  /**","   * Handles compilation in read-only mode","   *","   * @private","   */","  compileReadOnly(filePath) {","    var _this2 = this;","","    return _asyncToGenerator(function* () {","      // We guarantee that node_modules are always shipped directly","      let type = _mimeTypes2.default.lookup(filePath);","      if (_fileChangeCache2.default.isInNodeModules(filePath)) {","        return {","          mimeType: type || 'application/javascript',","          code: yield _promise.pfs.readFile(filePath, 'utf8')","        };","      }","","      let hashInfo = yield _this2.fileChangeCache.getHashForPath(filePath);","","      // NB: Here, we're basically only using the compiler here to find","      // the appropriate CompileCache","      let compiler = CompilerHost.shouldPassthrough(hashInfo) ? _this2.getPassthroughCompiler() : _this2.compilersByMimeType[type || '__lolnothere'];","","      // NB: We don't put this into shouldPassthrough because Inline HTML","      // compiler is technically of type finalForms (i.e. a browser can","      // natively handle this content), yet its compiler is","      // InlineHtmlCompiler. However, we still want to catch standard CSS files","      // which will be processed by PassthroughCompiler.","      if (finalForms[type] && !compiler) {","        compiler = _this2.getPassthroughCompiler();","      }","","      if (!compiler) {","        compiler = _this2.fallbackCompiler;","","        var _ref = yield compiler.get(filePath);","","        let code = _ref.code,","            binaryData = _ref.binaryData,","            mimeType = _ref.mimeType;","","        return { code: code || binaryData, mimeType };","      }","","      let cache = _this2.cachesForCompilers.get(compiler);","","      var _ref2 = yield cache.get(filePath);","","      let code = _ref2.code,","          binaryData = _ref2.binaryData,","          mimeType = _ref2.mimeType;","","","      code = code || binaryData;","      if (!code || !mimeType) {","        throw new Error(`Asked to compile ${filePath} in production, is this file not precompiled?`);","      }","","      return { code, mimeType };","    })();","  }","","  /**","   * Handles compilation in read-write mode","   *","   * @private","   */","  fullCompile(filePath) {","    var _this3 = this;","","    return _asyncToGenerator(function* () {","      d(`Compiling ${filePath}`);","","      let hashInfo = yield _this3.fileChangeCache.getHashForPath(filePath);","      let type = _mimeTypes2.default.lookup(filePath);","","      (0, _browserSignal.send)('electron-compile-compiled-file', { filePath, mimeType: type });","","      if (hashInfo.isInNodeModules) {","        let code = hashInfo.sourceCode || (yield _promise.pfs.readFile(filePath, 'utf8'));","        code = yield CompilerHost.fixNodeModulesSourceMapping(code, filePath, _this3.fileChangeCache.appRoot);","        return { code, mimeType: type };","      }","","      let compiler = CompilerHost.shouldPassthrough(hashInfo) ? _this3.getPassthroughCompiler() : _this3.compilersByMimeType[type || '__lolnothere'];","","      if (!compiler) {","        d(`Falling back to passthrough compiler for ${filePath}`);","        compiler = _this3.fallbackCompiler;","      }","","      if (!compiler) {","        throw new Error(`Couldn't find a compiler for ${filePath}`);","      }","","      let cache = _this3.cachesForCompilers.get(compiler);","      return yield cache.getOrFetch(filePath, function (filePath, hashInfo) {","        return _this3.compileUncached(filePath, hashInfo, compiler);","      });","    })();","  }","","  /**","   * Handles invoking compilers independent of caching","   *","   * @private","   */","  compileUncached(filePath, hashInfo, compiler) {","    var _this4 = this;","","    return _asyncToGenerator(function* () {","      let inputMimeType = _mimeTypes2.default.lookup(filePath);","","      if (hashInfo.isFileBinary) {","        return {","          binaryData: hashInfo.binaryData || (yield _promise.pfs.readFile(filePath)),","          mimeType: inputMimeType,","          dependentFiles: []","        };","      }","","      let ctx = {};","      let code = hashInfo.sourceCode || (yield _promise.pfs.readFile(filePath, 'utf8'));","","      if (!(yield compiler.shouldCompileFile(code, ctx))) {","        d(`Compiler returned false for shouldCompileFile: ${filePath}`);","        return { code, mimeType: _mimeTypes2.default.lookup(filePath), dependentFiles: [] };","      }","","      let dependentFiles = yield compiler.determineDependentFiles(code, filePath, ctx);","","      d(`Using compiler options: ${JSON.stringify(compiler.compilerOptions)}`);","      let result = yield compiler.compile(code, filePath, ctx);","","      let shouldInlineHtmlify = inputMimeType !== 'text/html' && result.mimeType === 'text/html';","","      let isPassthrough = result.mimeType === 'text/plain' || !result.mimeType || CompilerHost.shouldPassthrough(hashInfo);","","      if (finalForms[result.mimeType] && !shouldInlineHtmlify || isPassthrough) {","        // Got something we can use in-browser, let's return it","        return Object.assign(result, { dependentFiles });","      } else {","        d(`Recursively compiling result of ${filePath} with non-final MIME type ${result.mimeType}, input was ${inputMimeType}`);","","        hashInfo = Object.assign({ sourceCode: result.code, mimeType: result.mimeType }, hashInfo);","        compiler = _this4.compilersByMimeType[result.mimeType || '__lolnothere'];","","        if (!compiler) {","          d(`Recursive compile failed - intermediate result: ${JSON.stringify(result)}`);","","          throw new Error(`Compiling ${filePath} resulted in a MIME type of ${result.mimeType}, which we don't know how to handle`);","        }","","        return yield _this4.compileUncached(`${filePath}.${_mimeTypes2.default.extension(result.mimeType || 'txt')}`, hashInfo, compiler);","      }","    })();","  }","","  /**","   * Pre-caches an entire directory of files recursively. Usually used for","   * building custom compiler tooling.","   *","   * @param  {string} rootDirectory  The top-level directory to compile","   *","   * @param  {Function} shouldCompile (optional)  A Function which allows the","   *                                  caller to disable compiling certain files.","   *                                  It takes a fully-qualified path to a file,","   *                                  and should return a Boolean.","   *","   * @return {Promise}  Completion.","   */","  compileAll(rootDirectory) {","    var _this5 = this;","","    let shouldCompile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","    return _asyncToGenerator(function* () {","      let should = shouldCompile || function () {","        return true;","      };","","      yield (0, _forAllFiles.forAllFiles)(rootDirectory, function (f) {","        if (!should(f)) return;","","        d(`Compiling ${f}`);","        return _this5.compile(f, _this5.compilersByMimeType);","      });","    })();","  }","","  listenToCompileEvents() {","    return (0, _browserSignal.listen)('electron-compile-compiled-file').map((_ref3) => {","      var _ref4 = _slicedToArray(_ref3, 1);","","      let x = _ref4[0];","      return x;","    });","  }","","  /*","   * Sync Methods","   */","","  compileSync(filePath) {","    return this.readOnlyMode ? this.compileReadOnlySync(filePath) : this.fullCompileSync(filePath);","  }","","  static createReadonlyFromConfigurationSync(rootCacheDir, appRoot) {","    let fallbackCompiler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","    let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');","    let buf = _fs2.default.readFileSync(target);","    let info = JSON.parse(_zlib2.default.gunzipSync(buf));","","    let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, true);","","    let compilers = Object.keys(info.compilers).reduce((acc, x) => {","      let cur = info.compilers[x];","      acc[x] = new _readOnlyCompiler2.default(cur.name, cur.compilerVersion, cur.compilerOptions, cur.inputMimeTypes);","","      return acc;","    }, {});","","    return new CompilerHost(rootCacheDir, compilers, fileChangeCache, true, fallbackCompiler);","  }","","  static createFromConfigurationSync(rootCacheDir, appRoot, compilersByMimeType) {","    let fallbackCompiler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;","","    let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');","    let buf = _fs2.default.readFileSync(target);","    let info = JSON.parse(_zlib2.default.gunzipSync(buf));","","    let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, false);","","    Object.keys(info.compilers).forEach(x => {","      let cur = info.compilers[x];","      compilersByMimeType[x].compilerOptions = cur.compilerOptions;","    });","","    return new CompilerHost(rootCacheDir, compilersByMimeType, fileChangeCache, false, fallbackCompiler);","  }","","  saveConfigurationSync() {","    let serializedCompilerOpts = Object.keys(this.compilersByMimeType).reduce((acc, x) => {","      let compiler = this.compilersByMimeType[x];","      let Klass = Object.getPrototypeOf(compiler).constructor;","","      let val = {","        name: Klass.name,","        inputMimeTypes: Klass.getInputMimeTypes(),","        compilerOptions: compiler.compilerOptions,","        compilerVersion: compiler.getCompilerVersion()","      };","","      acc[x] = val;","      return acc;","    }, {});","","    let info = {","      fileChangeCache: this.fileChangeCache.getSavedData(),","      compilers: serializedCompilerOpts","    };","","    let target = _path2.default.join(this.rootCacheDir, 'compiler-info.json.gz');","    let buf = _zlib2.default.gzipSync(new Buffer(JSON.stringify(info)));","    _fs2.default.writeFileSync(target, buf);","  }","","  compileReadOnlySync(filePath) {","    // We guarantee that node_modules are always shipped directly","    let type = _mimeTypes2.default.lookup(filePath);","    if (_fileChangeCache2.default.isInNodeModules(filePath)) {","      return {","        mimeType: type || 'application/javascript',","        code: _fs2.default.readFileSync(filePath, 'utf8')","      };","    }","","    let hashInfo = this.fileChangeCache.getHashForPathSync(filePath);","","    // We guarantee that node_modules are always shipped directly","    if (hashInfo.isInNodeModules) {","      return {","        mimeType: type,","        code: hashInfo.sourceCode || _fs2.default.readFileSync(filePath, 'utf8')","      };","    }","","    // NB: Here, we're basically only using the compiler here to find","    // the appropriate CompileCache","    let compiler = CompilerHost.shouldPassthrough(hashInfo) ? this.getPassthroughCompiler() : this.compilersByMimeType[type || '__lolnothere'];","","    // NB: We don't put this into shouldPassthrough because Inline HTML","    // compiler is technically of type finalForms (i.e. a browser can","    // natively handle this content), yet its compiler is","    // InlineHtmlCompiler. However, we still want to catch standard CSS files","    // which will be processed by PassthroughCompiler.","    if (finalForms[type] && !compiler) {","      compiler = this.getPassthroughCompiler();","    }","","    if (!compiler) {","      compiler = this.fallbackCompiler;","","      var _compiler$getSync = compiler.getSync(filePath);","","      let code = _compiler$getSync.code,","          binaryData = _compiler$getSync.binaryData,","          mimeType = _compiler$getSync.mimeType;","","      return { code: code || binaryData, mimeType };","    }","","    let cache = this.cachesForCompilers.get(compiler);","","    var _cache$getSync = cache.getSync(filePath);","","    let code = _cache$getSync.code,","        binaryData = _cache$getSync.binaryData,","        mimeType = _cache$getSync.mimeType;","","","    code = code || binaryData;","    if (!code || !mimeType) {","      throw new Error(`Asked to compile ${filePath} in production, is this file not precompiled?`);","    }","","    return { code, mimeType };","  }","","  fullCompileSync(filePath) {","    d(`Compiling ${filePath}`);","","    let hashInfo = this.fileChangeCache.getHashForPathSync(filePath);","    let type = _mimeTypes2.default.lookup(filePath);","","    (0, _browserSignal.send)('electron-compile-compiled-file', { filePath, mimeType: type });","","    if (hashInfo.isInNodeModules) {","      let code = hashInfo.sourceCode || _fs2.default.readFileSync(filePath, 'utf8');","      code = CompilerHost.fixNodeModulesSourceMappingSync(code, filePath, this.fileChangeCache.appRoot);","      return { code, mimeType: type };","    }","","    let compiler = CompilerHost.shouldPassthrough(hashInfo) ? this.getPassthroughCompiler() : this.compilersByMimeType[type || '__lolnothere'];","","    if (!compiler) {","      d(`Falling back to passthrough compiler for ${filePath}`);","      compiler = this.fallbackCompiler;","    }","","    if (!compiler) {","      throw new Error(`Couldn't find a compiler for ${filePath}`);","    }","","    let cache = this.cachesForCompilers.get(compiler);","    return cache.getOrFetchSync(filePath, (filePath, hashInfo) => this.compileUncachedSync(filePath, hashInfo, compiler));","  }","","  compileUncachedSync(filePath, hashInfo, compiler) {","    let inputMimeType = _mimeTypes2.default.lookup(filePath);","","    if (hashInfo.isFileBinary) {","      return {","        binaryData: hashInfo.binaryData || _fs2.default.readFileSync(filePath),","        mimeType: inputMimeType,","        dependentFiles: []","      };","    }","","    let ctx = {};","    let code = hashInfo.sourceCode || _fs2.default.readFileSync(filePath, 'utf8');","","    if (!compiler.shouldCompileFileSync(code, ctx)) {","      d(`Compiler returned false for shouldCompileFile: ${filePath}`);","      return { code, mimeType: _mimeTypes2.default.lookup(filePath), dependentFiles: [] };","    }","","    let dependentFiles = compiler.determineDependentFilesSync(code, filePath, ctx);","","    let result = compiler.compileSync(code, filePath, ctx);","","    let shouldInlineHtmlify = inputMimeType !== 'text/html' && result.mimeType === 'text/html';","","    let isPassthrough = result.mimeType === 'text/plain' || !result.mimeType || CompilerHost.shouldPassthrough(hashInfo);","","    if (finalForms[result.mimeType] && !shouldInlineHtmlify || isPassthrough) {","      // Got something we can use in-browser, let's return it","      return Object.assign(result, { dependentFiles });","    } else {","      d(`Recursively compiling result of ${filePath} with non-final MIME type ${result.mimeType}, input was ${inputMimeType}`);","","      hashInfo = Object.assign({ sourceCode: result.code, mimeType: result.mimeType }, hashInfo);","      compiler = this.compilersByMimeType[result.mimeType || '__lolnothere'];","","      if (!compiler) {","        d(`Recursive compile failed - intermediate result: ${JSON.stringify(result)}`);","","        throw new Error(`Compiling ${filePath} resulted in a MIME type of ${result.mimeType}, which we don't know how to handle`);","      }","","      return this.compileUncachedSync(`${filePath}.${_mimeTypes2.default.extension(result.mimeType || 'txt')}`, hashInfo, compiler);","    }","  }","","  compileAllSync(rootDirectory) {","    let shouldCompile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;","","    let should = shouldCompile || function () {","      return true;","    };","","    (0, _forAllFiles.forAllFilesSync)(rootDirectory, f => {","      if (!should(f)) return;","      return this.compileSync(f, this.compilersByMimeType);","    });","  }","","  /*","   * Other stuff","   */","","  /**","   * Returns the passthrough compiler","   *","   * @private","   */","  getPassthroughCompiler() {","    return this.compilersByMimeType['text/plain'];","  }","","  /**","   * Determines whether we should even try to compile the content. Note that in","   * some cases, content will still be in cache even if this returns true, and","   * in other cases (isInNodeModules), we'll know explicitly to not even bother","   * looking in the cache.","   *","   * @private","   */","  static shouldPassthrough(hashInfo) {","    return hashInfo.isMinified || hashInfo.isInNodeModules || hashInfo.hasSourceMap || hashInfo.isFileBinary;","  }","","  /**","   * Look at the code of a node modules and see the sourceMapping path.","   * If there is any, check the path and try to fix it with and","   * root relative path.","   * @private","   */","  static fixNodeModulesSourceMapping(sourceCode, sourcePath, appRoot) {","    return _asyncToGenerator(function* () {","      let regexSourceMapping = /\\/\\/#.*sourceMappingURL=(?!data:)([^\"'].*)/i;","      let sourceMappingCheck = sourceCode.match(regexSourceMapping);","","      if (sourceMappingCheck && sourceMappingCheck[1] && sourceMappingCheck[1] !== '') {","        let sourceMapPath = sourceMappingCheck[1];","","        try {","          yield _promise.pfs.stat(sourceMapPath);","        } catch (error) {","          let normRoot = _path2.default.normalize(appRoot);","          let absPathToModule = _path2.default.dirname(sourcePath.replace(normRoot, '').substring(1));","          let newMapPath = _path2.default.join(absPathToModule, sourceMapPath);","","          return sourceCode.replace(regexSourceMapping, `//# sourceMappingURL=${newMapPath}`);","        }","      }","","      return sourceCode;","    })();","  }","","  /**","   * Look at the code of a node modules and see the sourceMapping path.","   * If there is any, check the path and try to fix it with and","   * root relative path.","   * @private","   */","  static fixNodeModulesSourceMappingSync(sourceCode, sourcePath, appRoot) {","    let regexSourceMapping = /\\/\\/#.*sourceMappingURL=(?!data:)([^\"'].*)/i;","    let sourceMappingCheck = sourceCode.match(regexSourceMapping);","","    if (sourceMappingCheck && sourceMappingCheck[1] && sourceMappingCheck[1] !== '') {","      let sourceMapPath = sourceMappingCheck[1];","","      try {","        _fs2.default.statSync(sourceMapPath);","      } catch (error) {","        let normRoot = _path2.default.normalize(appRoot);","        let absPathToModule = _path2.default.dirname(sourcePath.replace(normRoot, '').substring(1));","        let newMapPath = _path2.default.join(absPathToModule, sourceMapPath);","","        return sourceCode.replace(regexSourceMapping, `//# sourceMappingURL=${newMapPath}`);","      }","    }","","    return sourceCode;","  }","}","exports.default = CompilerHost;","//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":7,"47":1,"49":1,"51":1,"54":1,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"120":0,"121":0,"147":0,"148":0,"149":0,"150":0,"151":0,"153":0,"155":0,"156":0,"157":0,"159":0,"162":0,"194":0,"195":0,"196":0,"197":0,"198":0,"200":0,"202":0,"203":0,"204":0,"207":0,"219":0,"221":0,"222":0,"223":0,"224":0,"226":0,"233":0,"234":0,"237":0,"242":0,"243":0,"244":0,"263":0,"272":0,"274":0,"276":0,"277":0,"278":0,"284":0,"288":0,"295":0,"296":0,"299":0,"300":0,"302":0,"304":0,"308":0,"311":0,"313":0,"315":0,"320":0,"321":0,"322":0,"325":0,"335":0,"337":0,"338":0,"340":0,"341":0,"343":0,"345":0,"346":0,"347":0,"348":0,"351":0,"353":0,"354":0,"355":0,"358":0,"359":0,"362":0,"363":0,"364":0,"375":0,"377":0,"378":0,"380":0,"381":0,"388":0,"389":0,"391":0,"392":0,"393":0,"396":0,"398":0,"399":0,"401":0,"403":0,"405":0,"407":0,"409":0,"411":0,"412":0,"414":0,"415":0,"417":0,"420":0,"439":0,"441":0,"442":0,"443":0,"444":0,"447":0,"448":0,"450":0,"451":0,"457":0,"458":0,"460":0,"461":0,"470":0,"474":0,"476":0,"477":0,"478":0,"480":0,"482":0,"483":0,"484":0,"486":0,"489":0,"493":0,"495":0,"496":0,"497":0,"499":0,"501":0,"502":0,"503":0,"506":0,"510":0,"511":0,"512":0,"514":0,"521":0,"522":0,"525":0,"530":0,"531":0,"532":0,"537":0,"538":0,"539":0,"545":0,"548":0,"549":0,"557":0,"564":0,"565":0,"568":0,"569":0,"571":0,"573":0,"577":0,"580":0,"582":0,"584":0,"589":0,"590":0,"591":0,"594":0,"598":0,"600":0,"601":0,"603":0,"605":0,"606":0,"607":0,"608":0,"611":0,"613":0,"614":0,"615":0,"618":0,"619":0,"622":0,"623":0,"627":0,"629":0,"630":0,"637":0,"638":0,"640":0,"641":0,"642":0,"645":0,"647":0,"649":0,"651":0,"653":0,"655":0,"657":0,"659":0,"660":0,"662":0,"663":0,"665":0,"668":0,"673":0,"675":0,"676":0,"679":0,"680":0,"681":0,"695":0,"707":0,"717":0,"718":0,"719":0,"721":0,"722":0,"724":0,"725":0,"727":0,"728":0,"729":0,"731":0,"735":0,"746":0,"747":0,"749":0,"750":0,"752":0,"753":0,"755":0,"756":0,"757":0,"759":0,"763":0,"766":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/for-all-files.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/for-all-files.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"_asyncToGenerator","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":52}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":110},"end":{"line":21,"column":137}}},"5":{"name":"step","line":21,"loc":{"start":{"line":21,"column":139},"end":{"line":21,"column":163}}},"6":{"name":"(anonymous_6)","line":21,"loc":{"start":{"line":21,"column":341},"end":{"line":21,"column":358}}},"7":{"name":"(anonymous_7)","line":21,"loc":{"start":{"line":21,"column":384},"end":{"line":21,"column":399}}},"8":{"name":"forAllFiles","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}}},"9":{"name":"(anonymous_9)","line":34,"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":49}}},"10":{"name":"rec","line":51,"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":28}}},"11":{"name":"forAllFilesSync","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"10":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":458}},"12":{"start":{"line":21,"column":33},"end":{"line":21,"column":456}},"13":{"start":{"line":21,"column":54},"end":{"line":21,"column":90}},"14":{"start":{"line":21,"column":91},"end":{"line":21,"column":453}},"15":{"start":{"line":21,"column":139},"end":{"line":21,"column":428}},"16":{"start":{"line":21,"column":165},"end":{"line":21,"column":263}},"17":{"start":{"line":21,"column":171},"end":{"line":21,"column":196}},"18":{"start":{"line":21,"column":197},"end":{"line":21,"column":220}},"19":{"start":{"line":21,"column":239},"end":{"line":21,"column":253}},"20":{"start":{"line":21,"column":254},"end":{"line":21,"column":261}},"21":{"start":{"line":21,"column":264},"end":{"line":21,"column":426}},"22":{"start":{"line":21,"column":281},"end":{"line":21,"column":296}},"23":{"start":{"line":21,"column":306},"end":{"line":21,"column":424}},"24":{"start":{"line":21,"column":360},"end":{"line":21,"column":380}},"25":{"start":{"line":21,"column":401},"end":{"line":21,"column":420}},"26":{"start":{"line":21,"column":429},"end":{"line":21,"column":449}},"27":{"start":{"line":28,"column":0},"end":{"line":57,"column":1}},"28":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"29":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"30":{"start":{"line":33,"column":2},"end":{"line":54,"column":7}},"31":{"start":{"line":34,"column":4},"end":{"line":49,"column":7}},"32":{"start":{"line":35,"column":6},"end":{"line":35,"column":52}},"33":{"start":{"line":37,"column":6},"end":{"line":48,"column":7}},"34":{"start":{"line":38,"column":8},"end":{"line":38,"column":54}},"35":{"start":{"line":39,"column":8},"end":{"line":39,"column":54}},"36":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"37":{"start":{"line":42,"column":10},"end":{"line":42,"column":30}},"38":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"39":{"start":{"line":46,"column":10},"end":{"line":46,"column":40}},"40":{"start":{"line":51,"column":4},"end":{"line":53,"column":6}},"41":{"start":{"line":52,"column":6},"end":{"line":52,"column":41}},"42":{"start":{"line":56,"column":2},"end":{"line":56,"column":28}},"43":{"start":{"line":59,"column":0},"end":{"line":82,"column":1}},"44":{"start":{"line":60,"column":2},"end":{"line":62,"column":3}},"45":{"start":{"line":61,"column":4},"end":{"line":61,"column":39}},"46":{"start":{"line":64,"column":2},"end":{"line":79,"column":4}},"47":{"start":{"line":65,"column":4},"end":{"line":78,"column":7}},"48":{"start":{"line":66,"column":6},"end":{"line":66,"column":52}},"49":{"start":{"line":67,"column":6},"end":{"line":67,"column":50}},"50":{"start":{"line":69,"column":6},"end":{"line":72,"column":7}},"51":{"start":{"line":70,"column":8},"end":{"line":70,"column":22}},"52":{"start":{"line":71,"column":8},"end":{"line":71,"column":15}},"53":{"start":{"line":74,"column":6},"end":{"line":77,"column":7}},"54":{"start":{"line":75,"column":8},"end":{"line":75,"column":32}},"55":{"start":{"line":76,"column":8},"end":{"line":76,"column":15}},"56":{"start":{"line":81,"column":2},"end":{"line":81,"column":21}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":264},"end":{"line":21,"column":264}},{"start":{"line":21,"column":264},"end":{"line":21,"column":264}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"6":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.forAllFiles = forAllFiles;","exports.forAllFilesSync = forAllFilesSync;","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _path = require('path');","","var _path2 = _interopRequireDefault(_path);","","var _promise = require('./promise');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","/**"," * Invokes a method on all files in a directory recursively."," * "," * @private"," */","function forAllFiles(rootDirectory, func) {","  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {","    args[_key - 2] = arguments[_key];","  }","","  let rec = (() => {","    var _ref = _asyncToGenerator(function* (dir) {","      let entries = yield _promise.pfs.readdir(dir);","","      for (let name of entries) {","        let fullName = _path2.default.join(dir, name);","        let stats = yield _promise.pfs.stat(fullName);","","        if (stats.isDirectory()) {","          yield rec(fullName);","        }","","        if (stats.isFile()) {","          yield func(fullName, ...args);","        }","      }","    });","","    return function rec(_x) {","      return _ref.apply(this, arguments);","    };","  })();","","  return rec(rootDirectory);","}","","function forAllFilesSync(rootDirectory, func) {","  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {","    args[_key2 - 2] = arguments[_key2];","  }","","  let rec = dir => {","    _fs2.default.readdirSync(dir).forEach(name => {","      let fullName = _path2.default.join(dir, name);","      let stats = _fs2.default.statSync(fullName);","","      if (stats.isDirectory()) {","        rec(fullName);","        return;","      }","","      if (stats.isFile()) {","        func(fullName, ...args);","        return;","      }","    });","  };","","  rec(rootDirectory);","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9mb3ItYWxsLWZpbGVzLmpzIl0sIm5hbWVzIjpbImZvckFsbEZpbGVzIiwiZm9yQWxsRmlsZXNTeW5jIiwicm9vdERpcmVjdG9yeSIsImZ1bmMiLCJhcmdzIiwicmVjIiwiZGlyIiwiZW50cmllcyIsInJlYWRkaXIiLCJuYW1lIiwiZnVsbE5hbWUiLCJqb2luIiwic3RhdHMiLCJzdGF0IiwiaXNEaXJlY3RvcnkiLCJpc0ZpbGUiLCJyZWFkZGlyU3luYyIsImZvckVhY2giLCJzdGF0U3luYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFVZ0JBLFcsR0FBQUEsVztRQXFCQUMsZSxHQUFBQSxlOztBQS9CaEI7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFHQTs7Ozs7QUFLTyxTQUFTRCxXQUFULENBQXFCRSxhQUFyQixFQUFvQ0MsSUFBcEMsRUFBbUQ7QUFBQSxvQ0FBTkMsSUFBTTtBQUFOQSxRQUFNO0FBQUE7O0FBQ3hELE1BQUlDO0FBQUEsaUNBQU0sV0FBT0MsR0FBUCxFQUFlO0FBQ3ZCLFVBQUlDLFVBQVUsTUFBTSxhQUFJQyxPQUFKLENBQVlGLEdBQVosQ0FBcEI7O0FBRUEsV0FBSyxJQUFJRyxJQUFULElBQWlCRixPQUFqQixFQUEwQjtBQUN4QixZQUFJRyxXQUFXLGVBQUtDLElBQUwsQ0FBVUwsR0FBVixFQUFlRyxJQUFmLENBQWY7QUFDQSxZQUFJRyxRQUFRLE1BQU0sYUFBSUMsSUFBSixDQUFTSCxRQUFULENBQWxCOztBQUVBLFlBQUlFLE1BQU1FLFdBQU4sRUFBSixFQUF5QjtBQUN2QixnQkFBTVQsSUFBSUssUUFBSixDQUFOO0FBQ0Q7O0FBRUQsWUFBSUUsTUFBTUcsTUFBTixFQUFKLEVBQW9CO0FBQ2xCLGdCQUFNWixLQUFLTyxRQUFMLEVBQWUsR0FBR04sSUFBbEIsQ0FBTjtBQUNEO0FBQ0Y7QUFDRixLQWZHOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQUo7O0FBaUJBLFNBQU9DLElBQUlILGFBQUosQ0FBUDtBQUNEOztBQUVNLFNBQVNELGVBQVQsQ0FBeUJDLGFBQXpCLEVBQXdDQyxJQUF4QyxFQUF1RDtBQUFBLHFDQUFOQyxJQUFNO0FBQU5BLFFBQU07QUFBQTs7QUFDNUQsTUFBSUMsTUFBT0MsR0FBRCxJQUFTO0FBQ2pCLGlCQUFHVSxXQUFILENBQWVWLEdBQWYsRUFBb0JXLE9BQXBCLENBQTZCUixJQUFELElBQVU7QUFDcEMsVUFBSUMsV0FBVyxlQUFLQyxJQUFMLENBQVVMLEdBQVYsRUFBZUcsSUFBZixDQUFmO0FBQ0EsVUFBSUcsUUFBUSxhQUFHTSxRQUFILENBQVlSLFFBQVosQ0FBWjs7QUFFQSxVQUFJRSxNQUFNRSxXQUFOLEVBQUosRUFBeUI7QUFDdkJULFlBQUlLLFFBQUo7QUFDQTtBQUNEOztBQUVELFVBQUlFLE1BQU1HLE1BQU4sRUFBSixFQUFvQjtBQUNsQlosYUFBS08sUUFBTCxFQUFlLEdBQUdOLElBQWxCO0FBQ0E7QUFDRDtBQUNGLEtBYkQ7QUFjRCxHQWZEOztBQWlCQUMsTUFBSUgsYUFBSjtBQUNEIiwiZmlsZSI6ImZvci1hbGwtZmlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IHtwZnN9IGZyb20gJy4vcHJvbWlzZSc7XHJcblxyXG5cclxuLyoqXHJcbiAqIEludm9rZXMgYSBtZXRob2Qgb24gYWxsIGZpbGVzIGluIGEgZGlyZWN0b3J5IHJlY3Vyc2l2ZWx5LlxyXG4gKiBcclxuICogQHByaXZhdGVcclxuICovIFxyXG5leHBvcnQgZnVuY3Rpb24gZm9yQWxsRmlsZXMocm9vdERpcmVjdG9yeSwgZnVuYywgLi4uYXJncykge1xyXG4gIGxldCByZWMgPSBhc3luYyAoZGlyKSA9PiB7XHJcbiAgICBsZXQgZW50cmllcyA9IGF3YWl0IHBmcy5yZWFkZGlyKGRpcik7XHJcbiAgICBcclxuICAgIGZvciAobGV0IG5hbWUgb2YgZW50cmllcykge1xyXG4gICAgICBsZXQgZnVsbE5hbWUgPSBwYXRoLmpvaW4oZGlyLCBuYW1lKTtcclxuICAgICAgbGV0IHN0YXRzID0gYXdhaXQgcGZzLnN0YXQoZnVsbE5hbWUpO1xyXG5cclxuICAgICAgaWYgKHN0YXRzLmlzRGlyZWN0b3J5KCkpIHtcclxuICAgICAgICBhd2FpdCByZWMoZnVsbE5hbWUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoc3RhdHMuaXNGaWxlKCkpIHtcclxuICAgICAgICBhd2FpdCBmdW5jKGZ1bGxOYW1lLCAuLi5hcmdzKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHJldHVybiByZWMocm9vdERpcmVjdG9yeSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmb3JBbGxGaWxlc1N5bmMocm9vdERpcmVjdG9yeSwgZnVuYywgLi4uYXJncykge1xyXG4gIGxldCByZWMgPSAoZGlyKSA9PiB7XHJcbiAgICBmcy5yZWFkZGlyU3luYyhkaXIpLmZvckVhY2goKG5hbWUpID0+IHtcclxuICAgICAgbGV0IGZ1bGxOYW1lID0gcGF0aC5qb2luKGRpciwgbmFtZSk7XHJcbiAgICAgIGxldCBzdGF0cyA9IGZzLnN0YXRTeW5jKGZ1bGxOYW1lKTtcclxuICAgICAgXHJcbiAgICAgIGlmIChzdGF0cy5pc0RpcmVjdG9yeSgpKSB7XHJcbiAgICAgICAgcmVjKGZ1bGxOYW1lKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGlmIChzdGF0cy5pc0ZpbGUoKSkge1xyXG4gICAgICAgIGZ1bmMoZnVsbE5hbWUsIC4uLmFyZ3MpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBcclxuICByZWMocm9vdERpcmVjdG9yeSk7XHJcbn1cclxuIl19"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":2,"21":1,"28":1,"29":0,"30":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"45":0,"46":0,"51":0,"52":0,"56":0,"59":1,"60":0,"61":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"81":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/compile-cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/compile-cache.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":37}}},"2":{"name":"_asyncToGenerator","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":31}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":40},"end":{"line":31,"column":52}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":110},"end":{"line":31,"column":137}}},"5":{"name":"step","line":31,"loc":{"start":{"line":31,"column":139},"end":{"line":31,"column":163}}},"6":{"name":"(anonymous_6)","line":31,"loc":{"start":{"line":31,"column":341},"end":{"line":31,"column":358}}},"7":{"name":"(anonymous_7)","line":31,"loc":{"start":{"line":31,"column":384},"end":{"line":31,"column":399}}},"8":{"name":"(anonymous_8)","line":54,"loc":{"start":{"line":54,"column":13},"end":{"line":54,"column":42}}},"9":{"name":"(anonymous_9)","line":84,"loc":{"start":{"line":84,"column":27},"end":{"line":84,"column":66}}},"10":{"name":"(anonymous_10)","line":131,"loc":{"start":{"line":131,"column":5},"end":{"line":131,"column":16}}},"11":{"name":"(anonymous_11)","line":134,"loc":{"start":{"line":134,"column":29},"end":{"line":134,"column":42}}},"12":{"name":"(anonymous_12)","line":189,"loc":{"start":{"line":189,"column":6},"end":{"line":189,"column":61}}},"13":{"name":"(anonymous_13)","line":192,"loc":{"start":{"line":192,"column":29},"end":{"line":192,"column":42}}},"14":{"name":"(anonymous_14)","line":232,"loc":{"start":{"line":232,"column":12},"end":{"line":232,"column":32}}},"15":{"name":"(anonymous_15)","line":235,"loc":{"start":{"line":235,"column":29},"end":{"line":235,"column":42}}},"16":{"name":"(anonymous_16)","line":264,"loc":{"start":{"line":264,"column":30},"end":{"line":264,"column":44}}},"17":{"name":"(anonymous_17)","line":267,"loc":{"start":{"line":267,"column":29},"end":{"line":267,"column":42}}},"18":{"name":"(anonymous_18)","line":287,"loc":{"start":{"line":287,"column":9},"end":{"line":287,"column":20}}},"19":{"name":"(anonymous_19)","line":327,"loc":{"start":{"line":327,"column":10},"end":{"line":327,"column":65}}},"20":{"name":"(anonymous_20)","line":342,"loc":{"start":{"line":342,"column":16},"end":{"line":342,"column":36}}},"21":{"name":"(anonymous_21)","line":363,"loc":{"start":{"line":363,"column":22},"end":{"line":363,"column":43}}},"22":{"name":"(anonymous_22)","line":383,"loc":{"start":{"line":383,"column":15},"end":{"line":383,"column":47}}},"23":{"name":"(anonymous_23)","line":386,"loc":{"start":{"line":386,"column":29},"end":{"line":386,"column":42}}},"24":{"name":"(anonymous_24)","line":392,"loc":{"start":{"line":392,"column":19},"end":{"line":392,"column":51}}},"25":{"name":"(anonymous_25)","line":400,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":17}}},"26":{"name":"(anonymous_26)","line":409,"loc":{"start":{"line":409,"column":18},"end":{"line":409,"column":21}}},"27":{"name":"(anonymous_27)","line":422,"loc":{"start":{"line":422,"column":26},"end":{"line":422,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":65}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":47}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":95}},"14":{"start":{"line":29,"column":39},"end":{"line":29,"column":93}},"15":{"start":{"line":31,"column":0},"end":{"line":31,"column":458}},"16":{"start":{"line":31,"column":33},"end":{"line":31,"column":456}},"17":{"start":{"line":31,"column":54},"end":{"line":31,"column":90}},"18":{"start":{"line":31,"column":91},"end":{"line":31,"column":453}},"19":{"start":{"line":31,"column":139},"end":{"line":31,"column":428}},"20":{"start":{"line":31,"column":165},"end":{"line":31,"column":263}},"21":{"start":{"line":31,"column":171},"end":{"line":31,"column":196}},"22":{"start":{"line":31,"column":197},"end":{"line":31,"column":220}},"23":{"start":{"line":31,"column":239},"end":{"line":31,"column":253}},"24":{"start":{"line":31,"column":254},"end":{"line":31,"column":261}},"25":{"start":{"line":31,"column":264},"end":{"line":31,"column":426}},"26":{"start":{"line":31,"column":281},"end":{"line":31,"column":296}},"27":{"start":{"line":31,"column":306},"end":{"line":31,"column":424}},"28":{"start":{"line":31,"column":360},"end":{"line":31,"column":380}},"29":{"start":{"line":31,"column":401},"end":{"line":31,"column":420}},"30":{"start":{"line":31,"column":429},"end":{"line":31,"column":449}},"31":{"start":{"line":33,"column":0},"end":{"line":33,"column":61}},"32":{"start":{"line":55,"column":4},"end":{"line":55,"column":97}},"33":{"start":{"line":57,"column":4},"end":{"line":57,"column":31}},"34":{"start":{"line":58,"column":4},"end":{"line":58,"column":43}},"35":{"start":{"line":59,"column":4},"end":{"line":59,"column":57}},"36":{"start":{"line":85,"column":4},"end":{"line":85,"column":97}},"37":{"start":{"line":86,"column":4},"end":{"line":86,"column":97}},"38":{"start":{"line":88,"column":4},"end":{"line":88,"column":28}},"39":{"start":{"line":89,"column":4},"end":{"line":105,"column":6}},"40":{"start":{"line":90,"column":6},"end":{"line":90,"column":44}},"41":{"start":{"line":90,"column":24},"end":{"line":90,"column":44}},"42":{"start":{"line":92,"column":6},"end":{"line":96,"column":8}},"43":{"start":{"line":98,"column":6},"end":{"line":98,"column":95}},"44":{"start":{"line":100,"column":6},"end":{"line":100,"column":55}},"45":{"start":{"line":101,"column":6},"end":{"line":101,"column":64}},"46":{"start":{"line":103,"column":6},"end":{"line":103,"column":61}},"47":{"start":{"line":103,"column":25},"end":{"line":103,"column":61}},"48":{"start":{"line":104,"column":6},"end":{"line":104,"column":26}},"49":{"start":{"line":107,"column":4},"end":{"line":107,"column":52}},"50":{"start":{"line":108,"column":4},"end":{"line":108,"column":36}},"51":{"start":{"line":110,"column":4},"end":{"line":110,"column":43}},"52":{"start":{"line":111,"column":4},"end":{"line":111,"column":68}},"53":{"start":{"line":111,"column":33},"end":{"line":111,"column":67}},"54":{"start":{"line":113,"column":4},"end":{"line":113,"column":15}},"55":{"start":{"line":132,"column":4},"end":{"line":132,"column":21}},"56":{"start":{"line":134,"column":4},"end":{"line":173,"column":9}},"57":{"start":{"line":135,"column":6},"end":{"line":135,"column":43}},"58":{"start":{"line":136,"column":6},"end":{"line":136,"column":98}},"59":{"start":{"line":138,"column":6},"end":{"line":138,"column":22}},"60":{"start":{"line":139,"column":6},"end":{"line":139,"column":26}},"61":{"start":{"line":140,"column":6},"end":{"line":140,"column":28}},"62":{"start":{"line":141,"column":6},"end":{"line":141,"column":32}},"63":{"start":{"line":143,"column":6},"end":{"line":143,"column":27}},"64":{"start":{"line":144,"column":6},"end":{"line":170,"column":7}},"65":{"start":{"line":145,"column":8},"end":{"line":145,"column":77}},"66":{"start":{"line":146,"column":8},"end":{"line":146,"column":26}},"67":{"start":{"line":148,"column":8},"end":{"line":167,"column":9}},"68":{"start":{"line":149,"column":10},"end":{"line":149,"column":48}},"69":{"start":{"line":150,"column":10},"end":{"line":150,"column":84}},"70":{"start":{"line":151,"column":10},"end":{"line":151,"column":35}},"71":{"start":{"line":152,"column":10},"end":{"line":152,"column":47}},"72":{"start":{"line":154,"column":10},"end":{"line":154,"column":43}},"73":{"start":{"line":155,"column":10},"end":{"line":158,"column":11}},"74":{"start":{"line":156,"column":12},"end":{"line":156,"column":64}},"75":{"start":{"line":157,"column":12},"end":{"line":157,"column":65}},"76":{"start":{"line":160,"column":10},"end":{"line":160,"column":59}},"77":{"start":{"line":161,"column":10},"end":{"line":161,"column":72}},"78":{"start":{"line":163,"column":10},"end":{"line":163,"column":35}},"79":{"start":{"line":164,"column":10},"end":{"line":164,"column":29}},"80":{"start":{"line":165,"column":10},"end":{"line":165,"column":37}},"81":{"start":{"line":166,"column":10},"end":{"line":166,"column":49}},"82":{"start":{"line":169,"column":8},"end":{"line":169,"column":88}},"83":{"start":{"line":172,"column":6},"end":{"line":172,"column":70}},"84":{"start":{"line":190,"column":4},"end":{"line":190,"column":22}},"85":{"start":{"line":192,"column":4},"end":{"line":205,"column":9}},"86":{"start":{"line":193,"column":6},"end":{"line":193,"column":21}},"87":{"start":{"line":194,"column":6},"end":{"line":194,"column":77}},"88":{"start":{"line":195,"column":6},"end":{"line":195,"column":31}},"89":{"start":{"line":197,"column":6},"end":{"line":202,"column":7}},"90":{"start":{"line":198,"column":8},"end":{"line":198,"column":58}},"91":{"start":{"line":199,"column":8},"end":{"line":199,"column":109}},"92":{"start":{"line":201,"column":8},"end":{"line":201,"column":122}},"93":{"start":{"line":204,"column":6},"end":{"line":204,"column":48}},"94":{"start":{"line":233,"column":4},"end":{"line":233,"column":22}},"95":{"start":{"line":235,"column":4},"end":{"line":258,"column":9}},"96":{"start":{"line":236,"column":6},"end":{"line":236,"column":51}},"97":{"start":{"line":237,"column":6},"end":{"line":237,"column":90}},"98":{"start":{"line":239,"column":6},"end":{"line":241,"column":7}},"99":{"start":{"line":240,"column":8},"end":{"line":240,"column":27}},"100":{"start":{"line":243,"column":6},"end":{"line":243,"column":105}},"101":{"start":{"line":245,"column":6},"end":{"line":254,"column":7}},"102":{"start":{"line":246,"column":8},"end":{"line":246,"column":57}},"103":{"start":{"line":247,"column":8},"end":{"line":247,"column":122}},"104":{"start":{"line":249,"column":8},"end":{"line":249,"column":38}},"105":{"start":{"line":250,"column":8},"end":{"line":253,"column":9}},"106":{"start":{"line":251,"column":10},"end":{"line":251,"column":91}},"107":{"start":{"line":252,"column":10},"end":{"line":252,"column":74}},"108":{"start":{"line":256,"column":6},"end":{"line":256,"column":45}},"109":{"start":{"line":257,"column":6},"end":{"line":257,"column":20}},"110":{"start":{"line":265,"column":4},"end":{"line":265,"column":22}},"111":{"start":{"line":267,"column":4},"end":{"line":284,"column":9}},"112":{"start":{"line":268,"column":6},"end":{"line":268,"column":80}},"113":{"start":{"line":268,"column":67},"end":{"line":268,"column":80}},"114":{"start":{"line":270,"column":6},"end":{"line":281,"column":7}},"115":{"start":{"line":271,"column":8},"end":{"line":271,"column":88}},"116":{"start":{"line":272,"column":8},"end":{"line":274,"column":9}},"117":{"start":{"line":273,"column":10},"end":{"line":273,"column":22}},"118":{"start":{"line":276,"column":8},"end":{"line":276,"column":71}},"119":{"start":{"line":277,"column":8},"end":{"line":280,"column":9}},"120":{"start":{"line":278,"column":10},"end":{"line":278,"column":112}},"121":{"start":{"line":279,"column":10},"end":{"line":279,"column":55}},"122":{"start":{"line":279,"column":43},"end":{"line":279,"column":55}},"123":{"start":{"line":283,"column":6},"end":{"line":283,"column":19}},"124":{"start":{"line":288,"column":4},"end":{"line":288,"column":41}},"125":{"start":{"line":289,"column":4},"end":{"line":289,"column":93}},"126":{"start":{"line":291,"column":4},"end":{"line":291,"column":20}},"127":{"start":{"line":292,"column":4},"end":{"line":292,"column":24}},"128":{"start":{"line":293,"column":4},"end":{"line":293,"column":26}},"129":{"start":{"line":294,"column":4},"end":{"line":294,"column":30}},"130":{"start":{"line":296,"column":4},"end":{"line":322,"column":5}},"131":{"start":{"line":297,"column":6},"end":{"line":297,"column":78}},"132":{"start":{"line":299,"column":6},"end":{"line":299,"column":24}},"133":{"start":{"line":300,"column":6},"end":{"line":319,"column":7}},"134":{"start":{"line":301,"column":8},"end":{"line":301,"column":46}},"135":{"start":{"line":302,"column":8},"end":{"line":302,"column":78}},"136":{"start":{"line":303,"column":8},"end":{"line":303,"column":33}},"137":{"start":{"line":304,"column":8},"end":{"line":304,"column":45}},"138":{"start":{"line":306,"column":8},"end":{"line":306,"column":41}},"139":{"start":{"line":307,"column":8},"end":{"line":310,"column":9}},"140":{"start":{"line":308,"column":10},"end":{"line":308,"column":60}},"141":{"start":{"line":309,"column":10},"end":{"line":309,"column":61}},"142":{"start":{"line":312,"column":8},"end":{"line":312,"column":55}},"143":{"start":{"line":313,"column":8},"end":{"line":313,"column":66}},"144":{"start":{"line":315,"column":8},"end":{"line":315,"column":33}},"145":{"start":{"line":316,"column":8},"end":{"line":316,"column":27}},"146":{"start":{"line":317,"column":8},"end":{"line":317,"column":35}},"147":{"start":{"line":318,"column":8},"end":{"line":318,"column":47}},"148":{"start":{"line":321,"column":6},"end":{"line":321,"column":48}},"149":{"start":{"line":324,"column":4},"end":{"line":324,"column":68}},"150":{"start":{"line":328,"column":4},"end":{"line":328,"column":19}},"151":{"start":{"line":329,"column":4},"end":{"line":329,"column":73}},"152":{"start":{"line":330,"column":4},"end":{"line":330,"column":29}},"153":{"start":{"line":332,"column":4},"end":{"line":337,"column":5}},"154":{"start":{"line":333,"column":6},"end":{"line":333,"column":54}},"155":{"start":{"line":334,"column":6},"end":{"line":334,"column":105}},"156":{"start":{"line":336,"column":6},"end":{"line":336,"column":118}},"157":{"start":{"line":339,"column":4},"end":{"line":339,"column":44}},"158":{"start":{"line":343,"column":4},"end":{"line":343,"column":45}},"159":{"start":{"line":344,"column":4},"end":{"line":344,"column":71}},"160":{"start":{"line":344,"column":52},"end":{"line":344,"column":71}},"161":{"start":{"line":346,"column":4},"end":{"line":346,"column":95}},"162":{"start":{"line":348,"column":4},"end":{"line":351,"column":5}},"163":{"start":{"line":349,"column":6},"end":{"line":349,"column":55}},"164":{"start":{"line":350,"column":6},"end":{"line":350,"column":116}},"165":{"start":{"line":353,"column":4},"end":{"line":353,"column":34}},"166":{"start":{"line":354,"column":4},"end":{"line":357,"column":5}},"167":{"start":{"line":355,"column":6},"end":{"line":355,"column":85}},"168":{"start":{"line":356,"column":6},"end":{"line":356,"column":66}},"169":{"start":{"line":359,"column":4},"end":{"line":359,"column":43}},"170":{"start":{"line":360,"column":4},"end":{"line":360,"column":18}},"171":{"start":{"line":364,"column":4},"end":{"line":364,"column":55}},"172":{"start":{"line":365,"column":4},"end":{"line":365,"column":86}},"173":{"start":{"line":367,"column":4},"end":{"line":367,"column":77}},"174":{"start":{"line":368,"column":4},"end":{"line":368,"column":40}},"175":{"start":{"line":370,"column":4},"end":{"line":370,"column":18}},"176":{"start":{"line":384,"column":4},"end":{"line":384,"column":22}},"177":{"start":{"line":386,"column":4},"end":{"line":389,"column":9}},"178":{"start":{"line":387,"column":6},"end":{"line":387,"column":69}},"179":{"start":{"line":388,"column":6},"end":{"line":388,"column":63}},"180":{"start":{"line":393,"column":4},"end":{"line":393,"column":65}},"181":{"start":{"line":394,"column":4},"end":{"line":394,"column":59}},"182":{"start":{"line":403,"column":4},"end":{"line":403,"column":26}},"183":{"start":{"line":410,"column":4},"end":{"line":410,"column":30}},"184":{"start":{"line":423,"column":4},"end":{"line":423,"column":109}},"185":{"start":{"line":426,"column":0},"end":{"line":426,"column":31}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":70},"end":{"line":29,"column":73}},{"start":{"line":29,"column":76},"end":{"line":29,"column":92}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":46},"end":{"line":29,"column":49}},{"start":{"line":29,"column":53},"end":{"line":29,"column":67}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":264},"end":{"line":31,"column":264}},{"start":{"line":31,"column":264},"end":{"line":31,"column":264}}]},"4":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":77},"end":{"line":55,"column":89}},{"start":{"line":55,"column":92},"end":{"line":55,"column":96}}]},"5":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":24},"end":{"line":55,"column":44}},{"start":{"line":55,"column":48},"end":{"line":55,"column":74}}]},"6":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":25},"end":{"line":59,"column":38}},{"start":{"line":59,"column":42},"end":{"line":59,"column":56}}]},"7":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":76},"end":{"line":85,"column":88}},{"start":{"line":85,"column":91},"end":{"line":85,"column":96}}]},"8":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":23},"end":{"line":85,"column":43}},{"start":{"line":85,"column":47},"end":{"line":85,"column":73}}]},"9":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":77},"end":{"line":86,"column":89}},{"start":{"line":86,"column":92},"end":{"line":86,"column":96}}]},"10":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":24},"end":{"line":86,"column":44}},{"start":{"line":86,"column":48},"end":{"line":86,"column":74}}]},"11":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"12":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":14},"end":{"line":93,"column":27}},{"start":{"line":93,"column":31},"end":{"line":93,"column":79}}]},"13":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"14":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":33},"end":{"line":111,"column":49}},{"start":{"line":111,"column":53},"end":{"line":111,"column":67}}]},"15":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"16":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":10},"end":{"line":155,"column":10}},{"start":{"line":155,"column":10},"end":{"line":155,"column":10}}]},"17":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":6}},{"start":{"line":197,"column":6},"end":{"line":197,"column":6}}]},"18":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":6}},{"start":{"line":239,"column":6},"end":{"line":239,"column":6}}]},"19":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":11},"end":{"line":239,"column":27}},{"start":{"line":239,"column":31},"end":{"line":239,"column":53}},{"start":{"line":239,"column":58},"end":{"line":239,"column":81}}]},"20":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":20},"end":{"line":243,"column":65}},{"start":{"line":243,"column":70},"end":{"line":243,"column":104}}]},"21":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":6},"end":{"line":245,"column":6}},{"start":{"line":245,"column":6},"end":{"line":245,"column":6}}]},"22":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":10},"end":{"line":245,"column":25}},{"start":{"line":245,"column":29},"end":{"line":245,"column":66}}]},"23":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":48},"end":{"line":247,"column":59}},{"start":{"line":247,"column":63},"end":{"line":247,"column":80}}]},"24":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":8}},{"start":{"line":250,"column":8},"end":{"line":250,"column":8}}]},"25":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":6},"end":{"line":268,"column":6}},{"start":{"line":268,"column":6},"end":{"line":268,"column":6}}]},"26":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":10},"end":{"line":268,"column":27}},{"start":{"line":268,"column":31},"end":{"line":268,"column":65}}]},"27":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"28":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":8}},{"start":{"line":277,"column":8},"end":{"line":277,"column":8}}]},"29":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":12},"end":{"line":277,"column":51}},{"start":{"line":277,"column":55},"end":{"line":277,"column":101}}]},"30":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":10},"end":{"line":279,"column":10}},{"start":{"line":279,"column":10},"end":{"line":279,"column":10}}]},"31":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"32":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":8},"end":{"line":307,"column":8}},{"start":{"line":307,"column":8},"end":{"line":307,"column":8}}]},"33":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"34":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"35":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":8},"end":{"line":344,"column":24}},{"start":{"line":344,"column":28},"end":{"line":344,"column":50}}]},"36":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":17},"end":{"line":346,"column":56}},{"start":{"line":346,"column":60},"end":{"line":346,"column":94}}]},"37":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"38":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":23}},{"start":{"line":348,"column":27},"end":{"line":348,"column":64}}]},"39":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":42},"end":{"line":350,"column":53}},{"start":{"line":350,"column":57},"end":{"line":350,"column":74}}]},"40":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"41":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":11},"end":{"line":423,"column":30}},{"start":{"line":423,"column":34},"end":{"line":423,"column":58}},{"start":{"line":423,"column":62},"end":{"line":423,"column":83}},{"start":{"line":423,"column":87},"end":{"line":423,"column":108}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _path = require('path');","","var _path2 = _interopRequireDefault(_path);","","var _zlib = require('zlib');","","var _zlib2 = _interopRequireDefault(_zlib);","","var _digestForObject = require('./digest-for-object');","","var _digestForObject2 = _interopRequireDefault(_digestForObject);","","var _promise = require('./promise');","","var _mkdirp = require('mkdirp');","","var _mkdirp2 = _interopRequireDefault(_mkdirp);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","const d = require('debug')('electron-compile:compile-cache');","","/**"," * CompileCache manages getting and setting entries for a single compiler; each"," * in-use compiler will have an instance of this class, usually created via"," * {@link createFromCompiler}."," *"," * You usually will not use this class directly, it is an implementation class"," * for {@link CompileHost}."," */","class CompileCache {","  /**","   * Creates an instance, usually used for testing only.","   *","   * @param  {string} cachePath  The root directory to use as a cache path","   *","   * @param  {FileChangedCache} fileChangeCache  A file-change cache that is","   *                                             optionally pre-loaded.","   * @param {string} sourceMapPath The directory to store sourcemap separately if compiler option enabled to emit.","   *                               Default to cachePath if not specified.","   */","  constructor(cachePath, fileChangeCache) {","    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;","","    this.cachePath = cachePath;","    this.fileChangeCache = fileChangeCache;","    this.sourceMapPath = sourceMapPath || this.cachePath;","  }","","  /**","   * Creates a CompileCache from a class compatible with the CompilerBase","   * interface. This method uses the compiler name / version / options to","   * generate a unique directory name for cached results","   *","   * @param  {string} cachePath  The root path to use for the cache, a directory","   *                             representing the hash of the compiler parameters","   *                             will be created here.","   *","   * @param  {CompilerBase} compiler  The compiler to use for version / option","   *                                  information.","   *","   * @param  {FileChangedCache} fileChangeCache  A file-change cache that is","   *                                             optionally pre-loaded.","   *","   * @param  {boolean} readOnlyMode  Don't attempt to create the cache directory.","   *","   * @param {string} sourceMapPath The directory to store sourcemap separately if compiler option enabled to emit.","   *                               Default to cachePath if not specified.","   *","   * @return {CompileCache}  A configured CompileCache instance.","   */","  static createFromCompiler(cachePath, compiler, fileChangeCache) {","    let readOnlyMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;","    let sourceMapPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;","","    let newCachePath = null;","    let getCachePath = () => {","      if (newCachePath) return newCachePath;","","      const digestObj = {","        name: compiler.name || Object.getPrototypeOf(compiler).constructor.name,","        version: compiler.getCompilerVersion(),","        options: compiler.compilerOptions","      };","","      newCachePath = _path2.default.join(cachePath, (0, _digestForObject2.default)(digestObj));","","      d(`Path for ${digestObj.name}: ${newCachePath}`);","      d(`Set up with parameters: ${JSON.stringify(digestObj)}`);","","      if (!readOnlyMode) _mkdirp2.default.sync(newCachePath);","      return newCachePath;","    };","","    let ret = new CompileCache('', fileChangeCache);","    ret.getCachePath = getCachePath;","","    const newSourceMapPath = sourceMapPath;","    ret.getSourceMapPath = () => newSourceMapPath || getCachePath();","","    return ret;","  }","","  /**","   * Returns a file's compiled contents from the cache.","   *","   * @param  {string} filePath  The path to the file. FileChangedCache will look","   *                            up the hash and use that as the key in the cache.","   *","   * @return {Promise<Object>}  An object with all kinds of information","   *","   * @property {Object} hashInfo  The hash information returned from getHashForPath","   * @property {string} code  The source code if the file was a text file","   * @property {Buffer} binaryData  The file if it was a binary file","   * @property {string} mimeType  The MIME type saved in the cache.","   * @property {string[]} dependentFiles  The dependent files returned from","   *                                      compiling the file, if any.","   */","  get(filePath) {","    var _this = this;","","    return _asyncToGenerator(function* () {","      d(`Fetching ${filePath} from cache`);","      let hashInfo = yield _this.fileChangeCache.getHashForPath(_path2.default.resolve(filePath));","","      let code = null;","      let mimeType = null;","      let binaryData = null;","      let dependentFiles = null;","","      let cacheFile = null;","      try {","        cacheFile = _path2.default.join(_this.getCachePath(), hashInfo.hash);","        let result = null;","","        if (hashInfo.isFileBinary) {","          d(\"File is binary, reading out info\");","          let info = JSON.parse((yield _promise.pfs.readFile(cacheFile + '.info')));","          mimeType = info.mimeType;","          dependentFiles = info.dependentFiles;","","          binaryData = hashInfo.binaryData;","          if (!binaryData) {","            binaryData = yield _promise.pfs.readFile(cacheFile);","            binaryData = yield _promise.pzlib.gunzip(binaryData);","          }","        } else {","          let buf = yield _promise.pfs.readFile(cacheFile);","          let str = (yield _promise.pzlib.gunzip(buf)).toString('utf8');","","          result = JSON.parse(str);","          code = result.code;","          mimeType = result.mimeType;","          dependentFiles = result.dependentFiles;","        }","      } catch (e) {","        d(`Failed to read cache for ${filePath}, looked in ${cacheFile}: ${e.message}`);","      }","","      return { hashInfo, code, mimeType, binaryData, dependentFiles };","    })();","  }","","  /**","   * Saves a compiled result to cache","   *","   * @param  {Object} hashInfo  The hash information returned from getHashForPath","   *","   * @param  {string / Buffer} codeOrBinaryData   The file's contents, either as","   *                                              a string or a Buffer.","   * @param  {string} mimeType  The MIME type returned by the compiler.","   *","   * @param  {string[]} dependentFiles  The list of dependent files returned by","   *                                    the compiler.","   * @return {Promise}  Completion.","   */","  save(hashInfo, codeOrBinaryData, mimeType, dependentFiles) {","    var _this2 = this;","","    return _asyncToGenerator(function* () {","      let buf = null;","      let target = _path2.default.join(_this2.getCachePath(), hashInfo.hash);","      d(`Saving to ${target}`);","","      if (hashInfo.isFileBinary) {","        buf = yield _promise.pzlib.gzip(codeOrBinaryData);","        yield _promise.pfs.writeFile(target + '.info', JSON.stringify({ mimeType, dependentFiles }), 'utf8');","      } else {","        buf = yield _promise.pzlib.gzip(new Buffer(JSON.stringify({ code: codeOrBinaryData, mimeType, dependentFiles })));","      }","","      yield _promise.pfs.writeFile(target, buf);","    })();","  }","","  /**","   * Attempts to first get a key via {@link get}, then if it fails, call a method","   * to retrieve the contents, then save the result to cache.","   *","   * The fetcher parameter is expected to have the signature:","   *","   * Promise<Object> fetcher(filePath : string, hashInfo : Object);","   *","   * hashInfo is a value returned from getHashForPath","   * The return value of fetcher must be an Object with the properties:","   *","   * mimeType - the MIME type of the data to save","   * code (optional) - the source code as a string, if file is text","   * binaryData (optional) - the file contents as a Buffer, if file is binary","   * dependentFiles - the dependent files returned by the compiler.","   *","   * @param  {string} filePath  The path to the file. FileChangedCache will look","   *                            up the hash and use that as the key in the cache.","   *","   * @param  {Function} fetcher  A method which conforms to the description above.","   *","   * @return {Promise<Object>}  An Object which has the same fields as the","   *                            {@link get} method return result.","   */","  getOrFetch(filePath, fetcher) {","    var _this3 = this;","","    return _asyncToGenerator(function* () {","      let cacheResult = yield _this3.get(filePath);","      let anyDependenciesChanged = yield _this3.haveAnyDependentFilesChanged(cacheResult);","","      if ((cacheResult.code || cacheResult.binaryData) && !anyDependenciesChanged) {","        return cacheResult;","      }","","      let result = (yield fetcher(filePath, cacheResult.hashInfo)) || { hashInfo: cacheResult.hashInfo };","","      if (result.mimeType && !cacheResult.hashInfo.isInNodeModules) {","        d(`Cache miss: saving out info for ${filePath}`);","        yield _this3.save(cacheResult.hashInfo, result.code || result.binaryData, result.mimeType, result.dependentFiles);","","        const map = result.sourceMaps;","        if (map) {","          d(`source map for ${filePath} found, saving it to ${_this3.getSourceMapPath()}`);","          yield _this3.saveSourceMap(cacheResult.hashInfo, filePath, map);","        }","      }","","      result.hashInfo = cacheResult.hashInfo;","      return result;","    })();","  }","","  /**","   * @private Check if any of a file's dependencies have changed","   */","  haveAnyDependentFilesChanged(cacheResult) {","    var _this4 = this;","","    return _asyncToGenerator(function* () {","      if (!cacheResult.code || !cacheResult.dependentFiles.length) return false;","","      for (let dependentFile of cacheResult.dependentFiles) {","        let hasFileChanged = yield _this4.fileChangeCache.hasFileChanged(dependentFile);","        if (hasFileChanged) {","          return true;","        }","","        let dependentFileCacheResult = yield _this4.get(dependentFile);","        if (dependentFileCacheResult.dependentFiles && dependentFileCacheResult.dependentFiles.length) {","          let anySubdependentFilesChanged = yield _this4.haveAnyDependentFilesChanged(dependentFileCacheResult);","          if (anySubdependentFilesChanged) return true;","        }","      }","","      return false;","    })();","  }","","  getSync(filePath) {","    d(`Fetching ${filePath} from cache`);","    let hashInfo = this.fileChangeCache.getHashForPathSync(_path2.default.resolve(filePath));","","    let code = null;","    let mimeType = null;","    let binaryData = null;","    let dependentFiles = null;","","    try {","      let cacheFile = _path2.default.join(this.getCachePath(), hashInfo.hash);","","      let result = null;","      if (hashInfo.isFileBinary) {","        d(\"File is binary, reading out info\");","        let info = JSON.parse(_fs2.default.readFileSync(cacheFile + '.info'));","        mimeType = info.mimeType;","        dependentFiles = info.dependentFiles;","","        binaryData = hashInfo.binaryData;","        if (!binaryData) {","          binaryData = _fs2.default.readFileSync(cacheFile);","          binaryData = _zlib2.default.gunzipSync(binaryData);","        }","      } else {","        let buf = _fs2.default.readFileSync(cacheFile);","        let str = _zlib2.default.gunzipSync(buf).toString('utf8');","","        result = JSON.parse(str);","        code = result.code;","        mimeType = result.mimeType;","        dependentFiles = result.dependentFiles;","      }","    } catch (e) {","      d(`Failed to read cache for ${filePath}`);","    }","","    return { hashInfo, code, mimeType, binaryData, dependentFiles };","  }","","  saveSync(hashInfo, codeOrBinaryData, mimeType, dependentFiles) {","    let buf = null;","    let target = _path2.default.join(this.getCachePath(), hashInfo.hash);","    d(`Saving to ${target}`);","","    if (hashInfo.isFileBinary) {","      buf = _zlib2.default.gzipSync(codeOrBinaryData);","      _fs2.default.writeFileSync(target + '.info', JSON.stringify({ mimeType, dependentFiles }), 'utf8');","    } else {","      buf = _zlib2.default.gzipSync(new Buffer(JSON.stringify({ code: codeOrBinaryData, mimeType, dependentFiles })));","    }","","    _fs2.default.writeFileSync(target, buf);","  }","","  getOrFetchSync(filePath, fetcher) {","    let cacheResult = this.getSync(filePath);","    if (cacheResult.code || cacheResult.binaryData) return cacheResult;","","    let result = fetcher(filePath, cacheResult.hashInfo) || { hashInfo: cacheResult.hashInfo };","","    if (result.mimeType && !cacheResult.hashInfo.isInNodeModules) {","      d(`Cache miss: saving out info for ${filePath}`);","      this.saveSync(cacheResult.hashInfo, result.code || result.binaryData, result.mimeType, result.dependentFiles);","    }","","    const map = result.sourceMaps;","    if (map) {","      d(`source map for ${filePath} found, saving it to ${this.getSourceMapPath()}`);","      this.saveSourceMapSync(cacheResult.hashInfo, filePath, map);","    }","","    result.hashInfo = cacheResult.hashInfo;","    return result;","  }","","  buildSourceMapTarget(hashInfo, filePath) {","    const fileName = _path2.default.basename(filePath);","    const mapFileName = fileName.replace(_path2.default.extname(fileName), '.js.map');","","    const target = _path2.default.join(this.getSourceMapPath(), mapFileName);","    d(`Sourcemap target is: ${target}`);","","    return target;","  }","","  /**","   * Saves sourcemap string into cache, or specified separate dir","   *","   * @param  {Object} hashInfo  The hash information returned from getHashForPath","   *","   * @param  {string} filePath Path to original file to construct sourcemap file name","    * @param  {string} sourceMap Sourcemap data as string","   *","   * @memberOf CompileCache","   */","  saveSourceMap(hashInfo, filePath, sourceMap) {","    var _this5 = this;","","    return _asyncToGenerator(function* () {","      const target = _this5.buildSourceMapTarget(hashInfo, filePath);","      yield _promise.pfs.writeFile(target, sourceMap, 'utf-8');","    })();","  }","","  saveSourceMapSync(hashInfo, filePath, sourceMap) {","    const target = this.buildSourceMapTarget(hashInfo, filePath);","    _fs2.default.writeFileSync(target, sourceMap, 'utf-8');","  }","","  /**","   * @private","   */","  getCachePath() {","    // NB: This is an evil hack so that createFromCompiler can stomp it","    // at will","    return this.cachePath;","  }","","  /**","   * @private","   */","  getSourceMapPath() {","    return this.sourceMapPath;","  }","","  /**","   * Returns whether a file should not be compiled. Note that this doesn't","   * necessarily mean it won't end up in the cache, only that its contents are","   * saved verbatim instead of trying to find an appropriate compiler.","   *","   * @param  {Object} hashInfo  The hash information returned from getHashForPath","   *","   * @return {boolean}  True if a file should be ignored","   */","  static shouldPassthrough(hashInfo) {","    return hashInfo.isMinified || hashInfo.isInNodeModules || hashInfo.hasSourceMap || hashInfo.isFileBinary;","  }","}","exports.default = CompileCache;","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21waWxlLWNhY2hlLmpzIl0sIm5hbWVzIjpbImQiLCJyZXF1aXJlIiwiQ29tcGlsZUNhY2hlIiwiY29uc3RydWN0b3IiLCJjYWNoZVBhdGgiLCJmaWxlQ2hhbmdlQ2FjaGUiLCJzb3VyY2VNYXBQYXRoIiwiY3JlYXRlRnJvbUNvbXBpbGVyIiwiY29tcGlsZXIiLCJyZWFkT25seU1vZGUiLCJuZXdDYWNoZVBhdGgiLCJnZXRDYWNoZVBhdGgiLCJkaWdlc3RPYmoiLCJuYW1lIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJ2ZXJzaW9uIiwiZ2V0Q29tcGlsZXJWZXJzaW9uIiwib3B0aW9ucyIsImNvbXBpbGVyT3B0aW9ucyIsImpvaW4iLCJKU09OIiwic3RyaW5naWZ5Iiwic3luYyIsInJldCIsIm5ld1NvdXJjZU1hcFBhdGgiLCJnZXRTb3VyY2VNYXBQYXRoIiwiZ2V0IiwiZmlsZVBhdGgiLCJoYXNoSW5mbyIsImdldEhhc2hGb3JQYXRoIiwicmVzb2x2ZSIsImNvZGUiLCJtaW1lVHlwZSIsImJpbmFyeURhdGEiLCJkZXBlbmRlbnRGaWxlcyIsImNhY2hlRmlsZSIsImhhc2giLCJyZXN1bHQiLCJpc0ZpbGVCaW5hcnkiLCJpbmZvIiwicGFyc2UiLCJyZWFkRmlsZSIsImd1bnppcCIsImJ1ZiIsInN0ciIsInRvU3RyaW5nIiwiZSIsIm1lc3NhZ2UiLCJzYXZlIiwiY29kZU9yQmluYXJ5RGF0YSIsInRhcmdldCIsImd6aXAiLCJ3cml0ZUZpbGUiLCJCdWZmZXIiLCJnZXRPckZldGNoIiwiZmV0Y2hlciIsImNhY2hlUmVzdWx0IiwiYW55RGVwZW5kZW5jaWVzQ2hhbmdlZCIsImhhdmVBbnlEZXBlbmRlbnRGaWxlc0NoYW5nZWQiLCJpc0luTm9kZU1vZHVsZXMiLCJtYXAiLCJzb3VyY2VNYXBzIiwic2F2ZVNvdXJjZU1hcCIsImxlbmd0aCIsImRlcGVuZGVudEZpbGUiLCJoYXNGaWxlQ2hhbmdlZCIsImRlcGVuZGVudEZpbGVDYWNoZVJlc3VsdCIsImFueVN1YmRlcGVuZGVudEZpbGVzQ2hhbmdlZCIsImdldFN5bmMiLCJnZXRIYXNoRm9yUGF0aFN5bmMiLCJyZWFkRmlsZVN5bmMiLCJndW56aXBTeW5jIiwic2F2ZVN5bmMiLCJnemlwU3luYyIsIndyaXRlRmlsZVN5bmMiLCJnZXRPckZldGNoU3luYyIsInNhdmVTb3VyY2VNYXBTeW5jIiwiYnVpbGRTb3VyY2VNYXBUYXJnZXQiLCJmaWxlTmFtZSIsImJhc2VuYW1lIiwibWFwRmlsZU5hbWUiLCJyZXBsYWNlIiwiZXh0bmFtZSIsInNvdXJjZU1hcCIsInNob3VsZFBhc3N0aHJvdWdoIiwiaXNNaW5pZmllZCIsImhhc1NvdXJjZU1hcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxNQUFNQSxJQUFJQyxRQUFRLE9BQVIsRUFBaUIsZ0NBQWpCLENBQVY7O0FBRUE7Ozs7Ozs7O0FBUWUsTUFBTUMsWUFBTixDQUFtQjtBQUNoQzs7Ozs7Ozs7OztBQVVBQyxjQUFZQyxTQUFaLEVBQXVCQyxlQUF2QixFQUE4RDtBQUFBLFFBQXRCQyxhQUFzQix1RUFBTixJQUFNOztBQUM1RCxTQUFLRixTQUFMLEdBQWlCQSxTQUFqQjtBQUNBLFNBQUtDLGVBQUwsR0FBdUJBLGVBQXZCO0FBQ0EsU0FBS0MsYUFBTCxHQUFxQkEsaUJBQWlCLEtBQUtGLFNBQTNDO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsU0FBT0csa0JBQVAsQ0FBMEJILFNBQTFCLEVBQXFDSSxRQUFyQyxFQUErQ0gsZUFBL0MsRUFBNEc7QUFBQSxRQUE1Q0ksWUFBNEMsdUVBQTdCLEtBQTZCO0FBQUEsUUFBdEJILGFBQXNCLHVFQUFOLElBQU07O0FBQzFHLFFBQUlJLGVBQWUsSUFBbkI7QUFDQSxRQUFJQyxlQUFlLE1BQU07QUFDdkIsVUFBSUQsWUFBSixFQUFrQixPQUFPQSxZQUFQOztBQUVsQixZQUFNRSxZQUFZO0FBQ2hCQyxjQUFNTCxTQUFTSyxJQUFULElBQWlCQyxPQUFPQyxjQUFQLENBQXNCUCxRQUF0QixFQUFnQ0wsV0FBaEMsQ0FBNENVLElBRG5EO0FBRWhCRyxpQkFBU1IsU0FBU1Msa0JBQVQsRUFGTztBQUdoQkMsaUJBQVNWLFNBQVNXO0FBSEYsT0FBbEI7O0FBTUFULHFCQUFlLGVBQUtVLElBQUwsQ0FBVWhCLFNBQVYsRUFBcUIsK0JBQXNCUSxTQUF0QixDQUFyQixDQUFmOztBQUVBWixRQUFHLFlBQVdZLFVBQVVDLElBQUssS0FBSUgsWUFBYSxFQUE5QztBQUNBVixRQUFHLDJCQUEwQnFCLEtBQUtDLFNBQUwsQ0FBZVYsU0FBZixDQUEwQixFQUF2RDs7QUFFQSxVQUFJLENBQUNILFlBQUwsRUFBbUIsaUJBQU9jLElBQVAsQ0FBWWIsWUFBWjtBQUNuQixhQUFPQSxZQUFQO0FBQ0QsS0FoQkQ7O0FBa0JBLFFBQUljLE1BQU0sSUFBSXRCLFlBQUosQ0FBaUIsRUFBakIsRUFBcUJHLGVBQXJCLENBQVY7QUFDQW1CLFFBQUliLFlBQUosR0FBbUJBLFlBQW5COztBQUVBLFVBQU1jLG1CQUFtQm5CLGFBQXpCO0FBQ0FrQixRQUFJRSxnQkFBSixHQUF1QixNQUFNRCxvQkFBb0JkLGNBQWpEOztBQUVBLFdBQU9hLEdBQVA7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7O0FBZU1HLEtBQU4sQ0FBVUMsUUFBVixFQUFvQjtBQUFBOztBQUFBO0FBQ2xCNUIsUUFBRyxZQUFXNEIsUUFBUyxhQUF2QjtBQUNBLFVBQUlDLFdBQVcsTUFBTSxNQUFLeEIsZUFBTCxDQUFxQnlCLGNBQXJCLENBQW9DLGVBQUtDLE9BQUwsQ0FBYUgsUUFBYixDQUFwQyxDQUFyQjs7QUFFQSxVQUFJSSxPQUFPLElBQVg7QUFDQSxVQUFJQyxXQUFXLElBQWY7QUFDQSxVQUFJQyxhQUFhLElBQWpCO0FBQ0EsVUFBSUMsaUJBQWlCLElBQXJCOztBQUVBLFVBQUlDLFlBQVksSUFBaEI7QUFDQSxVQUFJO0FBQ0ZBLG9CQUFZLGVBQUtoQixJQUFMLENBQVUsTUFBS1QsWUFBTCxFQUFWLEVBQStCa0IsU0FBU1EsSUFBeEMsQ0FBWjtBQUNBLFlBQUlDLFNBQVMsSUFBYjs7QUFFQSxZQUFJVCxTQUFTVSxZQUFiLEVBQTJCO0FBQ3pCdkMsWUFBRSxrQ0FBRjtBQUNBLGNBQUl3QyxPQUFPbkIsS0FBS29CLEtBQUwsRUFBVyxNQUFNLGFBQUlDLFFBQUosQ0FBYU4sWUFBWSxPQUF6QixDQUFqQixFQUFYO0FBQ0FILHFCQUFXTyxLQUFLUCxRQUFoQjtBQUNBRSwyQkFBaUJLLEtBQUtMLGNBQXRCOztBQUVBRCx1QkFBYUwsU0FBU0ssVUFBdEI7QUFDQSxjQUFJLENBQUNBLFVBQUwsRUFBaUI7QUFDZkEseUJBQWEsTUFBTSxhQUFJUSxRQUFKLENBQWFOLFNBQWIsQ0FBbkI7QUFDQUYseUJBQWEsTUFBTSxlQUFNUyxNQUFOLENBQWFULFVBQWIsQ0FBbkI7QUFDRDtBQUNGLFNBWEQsTUFXTztBQUNMLGNBQUlVLE1BQU0sTUFBTSxhQUFJRixRQUFKLENBQWFOLFNBQWIsQ0FBaEI7QUFDQSxjQUFJUyxNQUFNLENBQUMsTUFBTSxlQUFNRixNQUFOLENBQWFDLEdBQWIsQ0FBUCxFQUEwQkUsUUFBMUIsQ0FBbUMsTUFBbkMsQ0FBVjs7QUFFQVIsbUJBQVNqQixLQUFLb0IsS0FBTCxDQUFXSSxHQUFYLENBQVQ7QUFDQWIsaUJBQU9NLE9BQU9OLElBQWQ7QUFDQUMscUJBQVdLLE9BQU9MLFFBQWxCO0FBQ0FFLDJCQUFpQkcsT0FBT0gsY0FBeEI7QUFDRDtBQUNGLE9BeEJELENBd0JFLE9BQU9ZLENBQVAsRUFBVTtBQUNWL0MsVUFBRyw0QkFBMkI0QixRQUFTLGVBQWNRLFNBQVUsS0FBSVcsRUFBRUMsT0FBUSxFQUE3RTtBQUNEOztBQUVELGFBQU8sRUFBRW5CLFFBQUYsRUFBWUcsSUFBWixFQUFrQkMsUUFBbEIsRUFBNEJDLFVBQTVCLEVBQXdDQyxjQUF4QyxFQUFQO0FBdENrQjtBQXVDbkI7O0FBR0Q7Ozs7Ozs7Ozs7Ozs7QUFhTWMsTUFBTixDQUFXcEIsUUFBWCxFQUFxQnFCLGdCQUFyQixFQUF1Q2pCLFFBQXZDLEVBQWlERSxjQUFqRCxFQUFpRTtBQUFBOztBQUFBO0FBQy9ELFVBQUlTLE1BQU0sSUFBVjtBQUNBLFVBQUlPLFNBQVMsZUFBSy9CLElBQUwsQ0FBVSxPQUFLVCxZQUFMLEVBQVYsRUFBK0JrQixTQUFTUSxJQUF4QyxDQUFiO0FBQ0FyQyxRQUFHLGFBQVltRCxNQUFPLEVBQXRCOztBQUVBLFVBQUl0QixTQUFTVSxZQUFiLEVBQTJCO0FBQ3pCSyxjQUFNLE1BQU0sZUFBTVEsSUFBTixDQUFXRixnQkFBWCxDQUFaO0FBQ0EsY0FBTSxhQUFJRyxTQUFKLENBQWNGLFNBQVMsT0FBdkIsRUFBZ0M5QixLQUFLQyxTQUFMLENBQWUsRUFBQ1csUUFBRCxFQUFXRSxjQUFYLEVBQWYsQ0FBaEMsRUFBNEUsTUFBNUUsQ0FBTjtBQUNELE9BSEQsTUFHTztBQUNMUyxjQUFNLE1BQU0sZUFBTVEsSUFBTixDQUFXLElBQUlFLE1BQUosQ0FBV2pDLEtBQUtDLFNBQUwsQ0FBZSxFQUFDVSxNQUFNa0IsZ0JBQVAsRUFBeUJqQixRQUF6QixFQUFtQ0UsY0FBbkMsRUFBZixDQUFYLENBQVgsQ0FBWjtBQUNEOztBQUVELFlBQU0sYUFBSWtCLFNBQUosQ0FBY0YsTUFBZCxFQUFzQlAsR0FBdEIsQ0FBTjtBQVorRDtBQWFoRTs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JNVyxZQUFOLENBQWlCM0IsUUFBakIsRUFBMkI0QixPQUEzQixFQUFvQztBQUFBOztBQUFBO0FBQ2xDLFVBQUlDLGNBQWMsTUFBTSxPQUFLOUIsR0FBTCxDQUFTQyxRQUFULENBQXhCO0FBQ0EsVUFBSThCLHlCQUF5QixNQUFNLE9BQUtDLDRCQUFMLENBQWtDRixXQUFsQyxDQUFuQzs7QUFFQSxVQUFJLENBQUNBLFlBQVl6QixJQUFaLElBQW9CeUIsWUFBWXZCLFVBQWpDLEtBQWdELENBQUN3QixzQkFBckQsRUFBNkU7QUFDM0UsZUFBT0QsV0FBUDtBQUNEOztBQUVELFVBQUluQixTQUFTLE9BQU1rQixRQUFRNUIsUUFBUixFQUFrQjZCLFlBQVk1QixRQUE5QixDQUFOLEtBQWlELEVBQUVBLFVBQVU0QixZQUFZNUIsUUFBeEIsRUFBOUQ7O0FBRUEsVUFBSVMsT0FBT0wsUUFBUCxJQUFtQixDQUFDd0IsWUFBWTVCLFFBQVosQ0FBcUIrQixlQUE3QyxFQUE4RDtBQUM1RDVELFVBQUcsbUNBQWtDNEIsUUFBUyxFQUE5QztBQUNBLGNBQU0sT0FBS3FCLElBQUwsQ0FBVVEsWUFBWTVCLFFBQXRCLEVBQWdDUyxPQUFPTixJQUFQLElBQWVNLE9BQU9KLFVBQXRELEVBQWtFSSxPQUFPTCxRQUF6RSxFQUFtRkssT0FBT0gsY0FBMUYsQ0FBTjs7QUFFQSxjQUFNMEIsTUFBTXZCLE9BQU93QixVQUFuQjtBQUNBLFlBQUlELEdBQUosRUFBUztBQUNQN0QsWUFBRyxrQkFBaUI0QixRQUFTLHdCQUF1QixPQUFLRixnQkFBTCxFQUF3QixFQUE1RTtBQUNBLGdCQUFNLE9BQUtxQyxhQUFMLENBQW1CTixZQUFZNUIsUUFBL0IsRUFBeUNELFFBQXpDLEVBQW1EaUMsR0FBbkQsQ0FBTjtBQUNEO0FBQ0Y7O0FBRUR2QixhQUFPVCxRQUFQLEdBQWtCNEIsWUFBWTVCLFFBQTlCO0FBQ0EsYUFBT1MsTUFBUDtBQXRCa0M7QUF1Qm5DOztBQUVEOzs7QUFHTXFCLDhCQUFOLENBQW1DRixXQUFuQyxFQUFnRDtBQUFBOztBQUFBO0FBQzlDLFVBQUksQ0FBQ0EsWUFBWXpCLElBQWIsSUFBcUIsQ0FBQ3lCLFlBQVl0QixjQUFaLENBQTJCNkIsTUFBckQsRUFBNkQsT0FBTyxLQUFQOztBQUU3RCxXQUFLLElBQUlDLGFBQVQsSUFBMEJSLFlBQVl0QixjQUF0QyxFQUFzRDtBQUNwRCxZQUFJK0IsaUJBQWlCLE1BQU0sT0FBSzdELGVBQUwsQ0FBcUI2RCxjQUFyQixDQUFvQ0QsYUFBcEMsQ0FBM0I7QUFDQSxZQUFJQyxjQUFKLEVBQW9CO0FBQ2xCLGlCQUFPLElBQVA7QUFDRDs7QUFFRCxZQUFJQywyQkFBMkIsTUFBTSxPQUFLeEMsR0FBTCxDQUFTc0MsYUFBVCxDQUFyQztBQUNBLFlBQUlFLHlCQUF5QmhDLGNBQXpCLElBQTJDZ0MseUJBQXlCaEMsY0FBekIsQ0FBd0M2QixNQUF2RixFQUErRjtBQUM3RixjQUFJSSw4QkFBOEIsTUFBTSxPQUFLVCw0QkFBTCxDQUFrQ1Esd0JBQWxDLENBQXhDO0FBQ0EsY0FBSUMsMkJBQUosRUFBaUMsT0FBTyxJQUFQO0FBQ2xDO0FBQ0Y7O0FBRUQsYUFBTyxLQUFQO0FBaEI4QztBQWlCL0M7O0FBR0RDLFVBQVF6QyxRQUFSLEVBQWtCO0FBQ2hCNUIsTUFBRyxZQUFXNEIsUUFBUyxhQUF2QjtBQUNBLFFBQUlDLFdBQVcsS0FBS3hCLGVBQUwsQ0FBcUJpRSxrQkFBckIsQ0FBd0MsZUFBS3ZDLE9BQUwsQ0FBYUgsUUFBYixDQUF4QyxDQUFmOztBQUVBLFFBQUlJLE9BQU8sSUFBWDtBQUNBLFFBQUlDLFdBQVcsSUFBZjtBQUNBLFFBQUlDLGFBQWEsSUFBakI7QUFDQSxRQUFJQyxpQkFBaUIsSUFBckI7O0FBRUEsUUFBSTtBQUNGLFVBQUlDLFlBQVksZUFBS2hCLElBQUwsQ0FBVSxLQUFLVCxZQUFMLEVBQVYsRUFBK0JrQixTQUFTUSxJQUF4QyxDQUFoQjs7QUFFQSxVQUFJQyxTQUFTLElBQWI7QUFDQSxVQUFJVCxTQUFTVSxZQUFiLEVBQTJCO0FBQ3pCdkMsVUFBRSxrQ0FBRjtBQUNBLFlBQUl3QyxPQUFPbkIsS0FBS29CLEtBQUwsQ0FBVyxhQUFHOEIsWUFBSCxDQUFnQm5DLFlBQVksT0FBNUIsQ0FBWCxDQUFYO0FBQ0FILG1CQUFXTyxLQUFLUCxRQUFoQjtBQUNBRSx5QkFBaUJLLEtBQUtMLGNBQXRCOztBQUVBRCxxQkFBYUwsU0FBU0ssVUFBdEI7QUFDQSxZQUFJLENBQUNBLFVBQUwsRUFBaUI7QUFDZkEsdUJBQWEsYUFBR3FDLFlBQUgsQ0FBZ0JuQyxTQUFoQixDQUFiO0FBQ0FGLHVCQUFhLGVBQUtzQyxVQUFMLENBQWdCdEMsVUFBaEIsQ0FBYjtBQUNEO0FBQ0YsT0FYRCxNQVdPO0FBQ0wsWUFBSVUsTUFBTSxhQUFHMkIsWUFBSCxDQUFnQm5DLFNBQWhCLENBQVY7QUFDQSxZQUFJUyxNQUFPLGVBQUsyQixVQUFMLENBQWdCNUIsR0FBaEIsQ0FBRCxDQUF1QkUsUUFBdkIsQ0FBZ0MsTUFBaEMsQ0FBVjs7QUFFQVIsaUJBQVNqQixLQUFLb0IsS0FBTCxDQUFXSSxHQUFYLENBQVQ7QUFDQWIsZUFBT00sT0FBT04sSUFBZDtBQUNBQyxtQkFBV0ssT0FBT0wsUUFBbEI7QUFDQUUseUJBQWlCRyxPQUFPSCxjQUF4QjtBQUNEO0FBQ0YsS0F4QkQsQ0F3QkUsT0FBT1ksQ0FBUCxFQUFVO0FBQ1YvQyxRQUFHLDRCQUEyQjRCLFFBQVMsRUFBdkM7QUFDRDs7QUFFRCxXQUFPLEVBQUVDLFFBQUYsRUFBWUcsSUFBWixFQUFrQkMsUUFBbEIsRUFBNEJDLFVBQTVCLEVBQXdDQyxjQUF4QyxFQUFQO0FBQ0Q7O0FBRURzQyxXQUFTNUMsUUFBVCxFQUFtQnFCLGdCQUFuQixFQUFxQ2pCLFFBQXJDLEVBQStDRSxjQUEvQyxFQUErRDtBQUM3RCxRQUFJUyxNQUFNLElBQVY7QUFDQSxRQUFJTyxTQUFTLGVBQUsvQixJQUFMLENBQVUsS0FBS1QsWUFBTCxFQUFWLEVBQStCa0IsU0FBU1EsSUFBeEMsQ0FBYjtBQUNBckMsTUFBRyxhQUFZbUQsTUFBTyxFQUF0Qjs7QUFFQSxRQUFJdEIsU0FBU1UsWUFBYixFQUEyQjtBQUN6QkssWUFBTSxlQUFLOEIsUUFBTCxDQUFjeEIsZ0JBQWQsQ0FBTjtBQUNBLG1CQUFHeUIsYUFBSCxDQUFpQnhCLFNBQVMsT0FBMUIsRUFBbUM5QixLQUFLQyxTQUFMLENBQWUsRUFBQ1csUUFBRCxFQUFXRSxjQUFYLEVBQWYsQ0FBbkMsRUFBK0UsTUFBL0U7QUFDRCxLQUhELE1BR087QUFDTFMsWUFBTSxlQUFLOEIsUUFBTCxDQUFjLElBQUlwQixNQUFKLENBQVdqQyxLQUFLQyxTQUFMLENBQWUsRUFBQ1UsTUFBTWtCLGdCQUFQLEVBQXlCakIsUUFBekIsRUFBbUNFLGNBQW5DLEVBQWYsQ0FBWCxDQUFkLENBQU47QUFDRDs7QUFFRCxpQkFBR3dDLGFBQUgsQ0FBaUJ4QixNQUFqQixFQUF5QlAsR0FBekI7QUFDRDs7QUFFRGdDLGlCQUFlaEQsUUFBZixFQUF5QjRCLE9BQXpCLEVBQWtDO0FBQ2hDLFFBQUlDLGNBQWMsS0FBS1ksT0FBTCxDQUFhekMsUUFBYixDQUFsQjtBQUNBLFFBQUk2QixZQUFZekIsSUFBWixJQUFvQnlCLFlBQVl2QixVQUFwQyxFQUFnRCxPQUFPdUIsV0FBUDs7QUFFaEQsUUFBSW5CLFNBQVNrQixRQUFRNUIsUUFBUixFQUFrQjZCLFlBQVk1QixRQUE5QixLQUEyQyxFQUFFQSxVQUFVNEIsWUFBWTVCLFFBQXhCLEVBQXhEOztBQUVBLFFBQUlTLE9BQU9MLFFBQVAsSUFBbUIsQ0FBQ3dCLFlBQVk1QixRQUFaLENBQXFCK0IsZUFBN0MsRUFBOEQ7QUFDNUQ1RCxRQUFHLG1DQUFrQzRCLFFBQVMsRUFBOUM7QUFDQSxXQUFLNkMsUUFBTCxDQUFjaEIsWUFBWTVCLFFBQTFCLEVBQW9DUyxPQUFPTixJQUFQLElBQWVNLE9BQU9KLFVBQTFELEVBQXNFSSxPQUFPTCxRQUE3RSxFQUF1RkssT0FBT0gsY0FBOUY7QUFDRDs7QUFFRCxVQUFNMEIsTUFBTXZCLE9BQU93QixVQUFuQjtBQUNBLFFBQUlELEdBQUosRUFBUztBQUNQN0QsUUFBRyxrQkFBaUI0QixRQUFTLHdCQUF1QixLQUFLRixnQkFBTCxFQUF3QixFQUE1RTtBQUNBLFdBQUttRCxpQkFBTCxDQUF1QnBCLFlBQVk1QixRQUFuQyxFQUE2Q0QsUUFBN0MsRUFBdURpQyxHQUF2RDtBQUNEOztBQUVEdkIsV0FBT1QsUUFBUCxHQUFrQjRCLFlBQVk1QixRQUE5QjtBQUNBLFdBQU9TLE1BQVA7QUFDRDs7QUFFRHdDLHVCQUFxQmpELFFBQXJCLEVBQStCRCxRQUEvQixFQUF5QztBQUN2QyxVQUFNbUQsV0FBVyxlQUFLQyxRQUFMLENBQWNwRCxRQUFkLENBQWpCO0FBQ0EsVUFBTXFELGNBQWNGLFNBQVNHLE9BQVQsQ0FBaUIsZUFBS0MsT0FBTCxDQUFhSixRQUFiLENBQWpCLEVBQXlDLFNBQXpDLENBQXBCOztBQUVBLFVBQU01QixTQUFTLGVBQUsvQixJQUFMLENBQVUsS0FBS00sZ0JBQUwsRUFBVixFQUFtQ3VELFdBQW5DLENBQWY7QUFDQWpGLE1BQUcsd0JBQXVCbUQsTUFBTyxFQUFqQzs7QUFFQSxXQUFPQSxNQUFQO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7QUFXTVksZUFBTixDQUFvQmxDLFFBQXBCLEVBQThCRCxRQUE5QixFQUF3Q3dELFNBQXhDLEVBQW1EO0FBQUE7O0FBQUE7QUFDakQsWUFBTWpDLFNBQVMsT0FBSzJCLG9CQUFMLENBQTBCakQsUUFBMUIsRUFBb0NELFFBQXBDLENBQWY7QUFDQSxZQUFNLGFBQUl5QixTQUFKLENBQWNGLE1BQWQsRUFBc0JpQyxTQUF0QixFQUFpQyxPQUFqQyxDQUFOO0FBRmlEO0FBR2xEOztBQUVEUCxvQkFBa0JoRCxRQUFsQixFQUE0QkQsUUFBNUIsRUFBc0N3RCxTQUF0QyxFQUFpRDtBQUMvQyxVQUFNakMsU0FBUyxLQUFLMkIsb0JBQUwsQ0FBMEJqRCxRQUExQixFQUFvQ0QsUUFBcEMsQ0FBZjtBQUNBLGlCQUFHK0MsYUFBSCxDQUFpQnhCLE1BQWpCLEVBQXlCaUMsU0FBekIsRUFBb0MsT0FBcEM7QUFDRDs7QUFFRDs7O0FBR0F6RSxpQkFBZTtBQUNiO0FBQ0E7QUFDQSxXQUFPLEtBQUtQLFNBQVo7QUFDRDs7QUFFRDs7O0FBR0FzQixxQkFBbUI7QUFDakIsV0FBTyxLQUFLcEIsYUFBWjtBQUNEOztBQUVEOzs7Ozs7Ozs7QUFTQSxTQUFPK0UsaUJBQVAsQ0FBeUJ4RCxRQUF6QixFQUFtQztBQUNqQyxXQUFPQSxTQUFTeUQsVUFBVCxJQUF1QnpELFNBQVMrQixlQUFoQyxJQUFtRC9CLFNBQVMwRCxZQUE1RCxJQUE0RTFELFNBQVNVLFlBQTVGO0FBQ0Q7QUF2VytCO2tCQUFickMsWSIsImZpbGUiOiJjb21waWxlLWNhY2hlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHpsaWIgZnJvbSAnemxpYic7XG5pbXBvcnQgY3JlYXRlRGlnZXN0Rm9yT2JqZWN0IGZyb20gJy4vZGlnZXN0LWZvci1vYmplY3QnO1xuaW1wb3J0IHtwZnMsIHB6bGlifSBmcm9tICcuL3Byb21pc2UnO1xuaW1wb3J0IG1rZGlycCBmcm9tICdta2RpcnAnO1xuXG5jb25zdCBkID0gcmVxdWlyZSgnZGVidWcnKSgnZWxlY3Ryb24tY29tcGlsZTpjb21waWxlLWNhY2hlJyk7XG5cbi8qKlxuICogQ29tcGlsZUNhY2hlIG1hbmFnZXMgZ2V0dGluZyBhbmQgc2V0dGluZyBlbnRyaWVzIGZvciBhIHNpbmdsZSBjb21waWxlcjsgZWFjaFxuICogaW4tdXNlIGNvbXBpbGVyIHdpbGwgaGF2ZSBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLCB1c3VhbGx5IGNyZWF0ZWQgdmlhXG4gKiB7QGxpbmsgY3JlYXRlRnJvbUNvbXBpbGVyfS5cbiAqXG4gKiBZb3UgdXN1YWxseSB3aWxsIG5vdCB1c2UgdGhpcyBjbGFzcyBkaXJlY3RseSwgaXQgaXMgYW4gaW1wbGVtZW50YXRpb24gY2xhc3NcbiAqIGZvciB7QGxpbmsgQ29tcGlsZUhvc3R9LlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21waWxlQ2FjaGUge1xuICAvKipcbiAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSwgdXN1YWxseSB1c2VkIGZvciB0ZXN0aW5nIG9ubHkuXG4gICAqXG4gICAqIEBwYXJhbSAge3N0cmluZ30gY2FjaGVQYXRoICBUaGUgcm9vdCBkaXJlY3RvcnkgdG8gdXNlIGFzIGEgY2FjaGUgcGF0aFxuICAgKlxuICAgKiBAcGFyYW0gIHtGaWxlQ2hhbmdlZENhY2hlfSBmaWxlQ2hhbmdlQ2FjaGUgIEEgZmlsZS1jaGFuZ2UgY2FjaGUgdGhhdCBpc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsbHkgcHJlLWxvYWRlZC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZU1hcFBhdGggVGhlIGRpcmVjdG9yeSB0byBzdG9yZSBzb3VyY2VtYXAgc2VwYXJhdGVseSBpZiBjb21waWxlciBvcHRpb24gZW5hYmxlZCB0byBlbWl0LlxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0IHRvIGNhY2hlUGF0aCBpZiBub3Qgc3BlY2lmaWVkLlxuICAgKi9cbiAgY29uc3RydWN0b3IoY2FjaGVQYXRoLCBmaWxlQ2hhbmdlQ2FjaGUsIHNvdXJjZU1hcFBhdGggPSBudWxsKSB7XG4gICAgdGhpcy5jYWNoZVBhdGggPSBjYWNoZVBhdGg7XG4gICAgdGhpcy5maWxlQ2hhbmdlQ2FjaGUgPSBmaWxlQ2hhbmdlQ2FjaGU7XG4gICAgdGhpcy5zb3VyY2VNYXBQYXRoID0gc291cmNlTWFwUGF0aCB8fCB0aGlzLmNhY2hlUGF0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgQ29tcGlsZUNhY2hlIGZyb20gYSBjbGFzcyBjb21wYXRpYmxlIHdpdGggdGhlIENvbXBpbGVyQmFzZVxuICAgKiBpbnRlcmZhY2UuIFRoaXMgbWV0aG9kIHVzZXMgdGhlIGNvbXBpbGVyIG5hbWUgLyB2ZXJzaW9uIC8gb3B0aW9ucyB0b1xuICAgKiBnZW5lcmF0ZSBhIHVuaXF1ZSBkaXJlY3RvcnkgbmFtZSBmb3IgY2FjaGVkIHJlc3VsdHNcbiAgICpcbiAgICogQHBhcmFtICB7c3RyaW5nfSBjYWNoZVBhdGggIFRoZSByb290IHBhdGggdG8gdXNlIGZvciB0aGUgY2FjaGUsIGEgZGlyZWN0b3J5XG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXByZXNlbnRpbmcgdGhlIGhhc2ggb2YgdGhlIGNvbXBpbGVyIHBhcmFtZXRlcnNcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgYmUgY3JlYXRlZCBoZXJlLlxuICAgKlxuICAgKiBAcGFyYW0gIHtDb21waWxlckJhc2V9IGNvbXBpbGVyICBUaGUgY29tcGlsZXIgdG8gdXNlIGZvciB2ZXJzaW9uIC8gb3B0aW9uXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZm9ybWF0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0gIHtGaWxlQ2hhbmdlZENhY2hlfSBmaWxlQ2hhbmdlQ2FjaGUgIEEgZmlsZS1jaGFuZ2UgY2FjaGUgdGhhdCBpc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsbHkgcHJlLWxvYWRlZC5cbiAgICpcbiAgICogQHBhcmFtICB7Ym9vbGVhbn0gcmVhZE9ubHlNb2RlICBEb24ndCBhdHRlbXB0IHRvIGNyZWF0ZSB0aGUgY2FjaGUgZGlyZWN0b3J5LlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlTWFwUGF0aCBUaGUgZGlyZWN0b3J5IHRvIHN0b3JlIHNvdXJjZW1hcCBzZXBhcmF0ZWx5IGlmIGNvbXBpbGVyIG9wdGlvbiBlbmFibGVkIHRvIGVtaXQuXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHQgdG8gY2FjaGVQYXRoIGlmIG5vdCBzcGVjaWZpZWQuXG4gICAqXG4gICAqIEByZXR1cm4ge0NvbXBpbGVDYWNoZX0gIEEgY29uZmlndXJlZCBDb21waWxlQ2FjaGUgaW5zdGFuY2UuXG4gICAqL1xuICBzdGF0aWMgY3JlYXRlRnJvbUNvbXBpbGVyKGNhY2hlUGF0aCwgY29tcGlsZXIsIGZpbGVDaGFuZ2VDYWNoZSwgcmVhZE9ubHlNb2RlID0gZmFsc2UsIHNvdXJjZU1hcFBhdGggPSBudWxsKSB7XG4gICAgbGV0IG5ld0NhY2hlUGF0aCA9IG51bGw7XG4gICAgbGV0IGdldENhY2hlUGF0aCA9ICgpID0+IHtcbiAgICAgIGlmIChuZXdDYWNoZVBhdGgpIHJldHVybiBuZXdDYWNoZVBhdGg7XG5cbiAgICAgIGNvbnN0IGRpZ2VzdE9iaiA9IHtcbiAgICAgICAgbmFtZTogY29tcGlsZXIubmFtZSB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoY29tcGlsZXIpLmNvbnN0cnVjdG9yLm5hbWUsXG4gICAgICAgIHZlcnNpb246IGNvbXBpbGVyLmdldENvbXBpbGVyVmVyc2lvbigpLFxuICAgICAgICBvcHRpb25zOiBjb21waWxlci5jb21waWxlck9wdGlvbnNcbiAgICAgIH07XG5cbiAgICAgIG5ld0NhY2hlUGF0aCA9IHBhdGguam9pbihjYWNoZVBhdGgsIGNyZWF0ZURpZ2VzdEZvck9iamVjdChkaWdlc3RPYmopKTtcblxuICAgICAgZChgUGF0aCBmb3IgJHtkaWdlc3RPYmoubmFtZX06ICR7bmV3Q2FjaGVQYXRofWApO1xuICAgICAgZChgU2V0IHVwIHdpdGggcGFyYW1ldGVyczogJHtKU09OLnN0cmluZ2lmeShkaWdlc3RPYmopfWApO1xuXG4gICAgICBpZiAoIXJlYWRPbmx5TW9kZSkgbWtkaXJwLnN5bmMobmV3Q2FjaGVQYXRoKTtcbiAgICAgIHJldHVybiBuZXdDYWNoZVBhdGg7XG4gICAgfTtcblxuICAgIGxldCByZXQgPSBuZXcgQ29tcGlsZUNhY2hlKCcnLCBmaWxlQ2hhbmdlQ2FjaGUpO1xuICAgIHJldC5nZXRDYWNoZVBhdGggPSBnZXRDYWNoZVBhdGg7XG5cbiAgICBjb25zdCBuZXdTb3VyY2VNYXBQYXRoID0gc291cmNlTWFwUGF0aDtcbiAgICByZXQuZ2V0U291cmNlTWFwUGF0aCA9ICgpID0+IG5ld1NvdXJjZU1hcFBhdGggfHwgZ2V0Q2FjaGVQYXRoKCk7XG5cbiAgICByZXR1cm4gcmV0O1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBmaWxlJ3MgY29tcGlsZWQgY29udGVudHMgZnJvbSB0aGUgY2FjaGUuXG4gICAqXG4gICAqIEBwYXJhbSAge3N0cmluZ30gZmlsZVBhdGggIFRoZSBwYXRoIHRvIHRoZSBmaWxlLiBGaWxlQ2hhbmdlZENhY2hlIHdpbGwgbG9va1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cCB0aGUgaGFzaCBhbmQgdXNlIHRoYXQgYXMgdGhlIGtleSBpbiB0aGUgY2FjaGUuXG4gICAqXG4gICAqIEByZXR1cm4ge1Byb21pc2U8T2JqZWN0Pn0gIEFuIG9iamVjdCB3aXRoIGFsbCBraW5kcyBvZiBpbmZvcm1hdGlvblxuICAgKlxuICAgKiBAcHJvcGVydHkge09iamVjdH0gaGFzaEluZm8gIFRoZSBoYXNoIGluZm9ybWF0aW9uIHJldHVybmVkIGZyb20gZ2V0SGFzaEZvclBhdGhcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGNvZGUgIFRoZSBzb3VyY2UgY29kZSBpZiB0aGUgZmlsZSB3YXMgYSB0ZXh0IGZpbGVcbiAgICogQHByb3BlcnR5IHtCdWZmZXJ9IGJpbmFyeURhdGEgIFRoZSBmaWxlIGlmIGl0IHdhcyBhIGJpbmFyeSBmaWxlXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBtaW1lVHlwZSAgVGhlIE1JTUUgdHlwZSBzYXZlZCBpbiB0aGUgY2FjaGUuXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IGRlcGVuZGVudEZpbGVzICBUaGUgZGVwZW5kZW50IGZpbGVzIHJldHVybmVkIGZyb21cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBpbGluZyB0aGUgZmlsZSwgaWYgYW55LlxuICAgKi9cbiAgYXN5bmMgZ2V0KGZpbGVQYXRoKSB7XG4gICAgZChgRmV0Y2hpbmcgJHtmaWxlUGF0aH0gZnJvbSBjYWNoZWApO1xuICAgIGxldCBoYXNoSW5mbyA9IGF3YWl0IHRoaXMuZmlsZUNoYW5nZUNhY2hlLmdldEhhc2hGb3JQYXRoKHBhdGgucmVzb2x2ZShmaWxlUGF0aCkpO1xuXG4gICAgbGV0IGNvZGUgPSBudWxsO1xuICAgIGxldCBtaW1lVHlwZSA9IG51bGw7XG4gICAgbGV0IGJpbmFyeURhdGEgPSBudWxsO1xuICAgIGxldCBkZXBlbmRlbnRGaWxlcyA9IG51bGw7XG5cbiAgICBsZXQgY2FjaGVGaWxlID0gbnVsbDtcbiAgICB0cnkge1xuICAgICAgY2FjaGVGaWxlID0gcGF0aC5qb2luKHRoaXMuZ2V0Q2FjaGVQYXRoKCksIGhhc2hJbmZvLmhhc2gpO1xuICAgICAgbGV0IHJlc3VsdCA9IG51bGw7XG5cbiAgICAgIGlmIChoYXNoSW5mby5pc0ZpbGVCaW5hcnkpIHtcbiAgICAgICAgZChcIkZpbGUgaXMgYmluYXJ5LCByZWFkaW5nIG91dCBpbmZvXCIpO1xuICAgICAgICBsZXQgaW5mbyA9IEpTT04ucGFyc2UoYXdhaXQgcGZzLnJlYWRGaWxlKGNhY2hlRmlsZSArICcuaW5mbycpKTtcbiAgICAgICAgbWltZVR5cGUgPSBpbmZvLm1pbWVUeXBlO1xuICAgICAgICBkZXBlbmRlbnRGaWxlcyA9IGluZm8uZGVwZW5kZW50RmlsZXM7XG5cbiAgICAgICAgYmluYXJ5RGF0YSA9IGhhc2hJbmZvLmJpbmFyeURhdGE7XG4gICAgICAgIGlmICghYmluYXJ5RGF0YSkge1xuICAgICAgICAgIGJpbmFyeURhdGEgPSBhd2FpdCBwZnMucmVhZEZpbGUoY2FjaGVGaWxlKTtcbiAgICAgICAgICBiaW5hcnlEYXRhID0gYXdhaXQgcHpsaWIuZ3VuemlwKGJpbmFyeURhdGEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgYnVmID0gYXdhaXQgcGZzLnJlYWRGaWxlKGNhY2hlRmlsZSk7XG4gICAgICAgIGxldCBzdHIgPSAoYXdhaXQgcHpsaWIuZ3VuemlwKGJ1ZikpLnRvU3RyaW5nKCd1dGY4Jyk7XG5cbiAgICAgICAgcmVzdWx0ID0gSlNPTi5wYXJzZShzdHIpO1xuICAgICAgICBjb2RlID0gcmVzdWx0LmNvZGU7XG4gICAgICAgIG1pbWVUeXBlID0gcmVzdWx0Lm1pbWVUeXBlO1xuICAgICAgICBkZXBlbmRlbnRGaWxlcyA9IHJlc3VsdC5kZXBlbmRlbnRGaWxlcztcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBkKGBGYWlsZWQgdG8gcmVhZCBjYWNoZSBmb3IgJHtmaWxlUGF0aH0sIGxvb2tlZCBpbiAke2NhY2hlRmlsZX06ICR7ZS5tZXNzYWdlfWApO1xuICAgIH1cblxuICAgIHJldHVybiB7IGhhc2hJbmZvLCBjb2RlLCBtaW1lVHlwZSwgYmluYXJ5RGF0YSwgZGVwZW5kZW50RmlsZXMgfTtcbiAgfVxuXG5cbiAgLyoqXG4gICAqIFNhdmVzIGEgY29tcGlsZWQgcmVzdWx0IHRvIGNhY2hlXG4gICAqXG4gICAqIEBwYXJhbSAge09iamVjdH0gaGFzaEluZm8gIFRoZSBoYXNoIGluZm9ybWF0aW9uIHJldHVybmVkIGZyb20gZ2V0SGFzaEZvclBhdGhcbiAgICpcbiAgICogQHBhcmFtICB7c3RyaW5nIC8gQnVmZmVyfSBjb2RlT3JCaW5hcnlEYXRhICAgVGhlIGZpbGUncyBjb250ZW50cywgZWl0aGVyIGFzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgc3RyaW5nIG9yIGEgQnVmZmVyLlxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IG1pbWVUeXBlICBUaGUgTUlNRSB0eXBlIHJldHVybmVkIGJ5IHRoZSBjb21waWxlci5cbiAgICpcbiAgICogQHBhcmFtICB7c3RyaW5nW119IGRlcGVuZGVudEZpbGVzICBUaGUgbGlzdCBvZiBkZXBlbmRlbnQgZmlsZXMgcmV0dXJuZWQgYnlcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgY29tcGlsZXIuXG4gICAqIEByZXR1cm4ge1Byb21pc2V9ICBDb21wbGV0aW9uLlxuICAgKi9cbiAgYXN5bmMgc2F2ZShoYXNoSW5mbywgY29kZU9yQmluYXJ5RGF0YSwgbWltZVR5cGUsIGRlcGVuZGVudEZpbGVzKSB7XG4gICAgbGV0IGJ1ZiA9IG51bGw7XG4gICAgbGV0IHRhcmdldCA9IHBhdGguam9pbih0aGlzLmdldENhY2hlUGF0aCgpLCBoYXNoSW5mby5oYXNoKTtcbiAgICBkKGBTYXZpbmcgdG8gJHt0YXJnZXR9YCk7XG5cbiAgICBpZiAoaGFzaEluZm8uaXNGaWxlQmluYXJ5KSB7XG4gICAgICBidWYgPSBhd2FpdCBwemxpYi5nemlwKGNvZGVPckJpbmFyeURhdGEpO1xuICAgICAgYXdhaXQgcGZzLndyaXRlRmlsZSh0YXJnZXQgKyAnLmluZm8nLCBKU09OLnN0cmluZ2lmeSh7bWltZVR5cGUsIGRlcGVuZGVudEZpbGVzfSksICd1dGY4Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1ZiA9IGF3YWl0IHB6bGliLmd6aXAobmV3IEJ1ZmZlcihKU09OLnN0cmluZ2lmeSh7Y29kZTogY29kZU9yQmluYXJ5RGF0YSwgbWltZVR5cGUsIGRlcGVuZGVudEZpbGVzfSkpKTtcbiAgICB9XG5cbiAgICBhd2FpdCBwZnMud3JpdGVGaWxlKHRhcmdldCwgYnVmKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBdHRlbXB0cyB0byBmaXJzdCBnZXQgYSBrZXkgdmlhIHtAbGluayBnZXR9LCB0aGVuIGlmIGl0IGZhaWxzLCBjYWxsIGEgbWV0aG9kXG4gICAqIHRvIHJldHJpZXZlIHRoZSBjb250ZW50cywgdGhlbiBzYXZlIHRoZSByZXN1bHQgdG8gY2FjaGUuXG4gICAqXG4gICAqIFRoZSBmZXRjaGVyIHBhcmFtZXRlciBpcyBleHBlY3RlZCB0byBoYXZlIHRoZSBzaWduYXR1cmU6XG4gICAqXG4gICAqIFByb21pc2U8T2JqZWN0PiBmZXRjaGVyKGZpbGVQYXRoIDogc3RyaW5nLCBoYXNoSW5mbyA6IE9iamVjdCk7XG4gICAqXG4gICAqIGhhc2hJbmZvIGlzIGEgdmFsdWUgcmV0dXJuZWQgZnJvbSBnZXRIYXNoRm9yUGF0aFxuICAgKiBUaGUgcmV0dXJuIHZhbHVlIG9mIGZldGNoZXIgbXVzdCBiZSBhbiBPYmplY3Qgd2l0aCB0aGUgcHJvcGVydGllczpcbiAgICpcbiAgICogbWltZVR5cGUgLSB0aGUgTUlNRSB0eXBlIG9mIHRoZSBkYXRhIHRvIHNhdmVcbiAgICogY29kZSAob3B0aW9uYWwpIC0gdGhlIHNvdXJjZSBjb2RlIGFzIGEgc3RyaW5nLCBpZiBmaWxlIGlzIHRleHRcbiAgICogYmluYXJ5RGF0YSAob3B0aW9uYWwpIC0gdGhlIGZpbGUgY29udGVudHMgYXMgYSBCdWZmZXIsIGlmIGZpbGUgaXMgYmluYXJ5XG4gICAqIGRlcGVuZGVudEZpbGVzIC0gdGhlIGRlcGVuZGVudCBmaWxlcyByZXR1cm5lZCBieSB0aGUgY29tcGlsZXIuXG4gICAqXG4gICAqIEBwYXJhbSAge3N0cmluZ30gZmlsZVBhdGggIFRoZSBwYXRoIHRvIHRoZSBmaWxlLiBGaWxlQ2hhbmdlZENhY2hlIHdpbGwgbG9va1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cCB0aGUgaGFzaCBhbmQgdXNlIHRoYXQgYXMgdGhlIGtleSBpbiB0aGUgY2FjaGUuXG4gICAqXG4gICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBmZXRjaGVyICBBIG1ldGhvZCB3aGljaCBjb25mb3JtcyB0byB0aGUgZGVzY3JpcHRpb24gYWJvdmUuXG4gICAqXG4gICAqIEByZXR1cm4ge1Byb21pc2U8T2JqZWN0Pn0gIEFuIE9iamVjdCB3aGljaCBoYXMgdGhlIHNhbWUgZmllbGRzIGFzIHRoZVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QGxpbmsgZ2V0fSBtZXRob2QgcmV0dXJuIHJlc3VsdC5cbiAgICovXG4gIGFzeW5jIGdldE9yRmV0Y2goZmlsZVBhdGgsIGZldGNoZXIpIHtcbiAgICBsZXQgY2FjaGVSZXN1bHQgPSBhd2FpdCB0aGlzLmdldChmaWxlUGF0aCk7XG4gICAgbGV0IGFueURlcGVuZGVuY2llc0NoYW5nZWQgPSBhd2FpdCB0aGlzLmhhdmVBbnlEZXBlbmRlbnRGaWxlc0NoYW5nZWQoY2FjaGVSZXN1bHQpO1xuXG4gICAgaWYgKChjYWNoZVJlc3VsdC5jb2RlIHx8IGNhY2hlUmVzdWx0LmJpbmFyeURhdGEpICYmICFhbnlEZXBlbmRlbmNpZXNDaGFuZ2VkKSB7XG4gICAgICByZXR1cm4gY2FjaGVSZXN1bHQ7XG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdCA9IGF3YWl0IGZldGNoZXIoZmlsZVBhdGgsIGNhY2hlUmVzdWx0Lmhhc2hJbmZvKSB8fCB7IGhhc2hJbmZvOiBjYWNoZVJlc3VsdC5oYXNoSW5mbyB9O1xuXG4gICAgaWYgKHJlc3VsdC5taW1lVHlwZSAmJiAhY2FjaGVSZXN1bHQuaGFzaEluZm8uaXNJbk5vZGVNb2R1bGVzKSB7XG4gICAgICBkKGBDYWNoZSBtaXNzOiBzYXZpbmcgb3V0IGluZm8gZm9yICR7ZmlsZVBhdGh9YCk7XG4gICAgICBhd2FpdCB0aGlzLnNhdmUoY2FjaGVSZXN1bHQuaGFzaEluZm8sIHJlc3VsdC5jb2RlIHx8IHJlc3VsdC5iaW5hcnlEYXRhLCByZXN1bHQubWltZVR5cGUsIHJlc3VsdC5kZXBlbmRlbnRGaWxlcyk7XG5cbiAgICAgIGNvbnN0IG1hcCA9IHJlc3VsdC5zb3VyY2VNYXBzO1xuICAgICAgaWYgKG1hcCkge1xuICAgICAgICBkKGBzb3VyY2UgbWFwIGZvciAke2ZpbGVQYXRofSBmb3VuZCwgc2F2aW5nIGl0IHRvICR7dGhpcy5nZXRTb3VyY2VNYXBQYXRoKCl9YCk7XG4gICAgICAgIGF3YWl0IHRoaXMuc2F2ZVNvdXJjZU1hcChjYWNoZVJlc3VsdC5oYXNoSW5mbywgZmlsZVBhdGgsIG1hcCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVzdWx0Lmhhc2hJbmZvID0gY2FjaGVSZXN1bHQuaGFzaEluZm87XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZSBDaGVjayBpZiBhbnkgb2YgYSBmaWxlJ3MgZGVwZW5kZW5jaWVzIGhhdmUgY2hhbmdlZFxuICAgKi9cbiAgYXN5bmMgaGF2ZUFueURlcGVuZGVudEZpbGVzQ2hhbmdlZChjYWNoZVJlc3VsdCkge1xuICAgIGlmICghY2FjaGVSZXN1bHQuY29kZSB8fCAhY2FjaGVSZXN1bHQuZGVwZW5kZW50RmlsZXMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICBmb3IgKGxldCBkZXBlbmRlbnRGaWxlIG9mIGNhY2hlUmVzdWx0LmRlcGVuZGVudEZpbGVzKSB7XG4gICAgICBsZXQgaGFzRmlsZUNoYW5nZWQgPSBhd2FpdCB0aGlzLmZpbGVDaGFuZ2VDYWNoZS5oYXNGaWxlQ2hhbmdlZChkZXBlbmRlbnRGaWxlKTtcbiAgICAgIGlmIChoYXNGaWxlQ2hhbmdlZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgbGV0IGRlcGVuZGVudEZpbGVDYWNoZVJlc3VsdCA9IGF3YWl0IHRoaXMuZ2V0KGRlcGVuZGVudEZpbGUpO1xuICAgICAgaWYgKGRlcGVuZGVudEZpbGVDYWNoZVJlc3VsdC5kZXBlbmRlbnRGaWxlcyAmJiBkZXBlbmRlbnRGaWxlQ2FjaGVSZXN1bHQuZGVwZW5kZW50RmlsZXMubGVuZ3RoKSB7XG4gICAgICAgIGxldCBhbnlTdWJkZXBlbmRlbnRGaWxlc0NoYW5nZWQgPSBhd2FpdCB0aGlzLmhhdmVBbnlEZXBlbmRlbnRGaWxlc0NoYW5nZWQoZGVwZW5kZW50RmlsZUNhY2hlUmVzdWx0KTtcbiAgICAgICAgaWYgKGFueVN1YmRlcGVuZGVudEZpbGVzQ2hhbmdlZCkgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cblxuICBnZXRTeW5jKGZpbGVQYXRoKSB7XG4gICAgZChgRmV0Y2hpbmcgJHtmaWxlUGF0aH0gZnJvbSBjYWNoZWApO1xuICAgIGxldCBoYXNoSW5mbyA9IHRoaXMuZmlsZUNoYW5nZUNhY2hlLmdldEhhc2hGb3JQYXRoU3luYyhwYXRoLnJlc29sdmUoZmlsZVBhdGgpKTtcblxuICAgIGxldCBjb2RlID0gbnVsbDtcbiAgICBsZXQgbWltZVR5cGUgPSBudWxsO1xuICAgIGxldCBiaW5hcnlEYXRhID0gbnVsbDtcbiAgICBsZXQgZGVwZW5kZW50RmlsZXMgPSBudWxsO1xuXG4gICAgdHJ5IHtcbiAgICAgIGxldCBjYWNoZUZpbGUgPSBwYXRoLmpvaW4odGhpcy5nZXRDYWNoZVBhdGgoKSwgaGFzaEluZm8uaGFzaCk7XG5cbiAgICAgIGxldCByZXN1bHQgPSBudWxsO1xuICAgICAgaWYgKGhhc2hJbmZvLmlzRmlsZUJpbmFyeSkge1xuICAgICAgICBkKFwiRmlsZSBpcyBiaW5hcnksIHJlYWRpbmcgb3V0IGluZm9cIik7XG4gICAgICAgIGxldCBpbmZvID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoY2FjaGVGaWxlICsgJy5pbmZvJykpO1xuICAgICAgICBtaW1lVHlwZSA9IGluZm8ubWltZVR5cGU7XG4gICAgICAgIGRlcGVuZGVudEZpbGVzID0gaW5mby5kZXBlbmRlbnRGaWxlcztcblxuICAgICAgICBiaW5hcnlEYXRhID0gaGFzaEluZm8uYmluYXJ5RGF0YTtcbiAgICAgICAgaWYgKCFiaW5hcnlEYXRhKSB7XG4gICAgICAgICAgYmluYXJ5RGF0YSA9IGZzLnJlYWRGaWxlU3luYyhjYWNoZUZpbGUpO1xuICAgICAgICAgIGJpbmFyeURhdGEgPSB6bGliLmd1bnppcFN5bmMoYmluYXJ5RGF0YSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBidWYgPSBmcy5yZWFkRmlsZVN5bmMoY2FjaGVGaWxlKTtcbiAgICAgICAgbGV0IHN0ciA9ICh6bGliLmd1bnppcFN5bmMoYnVmKSkudG9TdHJpbmcoJ3V0ZjgnKTtcblxuICAgICAgICByZXN1bHQgPSBKU09OLnBhcnNlKHN0cik7XG4gICAgICAgIGNvZGUgPSByZXN1bHQuY29kZTtcbiAgICAgICAgbWltZVR5cGUgPSByZXN1bHQubWltZVR5cGU7XG4gICAgICAgIGRlcGVuZGVudEZpbGVzID0gcmVzdWx0LmRlcGVuZGVudEZpbGVzO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGQoYEZhaWxlZCB0byByZWFkIGNhY2hlIGZvciAke2ZpbGVQYXRofWApO1xuICAgIH1cblxuICAgIHJldHVybiB7IGhhc2hJbmZvLCBjb2RlLCBtaW1lVHlwZSwgYmluYXJ5RGF0YSwgZGVwZW5kZW50RmlsZXMgfTtcbiAgfVxuXG4gIHNhdmVTeW5jKGhhc2hJbmZvLCBjb2RlT3JCaW5hcnlEYXRhLCBtaW1lVHlwZSwgZGVwZW5kZW50RmlsZXMpIHtcbiAgICBsZXQgYnVmID0gbnVsbDtcbiAgICBsZXQgdGFyZ2V0ID0gcGF0aC5qb2luKHRoaXMuZ2V0Q2FjaGVQYXRoKCksIGhhc2hJbmZvLmhhc2gpO1xuICAgIGQoYFNhdmluZyB0byAke3RhcmdldH1gKTtcblxuICAgIGlmIChoYXNoSW5mby5pc0ZpbGVCaW5hcnkpIHtcbiAgICAgIGJ1ZiA9IHpsaWIuZ3ppcFN5bmMoY29kZU9yQmluYXJ5RGF0YSk7XG4gICAgICBmcy53cml0ZUZpbGVTeW5jKHRhcmdldCArICcuaW5mbycsIEpTT04uc3RyaW5naWZ5KHttaW1lVHlwZSwgZGVwZW5kZW50RmlsZXN9KSwgJ3V0ZjgnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmID0gemxpYi5nemlwU3luYyhuZXcgQnVmZmVyKEpTT04uc3RyaW5naWZ5KHtjb2RlOiBjb2RlT3JCaW5hcnlEYXRhLCBtaW1lVHlwZSwgZGVwZW5kZW50RmlsZXN9KSkpO1xuICAgIH1cblxuICAgIGZzLndyaXRlRmlsZVN5bmModGFyZ2V0LCBidWYpO1xuICB9XG5cbiAgZ2V0T3JGZXRjaFN5bmMoZmlsZVBhdGgsIGZldGNoZXIpIHtcbiAgICBsZXQgY2FjaGVSZXN1bHQgPSB0aGlzLmdldFN5bmMoZmlsZVBhdGgpO1xuICAgIGlmIChjYWNoZVJlc3VsdC5jb2RlIHx8IGNhY2hlUmVzdWx0LmJpbmFyeURhdGEpIHJldHVybiBjYWNoZVJlc3VsdDtcblxuICAgIGxldCByZXN1bHQgPSBmZXRjaGVyKGZpbGVQYXRoLCBjYWNoZVJlc3VsdC5oYXNoSW5mbykgfHwgeyBoYXNoSW5mbzogY2FjaGVSZXN1bHQuaGFzaEluZm8gfTtcblxuICAgIGlmIChyZXN1bHQubWltZVR5cGUgJiYgIWNhY2hlUmVzdWx0Lmhhc2hJbmZvLmlzSW5Ob2RlTW9kdWxlcykge1xuICAgICAgZChgQ2FjaGUgbWlzczogc2F2aW5nIG91dCBpbmZvIGZvciAke2ZpbGVQYXRofWApO1xuICAgICAgdGhpcy5zYXZlU3luYyhjYWNoZVJlc3VsdC5oYXNoSW5mbywgcmVzdWx0LmNvZGUgfHwgcmVzdWx0LmJpbmFyeURhdGEsIHJlc3VsdC5taW1lVHlwZSwgcmVzdWx0LmRlcGVuZGVudEZpbGVzKTtcbiAgICB9XG5cbiAgICBjb25zdCBtYXAgPSByZXN1bHQuc291cmNlTWFwcztcbiAgICBpZiAobWFwKSB7XG4gICAgICBkKGBzb3VyY2UgbWFwIGZvciAke2ZpbGVQYXRofSBmb3VuZCwgc2F2aW5nIGl0IHRvICR7dGhpcy5nZXRTb3VyY2VNYXBQYXRoKCl9YCk7XG4gICAgICB0aGlzLnNhdmVTb3VyY2VNYXBTeW5jKGNhY2hlUmVzdWx0Lmhhc2hJbmZvLCBmaWxlUGF0aCwgbWFwKTtcbiAgICB9XG5cbiAgICByZXN1bHQuaGFzaEluZm8gPSBjYWNoZVJlc3VsdC5oYXNoSW5mbztcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgYnVpbGRTb3VyY2VNYXBUYXJnZXQoaGFzaEluZm8sIGZpbGVQYXRoKSB7XG4gICAgY29uc3QgZmlsZU5hbWUgPSBwYXRoLmJhc2VuYW1lKGZpbGVQYXRoKTtcbiAgICBjb25zdCBtYXBGaWxlTmFtZSA9IGZpbGVOYW1lLnJlcGxhY2UocGF0aC5leHRuYW1lKGZpbGVOYW1lKSwgJy5qcy5tYXAnKTtcblxuICAgIGNvbnN0IHRhcmdldCA9IHBhdGguam9pbih0aGlzLmdldFNvdXJjZU1hcFBhdGgoKSwgbWFwRmlsZU5hbWUpO1xuICAgIGQoYFNvdXJjZW1hcCB0YXJnZXQgaXM6ICR7dGFyZ2V0fWApO1xuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxuXG4gIC8qKlxuICAgKiBTYXZlcyBzb3VyY2VtYXAgc3RyaW5nIGludG8gY2FjaGUsIG9yIHNwZWNpZmllZCBzZXBhcmF0ZSBkaXJcbiAgICpcbiAgICogQHBhcmFtICB7T2JqZWN0fSBoYXNoSW5mbyAgVGhlIGhhc2ggaW5mb3JtYXRpb24gcmV0dXJuZWQgZnJvbSBnZXRIYXNoRm9yUGF0aFxuICAgKlxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IGZpbGVQYXRoIFBhdGggdG8gb3JpZ2luYWwgZmlsZSB0byBjb25zdHJ1Y3Qgc291cmNlbWFwIGZpbGUgbmFtZVxuXG4gICAqIEBwYXJhbSAge3N0cmluZ30gc291cmNlTWFwIFNvdXJjZW1hcCBkYXRhIGFzIHN0cmluZ1xuICAgKlxuICAgKiBAbWVtYmVyT2YgQ29tcGlsZUNhY2hlXG4gICAqL1xuICBhc3luYyBzYXZlU291cmNlTWFwKGhhc2hJbmZvLCBmaWxlUGF0aCwgc291cmNlTWFwKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gdGhpcy5idWlsZFNvdXJjZU1hcFRhcmdldChoYXNoSW5mbywgZmlsZVBhdGgpO1xuICAgIGF3YWl0IHBmcy53cml0ZUZpbGUodGFyZ2V0LCBzb3VyY2VNYXAsICd1dGYtOCcpO1xuICB9XG5cbiAgc2F2ZVNvdXJjZU1hcFN5bmMoaGFzaEluZm8sIGZpbGVQYXRoLCBzb3VyY2VNYXApIHtcbiAgICBjb25zdCB0YXJnZXQgPSB0aGlzLmJ1aWxkU291cmNlTWFwVGFyZ2V0KGhhc2hJbmZvLCBmaWxlUGF0aCk7XG4gICAgZnMud3JpdGVGaWxlU3luYyh0YXJnZXQsIHNvdXJjZU1hcCwgJ3V0Zi04Jyk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGdldENhY2hlUGF0aCgpIHtcbiAgICAvLyBOQjogVGhpcyBpcyBhbiBldmlsIGhhY2sgc28gdGhhdCBjcmVhdGVGcm9tQ29tcGlsZXIgY2FuIHN0b21wIGl0XG4gICAgLy8gYXQgd2lsbFxuICAgIHJldHVybiB0aGlzLmNhY2hlUGF0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZ2V0U291cmNlTWFwUGF0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5zb3VyY2VNYXBQYXRoO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgd2hldGhlciBhIGZpbGUgc2hvdWxkIG5vdCBiZSBjb21waWxlZC4gTm90ZSB0aGF0IHRoaXMgZG9lc24ndFxuICAgKiBuZWNlc3NhcmlseSBtZWFuIGl0IHdvbid0IGVuZCB1cCBpbiB0aGUgY2FjaGUsIG9ubHkgdGhhdCBpdHMgY29udGVudHMgYXJlXG4gICAqIHNhdmVkIHZlcmJhdGltIGluc3RlYWQgb2YgdHJ5aW5nIHRvIGZpbmQgYW4gYXBwcm9wcmlhdGUgY29tcGlsZXIuXG4gICAqXG4gICAqIEBwYXJhbSAge09iamVjdH0gaGFzaEluZm8gIFRoZSBoYXNoIGluZm9ybWF0aW9uIHJldHVybmVkIGZyb20gZ2V0SGFzaEZvclBhdGhcbiAgICpcbiAgICogQHJldHVybiB7Ym9vbGVhbn0gIFRydWUgaWYgYSBmaWxlIHNob3VsZCBiZSBpZ25vcmVkXG4gICAqL1xuICBzdGF0aWMgc2hvdWxkUGFzc3Rocm91Z2goaGFzaEluZm8pIHtcbiAgICByZXR1cm4gaGFzaEluZm8uaXNNaW5pZmllZCB8fCBoYXNoSW5mby5pc0luTm9kZU1vZHVsZXMgfHwgaGFzaEluZm8uaGFzU291cmNlTWFwIHx8IGhhc2hJbmZvLmlzRmlsZUJpbmFyeTtcbiAgfVxufVxuIl19"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":5,"31":1,"33":1,"55":0,"57":0,"58":0,"59":0,"85":0,"86":0,"88":0,"89":0,"90":0,"92":0,"98":0,"100":0,"101":0,"103":0,"104":0,"107":0,"108":0,"110":0,"111":0,"113":0,"132":0,"134":0,"135":0,"136":0,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"145":0,"146":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"155":0,"156":0,"157":0,"160":0,"161":0,"163":0,"164":0,"165":0,"166":0,"169":0,"172":0,"190":0,"192":0,"193":0,"194":0,"195":0,"197":0,"198":0,"199":0,"201":0,"204":0,"233":0,"235":0,"236":0,"237":0,"239":0,"240":0,"243":0,"245":0,"246":0,"247":0,"249":0,"250":0,"251":0,"252":0,"256":0,"257":0,"265":0,"267":0,"268":0,"270":0,"271":0,"272":0,"273":0,"276":0,"277":0,"278":0,"279":0,"283":0,"288":0,"289":0,"291":0,"292":0,"293":0,"294":0,"296":0,"297":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"306":0,"307":0,"308":0,"309":0,"312":0,"313":0,"315":0,"316":0,"317":0,"318":0,"321":0,"324":0,"328":0,"329":0,"330":0,"332":0,"333":0,"334":0,"336":0,"339":0,"343":0,"344":0,"346":0,"348":0,"349":0,"350":0,"353":0,"354":0,"355":0,"356":0,"359":0,"360":0,"364":0,"365":0,"367":0,"368":0,"370":0,"384":0,"386":0,"387":0,"388":0,"393":0,"394":0,"403":0,"410":0,"423":0,"426":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/digest-for-object.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/digest-for-object.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"updateDigestForJsonValue","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}}},"3":{"name":"createDigestForObject","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":62,"column":1}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":28}},"9":{"start":{"line":21,"column":2},"end":{"line":26,"column":3}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":33}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":11}},"14":{"start":{"line":28,"column":2},"end":{"line":31,"column":3}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":44}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":11}},"17":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"18":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":11}},"20":{"start":{"line":38,"column":2},"end":{"line":46,"column":3}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":31}},"22":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"23":{"start":{"line":41,"column":6},"end":{"line":41,"column":49}},"24":{"start":{"line":42,"column":6},"end":{"line":42,"column":33}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":31}},"26":{"start":{"line":45,"column":4},"end":{"line":45,"column":11}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":32}},"28":{"start":{"line":50,"column":2},"end":{"line":50,"column":14}},"29":{"start":{"line":52,"column":2},"end":{"line":52,"column":29}},"30":{"start":{"line":54,"column":2},"end":{"line":59,"column":3}},"31":{"start":{"line":55,"column":4},"end":{"line":55,"column":46}},"32":{"start":{"line":56,"column":4},"end":{"line":56,"column":32}},"33":{"start":{"line":57,"column":4},"end":{"line":57,"column":53}},"34":{"start":{"line":58,"column":4},"end":{"line":58,"column":31}},"35":{"start":{"line":61,"column":2},"end":{"line":61,"column":29}},"36":{"start":{"line":69,"column":0},"end":{"line":74,"column":1}},"37":{"start":{"line":70,"column":2},"end":{"line":70,"column":49}},"38":{"start":{"line":71,"column":2},"end":{"line":71,"column":38}},"39":{"start":{"line":73,"column":2},"end":{"line":73,"column":28}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":24}},{"start":{"line":28,"column":28},"end":{"line":28,"column":45}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = createDigestForObject;","","var _crypto = require('crypto');","","var _crypto2 = _interopRequireDefault(_crypto);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function updateDigestForJsonValue(shasum, value) {","  // Implmentation is similar to that of pretty-printing a JSON object, except:","  // * Strings are not escaped.","  // * No effort is made to avoid trailing commas.","  // These shortcuts should not affect the correctness of this function.","  const type = typeof value;","","  if (type === 'string') {","    shasum.update('\"', 'utf8');","    shasum.update(value, 'utf8');","    shasum.update('\"', 'utf8');","    return;","  }","","  if (type === 'boolean' || type === 'number') {","    shasum.update(value.toString(), 'utf8');","    return;","  }","","  if (!value) {","    shasum.update('null', 'utf8');","    return;","  }","","  if (Array.isArray(value)) {","    shasum.update('[', 'utf8');","    for (let i = 0; i < value.length; i++) {","      updateDigestForJsonValue(shasum, value[i]);","      shasum.update(',', 'utf8');","    }","    shasum.update(']', 'utf8');","    return;","  }","","  // value must be an object: be sure to sort the keys.","  let keys = Object.keys(value);","  keys.sort();","","  shasum.update('{', 'utf8');","","  for (let i = 0; i < keys.length; i++) {","    updateDigestForJsonValue(shasum, keys[i]);","    shasum.update(': ', 'utf8');","    updateDigestForJsonValue(shasum, value[keys[i]]);","    shasum.update(',', 'utf8');","  }","","  shasum.update('}', 'utf8');","}","","/**"," * Creates a hash from a JS object"," * "," * @private  "," */","function createDigestForObject(obj) {","  let sha1 = _crypto2.default.createHash('sha1');","  updateDigestForJsonValue(sha1, obj);","","  return sha1.digest('hex');","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kaWdlc3QtZm9yLW9iamVjdC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVEaWdlc3RGb3JPYmplY3QiLCJ1cGRhdGVEaWdlc3RGb3JKc29uVmFsdWUiLCJzaGFzdW0iLCJ2YWx1ZSIsInR5cGUiLCJ1cGRhdGUiLCJ0b1N0cmluZyIsIkFycmF5IiwiaXNBcnJheSIsImkiLCJsZW5ndGgiLCJrZXlzIiwiT2JqZWN0Iiwic29ydCIsIm9iaiIsInNoYTEiLCJjcmVhdGVIYXNoIiwiZGlnZXN0Il0sIm1hcHBpbmdzIjoiOzs7OztrQkEwRHdCQSxxQjs7QUExRHhCOzs7Ozs7QUFFQSxTQUFTQyx3QkFBVCxDQUFrQ0MsTUFBbEMsRUFBMENDLEtBQTFDLEVBQWlEO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTUMsT0FBTyxPQUFPRCxLQUFwQjs7QUFFQSxNQUFJQyxTQUFTLFFBQWIsRUFBdUI7QUFDckJGLFdBQU9HLE1BQVAsQ0FBYyxHQUFkLEVBQW1CLE1BQW5CO0FBQ0FILFdBQU9HLE1BQVAsQ0FBY0YsS0FBZCxFQUFxQixNQUFyQjtBQUNBRCxXQUFPRyxNQUFQLENBQWMsR0FBZCxFQUFtQixNQUFuQjtBQUNBO0FBQ0Q7O0FBRUQsTUFBSUQsU0FBUyxTQUFULElBQXNCQSxTQUFTLFFBQW5DLEVBQTZDO0FBQzNDRixXQUFPRyxNQUFQLENBQWNGLE1BQU1HLFFBQU4sRUFBZCxFQUFnQyxNQUFoQztBQUNBO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDSCxLQUFMLEVBQVk7QUFDVkQsV0FBT0csTUFBUCxDQUFjLE1BQWQsRUFBc0IsTUFBdEI7QUFDQTtBQUNEOztBQUVELE1BQUlFLE1BQU1DLE9BQU4sQ0FBY0wsS0FBZCxDQUFKLEVBQTBCO0FBQ3hCRCxXQUFPRyxNQUFQLENBQWMsR0FBZCxFQUFtQixNQUFuQjtBQUNBLFNBQUssSUFBSUksSUFBRSxDQUFYLEVBQWNBLElBQUlOLE1BQU1PLE1BQXhCLEVBQWdDRCxHQUFoQyxFQUFxQztBQUNuQ1IsK0JBQXlCQyxNQUF6QixFQUFpQ0MsTUFBTU0sQ0FBTixDQUFqQztBQUNBUCxhQUFPRyxNQUFQLENBQWMsR0FBZCxFQUFtQixNQUFuQjtBQUNEO0FBQ0RILFdBQU9HLE1BQVAsQ0FBYyxHQUFkLEVBQW1CLE1BQW5CO0FBQ0E7QUFDRDs7QUFFRDtBQUNBLE1BQUlNLE9BQU9DLE9BQU9ELElBQVAsQ0FBWVIsS0FBWixDQUFYO0FBQ0FRLE9BQUtFLElBQUw7O0FBRUFYLFNBQU9HLE1BQVAsQ0FBYyxHQUFkLEVBQW1CLE1BQW5COztBQUVBLE9BQUssSUFBSUksSUFBRSxDQUFYLEVBQWNBLElBQUlFLEtBQUtELE1BQXZCLEVBQStCRCxHQUEvQixFQUFvQztBQUNsQ1IsNkJBQXlCQyxNQUF6QixFQUFpQ1MsS0FBS0YsQ0FBTCxDQUFqQztBQUNBUCxXQUFPRyxNQUFQLENBQWMsSUFBZCxFQUFvQixNQUFwQjtBQUNBSiw2QkFBeUJDLE1BQXpCLEVBQWlDQyxNQUFNUSxLQUFLRixDQUFMLENBQU4sQ0FBakM7QUFDQVAsV0FBT0csTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBbkI7QUFDRDs7QUFFREgsU0FBT0csTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBbkI7QUFDRDs7QUFHRDs7Ozs7QUFLZSxTQUFTTCxxQkFBVCxDQUErQmMsR0FBL0IsRUFBb0M7QUFDakQsTUFBSUMsT0FBTyxpQkFBT0MsVUFBUCxDQUFrQixNQUFsQixDQUFYO0FBQ0FmLDJCQUF5QmMsSUFBekIsRUFBK0JELEdBQS9COztBQUVBLFNBQU9DLEtBQUtFLE1BQUwsQ0FBWSxLQUFaLENBQVA7QUFDRCIsImZpbGUiOiJkaWdlc3QtZm9yLW9iamVjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZURpZ2VzdEZvckpzb25WYWx1ZShzaGFzdW0sIHZhbHVlKSB7XHJcbiAgLy8gSW1wbG1lbnRhdGlvbiBpcyBzaW1pbGFyIHRvIHRoYXQgb2YgcHJldHR5LXByaW50aW5nIGEgSlNPTiBvYmplY3QsIGV4Y2VwdDpcclxuICAvLyAqIFN0cmluZ3MgYXJlIG5vdCBlc2NhcGVkLlxyXG4gIC8vICogTm8gZWZmb3J0IGlzIG1hZGUgdG8gYXZvaWQgdHJhaWxpbmcgY29tbWFzLlxyXG4gIC8vIFRoZXNlIHNob3J0Y3V0cyBzaG91bGQgbm90IGFmZmVjdCB0aGUgY29ycmVjdG5lc3Mgb2YgdGhpcyBmdW5jdGlvbi5cclxuICBjb25zdCB0eXBlID0gdHlwZW9mKHZhbHVlKTtcclxuXHJcbiAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7XHJcbiAgICBzaGFzdW0udXBkYXRlKCdcIicsICd1dGY4Jyk7XHJcbiAgICBzaGFzdW0udXBkYXRlKHZhbHVlLCAndXRmOCcpO1xyXG4gICAgc2hhc3VtLnVwZGF0ZSgnXCInLCAndXRmOCcpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGUgPT09ICdib29sZWFuJyB8fCB0eXBlID09PSAnbnVtYmVyJykge1xyXG4gICAgc2hhc3VtLnVwZGF0ZSh2YWx1ZS50b1N0cmluZygpLCAndXRmOCcpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYgKCF2YWx1ZSkge1xyXG4gICAgc2hhc3VtLnVwZGF0ZSgnbnVsbCcsICd1dGY4Jyk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcclxuICAgIHNoYXN1bS51cGRhdGUoJ1snLCAndXRmOCcpO1xyXG4gICAgZm9yIChsZXQgaT0wOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgdXBkYXRlRGlnZXN0Rm9ySnNvblZhbHVlKHNoYXN1bSwgdmFsdWVbaV0pO1xyXG4gICAgICBzaGFzdW0udXBkYXRlKCcsJywgJ3V0ZjgnKTtcclxuICAgIH1cclxuICAgIHNoYXN1bS51cGRhdGUoJ10nLCAndXRmOCcpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gdmFsdWUgbXVzdCBiZSBhbiBvYmplY3Q6IGJlIHN1cmUgdG8gc29ydCB0aGUga2V5cy5cclxuICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcclxuICBrZXlzLnNvcnQoKTtcclxuXHJcbiAgc2hhc3VtLnVwZGF0ZSgneycsICd1dGY4Jyk7XHJcblxyXG4gIGZvciAobGV0IGk9MDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgIHVwZGF0ZURpZ2VzdEZvckpzb25WYWx1ZShzaGFzdW0sIGtleXNbaV0pO1xyXG4gICAgc2hhc3VtLnVwZGF0ZSgnOiAnLCAndXRmOCcpO1xyXG4gICAgdXBkYXRlRGlnZXN0Rm9ySnNvblZhbHVlKHNoYXN1bSwgdmFsdWVba2V5c1tpXV0pO1xyXG4gICAgc2hhc3VtLnVwZGF0ZSgnLCcsICd1dGY4Jyk7XHJcbiAgfVxyXG5cclxuICBzaGFzdW0udXBkYXRlKCd9JywgJ3V0ZjgnKTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgaGFzaCBmcm9tIGEgSlMgb2JqZWN0XHJcbiAqIFxyXG4gKiBAcHJpdmF0ZSAgXHJcbiAqLyBcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlRGlnZXN0Rm9yT2JqZWN0KG9iaikge1xyXG4gIGxldCBzaGExID0gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTEnKTtcclxuICB1cGRhdGVEaWdlc3RGb3JKc29uVmFsdWUoc2hhMSwgb2JqKTtcclxuICBcclxuICByZXR1cm4gc2hhMS5kaWdlc3QoJ2hleCcpO1xyXG59XHJcbiJdfQ=="],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"19":0,"21":0,"22":0,"23":0,"24":0,"25":0,"28":0,"29":0,"30":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"49":0,"50":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"69":1,"70":0,"71":0,"73":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/read-only-compiler.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/read-only-compiler.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"_asyncToGenerator","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":40},"end":{"line":7,"column":52}}},"3":{"name":"(anonymous_3)","line":7,"loc":{"start":{"line":7,"column":110},"end":{"line":7,"column":137}}},"4":{"name":"step","line":7,"loc":{"start":{"line":7,"column":139},"end":{"line":7,"column":163}}},"5":{"name":"(anonymous_5)","line":7,"loc":{"start":{"line":7,"column":341},"end":{"line":7,"column":358}}},"6":{"name":"(anonymous_6)","line":7,"loc":{"start":{"line":7,"column":384},"end":{"line":7,"column":399}}},"7":{"name":"(anonymous_7)","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":70}}},"8":{"name":"(anonymous_8)","line":24,"loc":{"start":{"line":24,"column":19},"end":{"line":24,"column":22}}},"9":{"name":"(anonymous_9)","line":25,"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":42}}},"10":{"name":"(anonymous_10)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":28}}},"11":{"name":"(anonymous_11)","line":30,"loc":{"start":{"line":30,"column":29},"end":{"line":30,"column":42}}},"12":{"name":"(anonymous_12)","line":35,"loc":{"start":{"line":35,"column":9},"end":{"line":35,"column":12}}},"13":{"name":"(anonymous_13)","line":36,"loc":{"start":{"line":36,"column":29},"end":{"line":36,"column":42}}},"14":{"name":"(anonymous_14)","line":41,"loc":{"start":{"line":41,"column":23},"end":{"line":41,"column":26}}},"15":{"name":"(anonymous_15)","line":44,"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":32}}},"16":{"name":"(anonymous_16)","line":48,"loc":{"start":{"line":48,"column":13},"end":{"line":48,"column":16}}},"17":{"name":"(anonymous_17)","line":52,"loc":{"start":{"line":52,"column":20},"end":{"line":52,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":458}},"3":{"start":{"line":7,"column":33},"end":{"line":7,"column":456}},"4":{"start":{"line":7,"column":54},"end":{"line":7,"column":90}},"5":{"start":{"line":7,"column":91},"end":{"line":7,"column":453}},"6":{"start":{"line":7,"column":139},"end":{"line":7,"column":428}},"7":{"start":{"line":7,"column":165},"end":{"line":7,"column":263}},"8":{"start":{"line":7,"column":171},"end":{"line":7,"column":196}},"9":{"start":{"line":7,"column":197},"end":{"line":7,"column":220}},"10":{"start":{"line":7,"column":239},"end":{"line":7,"column":253}},"11":{"start":{"line":7,"column":254},"end":{"line":7,"column":261}},"12":{"start":{"line":7,"column":264},"end":{"line":7,"column":426}},"13":{"start":{"line":7,"column":281},"end":{"line":7,"column":296}},"14":{"start":{"line":7,"column":306},"end":{"line":7,"column":424}},"15":{"start":{"line":7,"column":360},"end":{"line":7,"column":380}},"16":{"start":{"line":7,"column":401},"end":{"line":7,"column":420}},"17":{"start":{"line":7,"column":429},"end":{"line":7,"column":449}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":84}},"19":{"start":{"line":25,"column":4},"end":{"line":27,"column":9}},"20":{"start":{"line":26,"column":6},"end":{"line":26,"column":18}},"21":{"start":{"line":30,"column":4},"end":{"line":32,"column":9}},"22":{"start":{"line":31,"column":6},"end":{"line":31,"column":16}},"23":{"start":{"line":36,"column":4},"end":{"line":38,"column":9}},"24":{"start":{"line":37,"column":6},"end":{"line":37,"column":59}},"25":{"start":{"line":42,"column":4},"end":{"line":42,"column":16}},"26":{"start":{"line":45,"column":4},"end":{"line":45,"column":14}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":57}},"28":{"start":{"line":53,"column":4},"end":{"line":53,"column":32}},"29":{"start":{"line":56,"column":0},"end":{"line":56,"column":35}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":264},"end":{"line":7,"column":264}},{"start":{"line":7,"column":264},"end":{"line":7,"column":264}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","/**"," * ReadOnlyCompiler is a compiler which allows the host to inject all of the compiler"," * metadata information so that {@link CompileCache} et al are able to recreate the"," * hash without having two separate code paths."," */","class ReadOnlyCompiler {","  /**","   * Creates a ReadOnlyCompiler instance","   *","   * @private","   */","  constructor(name, compilerVersion, compilerOptions, inputMimeTypes) {","    Object.assign(this, { name, compilerVersion, compilerOptions, inputMimeTypes });","  }","","  shouldCompileFile() {","    return _asyncToGenerator(function* () {","      return true;","    })();","  }","  determineDependentFiles() {","    return _asyncToGenerator(function* () {","      return [];","    })();","  }","","  compile() {","    return _asyncToGenerator(function* () {","      throw new Error(\"Read-only compilers can't compile\");","    })();","  }","","  shouldCompileFileSync() {","    return true;","  }","  determineDependentFilesSync() {","    return [];","  }","","  compileSync() {","    throw new Error(\"Read-only compilers can't compile\");","  }","","  getCompilerVersion() {","    return this.compilerVersion;","  }","}","exports.default = ReadOnlyCompiler;","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZWFkLW9ubHktY29tcGlsZXIuanMiXSwibmFtZXMiOlsiUmVhZE9ubHlDb21waWxlciIsImNvbnN0cnVjdG9yIiwibmFtZSIsImNvbXBpbGVyVmVyc2lvbiIsImNvbXBpbGVyT3B0aW9ucyIsImlucHV0TWltZVR5cGVzIiwiT2JqZWN0IiwiYXNzaWduIiwic2hvdWxkQ29tcGlsZUZpbGUiLCJkZXRlcm1pbmVEZXBlbmRlbnRGaWxlcyIsImNvbXBpbGUiLCJFcnJvciIsInNob3VsZENvbXBpbGVGaWxlU3luYyIsImRldGVybWluZURlcGVuZGVudEZpbGVzU3luYyIsImNvbXBpbGVTeW5jIiwiZ2V0Q29tcGlsZXJWZXJzaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztBQUtlLE1BQU1BLGdCQUFOLENBQXVCO0FBQ3BDOzs7OztBQUtBQyxjQUFZQyxJQUFaLEVBQWtCQyxlQUFsQixFQUFtQ0MsZUFBbkMsRUFBb0RDLGNBQXBELEVBQW9FO0FBQ2xFQyxXQUFPQyxNQUFQLENBQWMsSUFBZCxFQUFvQixFQUFFTCxJQUFGLEVBQVFDLGVBQVIsRUFBeUJDLGVBQXpCLEVBQTBDQyxjQUExQyxFQUFwQjtBQUNEOztBQUVLRyxtQkFBTixHQUEwQjtBQUFBO0FBQUUsYUFBTyxJQUFQO0FBQUY7QUFBZ0I7QUFDcENDLHlCQUFOLEdBQWdDO0FBQUE7QUFBRSxhQUFPLEVBQVA7QUFBRjtBQUFjOztBQUV4Q0MsU0FBTixHQUFnQjtBQUFBO0FBQ2QsWUFBTSxJQUFJQyxLQUFKLENBQVUsbUNBQVYsQ0FBTjtBQURjO0FBRWY7O0FBRURDLDBCQUF3QjtBQUFFLFdBQU8sSUFBUDtBQUFjO0FBQ3hDQyxnQ0FBOEI7QUFBRSxXQUFPLEVBQVA7QUFBWTs7QUFFNUNDLGdCQUFjO0FBQ1osVUFBTSxJQUFJSCxLQUFKLENBQVUsbUNBQVYsQ0FBTjtBQUNEOztBQUVESSx1QkFBcUI7QUFDbkIsV0FBTyxLQUFLWixlQUFaO0FBQ0Q7QUExQm1DO2tCQUFqQkgsZ0IiLCJmaWxlIjoicmVhZC1vbmx5LWNvbXBpbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWFkT25seUNvbXBpbGVyIGlzIGEgY29tcGlsZXIgd2hpY2ggYWxsb3dzIHRoZSBob3N0IHRvIGluamVjdCBhbGwgb2YgdGhlIGNvbXBpbGVyXG4gKiBtZXRhZGF0YSBpbmZvcm1hdGlvbiBzbyB0aGF0IHtAbGluayBDb21waWxlQ2FjaGV9IGV0IGFsIGFyZSBhYmxlIHRvIHJlY3JlYXRlIHRoZVxuICogaGFzaCB3aXRob3V0IGhhdmluZyB0d28gc2VwYXJhdGUgY29kZSBwYXRocy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhZE9ubHlDb21waWxlciB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgUmVhZE9ubHlDb21waWxlciBpbnN0YW5jZVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSwgY29tcGlsZXJWZXJzaW9uLCBjb21waWxlck9wdGlvbnMsIGlucHV0TWltZVR5cGVzKSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCB7IG5hbWUsIGNvbXBpbGVyVmVyc2lvbiwgY29tcGlsZXJPcHRpb25zLCBpbnB1dE1pbWVUeXBlcyB9KTtcbiAgfVxuXG4gIGFzeW5jIHNob3VsZENvbXBpbGVGaWxlKCkgeyByZXR1cm4gdHJ1ZTsgfVxuICBhc3luYyBkZXRlcm1pbmVEZXBlbmRlbnRGaWxlcygpIHsgcmV0dXJuIFtdOyB9XG5cbiAgYXN5bmMgY29tcGlsZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWFkLW9ubHkgY29tcGlsZXJzIGNhbid0IGNvbXBpbGVcIik7XG4gIH1cblxuICBzaG91bGRDb21waWxlRmlsZVN5bmMoKSB7IHJldHVybiB0cnVlOyB9XG4gIGRldGVybWluZURlcGVuZGVudEZpbGVzU3luYygpIHsgcmV0dXJuIFtdOyB9XG5cbiAgY29tcGlsZVN5bmMoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUmVhZC1vbmx5IGNvbXBpbGVycyBjYW4ndCBjb21waWxlXCIpO1xuICB9XG5cbiAgZ2V0Q29tcGlsZXJWZXJzaW9uKCkge1xuICAgIHJldHVybiB0aGlzLmNvbXBpbGVyVmVyc2lvbjtcbiAgfVxufVxuIl19"],"l":{"3":1,"7":1,"21":0,"25":0,"26":0,"30":0,"31":0,"36":0,"37":0,"42":0,"45":0,"49":0,"53":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/browser-signal.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/browser-signal.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"send","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}}},"2":{"name":"listen","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":25}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":24},"end":{"line":45,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":20}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":107}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}},"11":{"start":{"line":22,"column":0},"end":{"line":37,"column":1}},"12":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":37}},"14":{"start":{"line":27,"column":2},"end":{"line":30,"column":3}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":11}},"17":{"start":{"line":32,"column":2},"end":{"line":32,"column":40}},"18":{"start":{"line":32,"column":33},"end":{"line":32,"column":40}},"19":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"20":{"start":{"line":36,"column":2},"end":{"line":36,"column":18}},"21":{"start":{"line":39,"column":0},"end":{"line":76,"column":1}},"22":{"start":{"line":40,"column":2},"end":{"line":40,"column":116}},"23":{"start":{"line":40,"column":32},"end":{"line":40,"column":116}},"24":{"start":{"line":42,"column":2},"end":{"line":75,"column":5}},"25":{"start":{"line":43,"column":4},"end":{"line":58,"column":5}},"26":{"start":{"line":44,"column":6},"end":{"line":44,"column":40}},"27":{"start":{"line":45,"column":6},"end":{"line":51,"column":8}},"28":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"29":{"start":{"line":47,"column":10},"end":{"line":47,"column":45}},"30":{"start":{"line":50,"column":8},"end":{"line":50,"column":24}},"31":{"start":{"line":53,"column":6},"end":{"line":53,"column":51}},"32":{"start":{"line":54,"column":6},"end":{"line":57,"column":7}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":37}},"34":{"start":{"line":56,"column":8},"end":{"line":56,"column":52}},"35":{"start":{"line":60,"column":4},"end":{"line":60,"column":36}},"36":{"start":{"line":62,"column":4},"end":{"line":62,"column":54}},"37":{"start":{"line":63,"column":4},"end":{"line":72,"column":7}},"38":{"start":{"line":64,"column":6},"end":{"line":64,"column":38}},"39":{"start":{"line":65,"column":6},"end":{"line":65,"column":52}},"40":{"start":{"line":65,"column":45},"end":{"line":65,"column":52}},"41":{"start":{"line":67,"column":6},"end":{"line":69,"column":7}},"42":{"start":{"line":68,"column":8},"end":{"line":68,"column":67}},"43":{"start":{"line":71,"column":6},"end":{"line":71,"column":33}},"44":{"start":{"line":74,"column":4},"end":{"line":74,"column":16}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":26},"end":{"line":18,"column":30}},{"start":{"line":18,"column":33},"end":{"line":18,"column":106}}]},"2":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":45},"end":{"line":18,"column":72}},{"start":{"line":18,"column":75},"end":{"line":18,"column":106}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":16}},{"start":{"line":27,"column":20},"end":{"line":27,"column":30}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"6":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"7":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":16}},{"start":{"line":40,"column":20},"end":{"line":40,"column":30}}]},"8":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"10":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":10},"end":{"line":54,"column":20}},{"start":{"line":54,"column":24},"end":{"line":54,"column":33}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.send = send;","exports.listen = listen;","","var _Observable = require('rxjs/Observable');","","var _Subject = require('rxjs/Subject');","","require('rxjs/add/observable/throw');","","const isElectron = 'type' in process;","const isBrowser = process.type === 'browser';","","const ipc = !isElectron ? null : isBrowser ? require('electron').ipcMain : require('electron').ipcRenderer;","","const channelList = {};","","function send(channel) {","  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {","    args[_key - 1] = arguments[_key];","  }","","  if (isElectron && !isBrowser) {","    ipc.send(channel, ...args);","    return;","  }","","  if (!(channel in channelList)) return;","","  let subj = channelList[channel].subj;","","  subj.next(args);","}","","function listen(channel) {","  if (isElectron && !isBrowser) return _Observable.Observable.throw(new Error(\"Can only call listen from browser\"));","","  return _Observable.Observable.create(s => {","    if (!(channel in channelList)) {","      let subj = new _Subject.Subject();","      let ipcListener = function (e) {","        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {","          args[_key2 - 1] = arguments[_key2];","        }","","        subj.next(args);","      };","","      channelList[channel] = { subj, refcount: 0 };","      if (isElectron && isBrowser) {","        ipc.on(channel, ipcListener);","        channelList[channel].listener = ipcListener;","      }","    }","","    channelList[channel].refcount++;","","    let disp = channelList[channel].subj.subscribe(s);","    disp.add(() => {","      channelList[channel].refcount--;","      if (channelList[channel].refcount > 0) return;","","      if (channelList[channel].listener) {","        ipc.removeListener(channel, channelList[channel].listener);","      }","","      delete channelList.channel;","    });","","    return disp;","  });","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9icm93c2VyLXNpZ25hbC5qcyJdLCJuYW1lcyI6WyJzZW5kIiwibGlzdGVuIiwiaXNFbGVjdHJvbiIsInByb2Nlc3MiLCJpc0Jyb3dzZXIiLCJ0eXBlIiwiaXBjIiwicmVxdWlyZSIsImlwY01haW4iLCJpcGNSZW5kZXJlciIsImNoYW5uZWxMaXN0IiwiY2hhbm5lbCIsImFyZ3MiLCJzdWJqIiwibmV4dCIsInRocm93IiwiRXJyb3IiLCJjcmVhdGUiLCJzIiwiaXBjTGlzdGVuZXIiLCJlIiwicmVmY291bnQiLCJvbiIsImxpc3RlbmVyIiwiZGlzcCIsInN1YnNjcmliZSIsImFkZCIsInJlbW92ZUxpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztRQWFnQkEsSSxHQUFBQSxJO1FBWUFDLE0sR0FBQUEsTTs7QUF6QmhCOztBQUNBOztBQUVBOztBQUVBLE1BQU1DLGFBQWEsVUFBVUMsT0FBN0I7QUFDQSxNQUFNQyxZQUFZRCxRQUFRRSxJQUFSLEtBQWlCLFNBQW5DOztBQUVBLE1BQU1DLE1BQU0sQ0FBQ0osVUFBRCxHQUFjLElBQWQsR0FDVkUsWUFBWUcsUUFBUSxVQUFSLEVBQW9CQyxPQUFoQyxHQUEwQ0QsUUFBUSxVQUFSLEVBQW9CRSxXQURoRTs7QUFHQSxNQUFNQyxjQUFjLEVBQXBCOztBQUVPLFNBQVNWLElBQVQsQ0FBY1csT0FBZCxFQUFnQztBQUFBLG9DQUFOQyxJQUFNO0FBQU5BLFFBQU07QUFBQTs7QUFDckMsTUFBSVYsY0FBYyxDQUFDRSxTQUFuQixFQUE4QjtBQUM1QkUsUUFBSU4sSUFBSixDQUFTVyxPQUFULEVBQWtCLEdBQUdDLElBQXJCO0FBQ0E7QUFDRDs7QUFFRCxNQUFJLEVBQUVELFdBQVdELFdBQWIsQ0FBSixFQUErQjs7QUFOTSxNQVEvQkcsSUFSK0IsR0FRdEJILFlBQVlDLE9BQVosQ0FSc0IsQ0FRL0JFLElBUitCOztBQVNyQ0EsT0FBS0MsSUFBTCxDQUFVRixJQUFWO0FBQ0Q7O0FBRU0sU0FBU1gsTUFBVCxDQUFnQlUsT0FBaEIsRUFBeUI7QUFDOUIsTUFBSVQsY0FBYyxDQUFDRSxTQUFuQixFQUE4QixPQUFPLHVCQUFXVyxLQUFYLENBQWlCLElBQUlDLEtBQUosQ0FBVSxtQ0FBVixDQUFqQixDQUFQOztBQUU5QixTQUFPLHVCQUFXQyxNQUFYLENBQW1CQyxDQUFELElBQU87QUFDOUIsUUFBSSxFQUFFUCxXQUFXRCxXQUFiLENBQUosRUFBK0I7QUFDN0IsVUFBSUcsT0FBTyxzQkFBWDtBQUNBLFVBQUlNLGNBQWMsVUFBQ0MsQ0FBRCxFQUFnQjtBQUFBLDJDQUFUUixJQUFTO0FBQVRBLGNBQVM7QUFBQTs7QUFBRUMsYUFBS0MsSUFBTCxDQUFVRixJQUFWO0FBQWtCLE9BQXREOztBQUVBRixrQkFBWUMsT0FBWixJQUF1QixFQUFFRSxJQUFGLEVBQVFRLFVBQVUsQ0FBbEIsRUFBdkI7QUFDQSxVQUFJbkIsY0FBY0UsU0FBbEIsRUFBNkI7QUFDM0JFLFlBQUlnQixFQUFKLENBQU9YLE9BQVAsRUFBZ0JRLFdBQWhCO0FBQ0FULG9CQUFZQyxPQUFaLEVBQXFCWSxRQUFyQixHQUFnQ0osV0FBaEM7QUFDRDtBQUNGOztBQUVEVCxnQkFBWUMsT0FBWixFQUFxQlUsUUFBckI7O0FBRUEsUUFBSUcsT0FBT2QsWUFBWUMsT0FBWixFQUFxQkUsSUFBckIsQ0FBMEJZLFNBQTFCLENBQW9DUCxDQUFwQyxDQUFYO0FBQ0FNLFNBQUtFLEdBQUwsQ0FBUyxNQUFNO0FBQ2JoQixrQkFBWUMsT0FBWixFQUFxQlUsUUFBckI7QUFDQSxVQUFJWCxZQUFZQyxPQUFaLEVBQXFCVSxRQUFyQixHQUFnQyxDQUFwQyxFQUF1Qzs7QUFFdkMsVUFBSVgsWUFBWUMsT0FBWixFQUFxQlksUUFBekIsRUFBbUM7QUFDakNqQixZQUFJcUIsY0FBSixDQUFtQmhCLE9BQW5CLEVBQTRCRCxZQUFZQyxPQUFaLEVBQXFCWSxRQUFqRDtBQUNEOztBQUVELGFBQU9iLFlBQVlDLE9BQW5CO0FBQ0QsS0FURDs7QUFXQSxXQUFPYSxJQUFQO0FBQ0QsR0EzQk0sQ0FBUDtBQTRCRCIsImZpbGUiOiJicm93c2VyLXNpZ25hbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcclxuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzL1N1YmplY3QnO1xyXG5cclxuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL3Rocm93JztcclxuXHJcbmNvbnN0IGlzRWxlY3Ryb24gPSAndHlwZScgaW4gcHJvY2VzcztcclxuY29uc3QgaXNCcm93c2VyID0gcHJvY2Vzcy50eXBlID09PSAnYnJvd3Nlcic7XHJcblxyXG5jb25zdCBpcGMgPSAhaXNFbGVjdHJvbiA/IG51bGwgOlxyXG4gIGlzQnJvd3NlciA/IHJlcXVpcmUoJ2VsZWN0cm9uJykuaXBjTWFpbiA6IHJlcXVpcmUoJ2VsZWN0cm9uJykuaXBjUmVuZGVyZXI7XHJcblxyXG5jb25zdCBjaGFubmVsTGlzdCA9IHt9O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNlbmQoY2hhbm5lbCwgLi4uYXJncykge1xyXG4gIGlmIChpc0VsZWN0cm9uICYmICFpc0Jyb3dzZXIpIHtcclxuICAgIGlwYy5zZW5kKGNoYW5uZWwsIC4uLmFyZ3MpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYgKCEoY2hhbm5lbCBpbiBjaGFubmVsTGlzdCkpIHJldHVybjtcclxuXHJcbiAgbGV0IHsgc3ViaiB9ID0gY2hhbm5lbExpc3RbY2hhbm5lbF07XHJcbiAgc3Viai5uZXh0KGFyZ3MpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbGlzdGVuKGNoYW5uZWwpIHtcclxuICBpZiAoaXNFbGVjdHJvbiAmJiAhaXNCcm93c2VyKSByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhuZXcgRXJyb3IoXCJDYW4gb25seSBjYWxsIGxpc3RlbiBmcm9tIGJyb3dzZXJcIikpO1xyXG5cclxuICByZXR1cm4gT2JzZXJ2YWJsZS5jcmVhdGUoKHMpID0+IHtcclxuICAgIGlmICghKGNoYW5uZWwgaW4gY2hhbm5lbExpc3QpKSB7XHJcbiAgICAgIGxldCBzdWJqID0gbmV3IFN1YmplY3QoKTtcclxuICAgICAgbGV0IGlwY0xpc3RlbmVyID0gKGUsIC4uLmFyZ3MpID0+IHsgc3Viai5uZXh0KGFyZ3MpOyB9O1xyXG5cclxuICAgICAgY2hhbm5lbExpc3RbY2hhbm5lbF0gPSB7IHN1YmosIHJlZmNvdW50OiAwIH07XHJcbiAgICAgIGlmIChpc0VsZWN0cm9uICYmIGlzQnJvd3Nlcikge1xyXG4gICAgICAgIGlwYy5vbihjaGFubmVsLCBpcGNMaXN0ZW5lcik7XHJcbiAgICAgICAgY2hhbm5lbExpc3RbY2hhbm5lbF0ubGlzdGVuZXIgPSBpcGNMaXN0ZW5lcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNoYW5uZWxMaXN0W2NoYW5uZWxdLnJlZmNvdW50Kys7XHJcblxyXG4gICAgbGV0IGRpc3AgPSBjaGFubmVsTGlzdFtjaGFubmVsXS5zdWJqLnN1YnNjcmliZShzKTtcclxuICAgIGRpc3AuYWRkKCgpID0+IHtcclxuICAgICAgY2hhbm5lbExpc3RbY2hhbm5lbF0ucmVmY291bnQtLTtcclxuICAgICAgaWYgKGNoYW5uZWxMaXN0W2NoYW5uZWxdLnJlZmNvdW50ID4gMCkgcmV0dXJuO1xyXG5cclxuICAgICAgaWYgKGNoYW5uZWxMaXN0W2NoYW5uZWxdLmxpc3RlbmVyKSB7XHJcbiAgICAgICAgaXBjLnJlbW92ZUxpc3RlbmVyKGNoYW5uZWwsIGNoYW5uZWxMaXN0W2NoYW5uZWxdLmxpc3RlbmVyKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZGVsZXRlIGNoYW5uZWxMaXN0LmNoYW5uZWw7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZGlzcDtcclxuICB9KTtcclxufVxyXG4iXX0="],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"16":1,"18":1,"20":1,"22":1,"23":0,"24":0,"27":0,"28":0,"29":0,"32":0,"34":0,"36":0,"39":1,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"50":0,"53":0,"54":0,"55":0,"56":0,"60":0,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"71":0,"74":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/rig-mime-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/rig-mime-types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":9,"11":9,"12":9},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"init","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":16}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":20}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":51}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":24,"column":2}},"8":{"start":{"line":31,"column":0},"end":{"line":38,"column":1}},"9":{"start":{"line":32,"column":2},"end":{"line":37,"column":5}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":42}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":49}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.init = init;","","var _mimeTypes = require('@paulcbetts/mime-types');","","var _mimeTypes2 = _interopRequireDefault(_mimeTypes);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","const typesToRig = {","  'text/typescript': 'ts',","  'text/tsx': 'tsx',","  'text/jade': 'jade',","  'text/cson': 'cson',","  'text/stylus': 'styl',","  'text/sass': 'sass',","  'text/scss': 'scss',","  'text/vue': 'vue',","  'text/graphql': 'graphql'","};","","/**"," * Adds MIME types for types not in the mime-types package"," *"," * @private"," */","function init() {","  Object.keys(typesToRig).forEach(type => {","    let ext = typesToRig[type];","","    _mimeTypes2.default.types[ext] = type;","    _mimeTypes2.default.extensions[type] = [ext];","  });","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yaWctbWltZS10eXBlcy5qcyJdLCJuYW1lcyI6WyJpbml0IiwidHlwZXNUb1JpZyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwidHlwZSIsImV4dCIsInR5cGVzIiwiZXh0ZW5zaW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFtQmdCQSxJLEdBQUFBLEk7O0FBbkJoQjs7Ozs7O0FBRUEsTUFBTUMsYUFBYTtBQUNqQixxQkFBbUIsSUFERjtBQUVqQixjQUFZLEtBRks7QUFHakIsZUFBYSxNQUhJO0FBSWpCLGVBQWEsTUFKSTtBQUtqQixpQkFBZSxNQUxFO0FBTWpCLGVBQWEsTUFOSTtBQU9qQixlQUFhLE1BUEk7QUFRakIsY0FBWSxLQVJLO0FBU2pCLGtCQUFnQjtBQVRDLENBQW5COztBQVlBOzs7OztBQUtPLFNBQVNELElBQVQsR0FBZ0I7QUFDckJFLFNBQU9DLElBQVAsQ0FBWUYsVUFBWixFQUF3QkcsT0FBeEIsQ0FBaUNDLElBQUQsSUFBVTtBQUN4QyxRQUFJQyxNQUFNTCxXQUFXSSxJQUFYLENBQVY7O0FBRUEsd0JBQVVFLEtBQVYsQ0FBZ0JELEdBQWhCLElBQXVCRCxJQUF2QjtBQUNBLHdCQUFVRyxVQUFWLENBQXFCSCxJQUFyQixJQUE2QixDQUFDQyxHQUFELENBQTdCO0FBQ0QsR0FMRDtBQU1EIiwiZmlsZSI6InJpZy1taW1lLXR5cGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1pbWVUeXBlcyBmcm9tICdAcGF1bGNiZXR0cy9taW1lLXR5cGVzJztcclxuXHJcbmNvbnN0IHR5cGVzVG9SaWcgPSB7XHJcbiAgJ3RleHQvdHlwZXNjcmlwdCc6ICd0cycsXHJcbiAgJ3RleHQvdHN4JzogJ3RzeCcsXHJcbiAgJ3RleHQvamFkZSc6ICdqYWRlJyxcclxuICAndGV4dC9jc29uJzogJ2Nzb24nLFxyXG4gICd0ZXh0L3N0eWx1cyc6ICdzdHlsJyxcclxuICAndGV4dC9zYXNzJzogJ3Nhc3MnLFxyXG4gICd0ZXh0L3Njc3MnOiAnc2NzcycsXHJcbiAgJ3RleHQvdnVlJzogJ3Z1ZScsXHJcbiAgJ3RleHQvZ3JhcGhxbCc6ICdncmFwaHFsJyxcclxufTtcclxuXHJcbi8qKlxyXG4gKiBBZGRzIE1JTUUgdHlwZXMgZm9yIHR5cGVzIG5vdCBpbiB0aGUgbWltZS10eXBlcyBwYWNrYWdlXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcclxuICBPYmplY3Qua2V5cyh0eXBlc1RvUmlnKS5mb3JFYWNoKCh0eXBlKSA9PiB7XHJcbiAgICBsZXQgZXh0ID0gdHlwZXNUb1JpZ1t0eXBlXTtcclxuXHJcbiAgICBtaW1lVHlwZXMudHlwZXNbZXh0XSA9IHR5cGU7XHJcbiAgICBtaW1lVHlwZXMuZXh0ZW5zaW9uc1t0eXBlXSA9IFtleHRdO1xyXG4gIH0pO1xyXG59XHJcbiJdfQ=="],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"31":1,"32":1,"33":9,"35":9,"36":9}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/require-hook.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/require-hook.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,1],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"registerRequireExtension","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":51}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":16}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":60}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}},"10":{"start":{"line":19,"column":0},"end":{"line":39,"column":1}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":33}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":70}},"14":{"start":{"line":24,"column":2},"end":{"line":38,"column":3}},"15":{"start":{"line":25,"column":4},"end":{"line":37,"column":7}},"16":{"start":{"line":26,"column":6},"end":{"line":26,"column":27}},"17":{"start":{"line":29,"column":6},"end":{"line":29,"column":43}},"18":{"start":{"line":30,"column":6},"end":{"line":30,"column":106}},"19":{"start":{"line":30,"column":51},"end":{"line":30,"column":104}},"20":{"start":{"line":31,"column":6},"end":{"line":34,"column":9}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":49}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":24}},"23":{"start":{"line":36,"column":6},"end":{"line":36,"column":39}},"24":{"start":{"line":36,"column":33},"end":{"line":36,"column":37}},"25":{"start":{"line":49,"column":0},"end":{"line":78,"column":1}},"26":{"start":{"line":50,"column":2},"end":{"line":60,"column":3}},"27":{"start":{"line":51,"column":4},"end":{"line":59,"column":5}},"28":{"start":{"line":52,"column":6},"end":{"line":54,"column":8}},"29":{"start":{"line":53,"column":22},"end":{"line":53,"column":43}},"30":{"start":{"line":56,"column":6},"end":{"line":56,"column":53}},"31":{"start":{"line":58,"column":6},"end":{"line":58,"column":129}},"32":{"start":{"line":62,"column":2},"end":{"line":77,"column":5}},"33":{"start":{"line":63,"column":4},"end":{"line":63,"column":54}},"34":{"start":{"line":65,"column":4},"end":{"line":76,"column":6}},"35":{"start":{"line":66,"column":6},"end":{"line":66,"column":69}},"36":{"start":{"line":68,"column":6},"end":{"line":68,"column":44}},"37":{"start":{"line":71,"column":6},"end":{"line":73,"column":7}},"38":{"start":{"line":72,"column":8},"end":{"line":72,"column":140}},"39":{"start":{"line":75,"column":6},"end":{"line":75,"column":38}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":0},"end":{"line":19,"column":0}},{"start":{"line":19,"column":0},"end":{"line":19,"column":0}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"5":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":51},"end":{"line":30,"column":52}},{"start":{"line":30,"column":56},"end":{"line":30,"column":104}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"7":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = registerRequireExtension;","","var _mimeTypes = require('@paulcbetts/mime-types');","","var _mimeTypes2 = _interopRequireDefault(_mimeTypes);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","let HMR = false;","","const d = require('debug')('electron-compile:require-hook');","let electron = null;","","if (process.type === 'renderer') {","  window.__hot = [];","  electron = require('electron');","  HMR = electron.remote.getGlobal('__electron_compile_hmr_enabled__');","","  if (HMR) {","    electron.ipcRenderer.on('__electron-compile__HMR', () => {","      d(\"Got HMR signal!\");","","      // Reset the module cache","      let cache = require('module')._cache;","      let toEject = Object.keys(cache).filter(x => x && !x.match(/[\\\\\\/](node_modules|.*\\.asar)[\\\\\\/]/i));","      toEject.forEach(x => {","        d(`Removing node module entry for ${x}`);","        delete cache[x];","      });","","      window.__hot.forEach(fn => fn());","    });","  }","}","","/**"," * Initializes the node.js hook that allows us to intercept files loaded by"," * node.js and rewrite them. This method along with {@link initializeProtocolHook}"," * are the top-level methods that electron-compile actually uses to intercept"," * code that Electron loads."," *"," * @param  {CompilerHost} compilerHost  The compiler host to use for compilation."," */","function registerRequireExtension(compilerHost) {","  if (HMR) {","    try {","      require('module').prototype.hot = {","        accept: cb => window.__hot.push(cb)","      };","","      require.main.require('react-hot-loader/patch');","    } catch (e) {","      console.error(`Couldn't require react-hot-loader/patch, you need to add react-hot-loader@3 as a dependency! ${e.message}`);","    }","  }","","  Object.keys(compilerHost.compilersByMimeType).forEach(mimeType => {","    let ext = _mimeTypes2.default.extension(mimeType);","","    require.extensions[`.${ext}`] = (module, filename) => {","      var _compilerHost$compile = compilerHost.compileSync(filename);","","      let code = _compilerHost$compile.code;","","","      if (code === null) {","        console.error(`null code returned for \"${filename}\".  Please raise an issue on 'electron-compile' with the contents of this file.`);","      }","","      module._compile(code, filename);","    };","  });","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXF1aXJlLWhvb2suanMiXSwibmFtZXMiOlsicmVnaXN0ZXJSZXF1aXJlRXh0ZW5zaW9uIiwiSE1SIiwiZCIsInJlcXVpcmUiLCJlbGVjdHJvbiIsInByb2Nlc3MiLCJ0eXBlIiwid2luZG93IiwiX19ob3QiLCJyZW1vdGUiLCJnZXRHbG9iYWwiLCJpcGNSZW5kZXJlciIsIm9uIiwiY2FjaGUiLCJfY2FjaGUiLCJ0b0VqZWN0IiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsIngiLCJtYXRjaCIsImZvckVhY2giLCJmbiIsImNvbXBpbGVySG9zdCIsInByb3RvdHlwZSIsImhvdCIsImFjY2VwdCIsImNiIiwicHVzaCIsIm1haW4iLCJlIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZSIsImNvbXBpbGVyc0J5TWltZVR5cGUiLCJtaW1lVHlwZSIsImV4dCIsImV4dGVuc2lvbiIsImV4dGVuc2lvbnMiLCJtb2R1bGUiLCJmaWxlbmFtZSIsImNvbXBpbGVTeW5jIiwiY29kZSIsIl9jb21waWxlIl0sIm1hcHBpbmdzIjoiOzs7OztrQkFxQ3dCQSx3Qjs7QUFyQ3hCOzs7Ozs7QUFFQSxJQUFJQyxNQUFNLEtBQVY7O0FBRUEsTUFBTUMsSUFBSUMsUUFBUSxPQUFSLEVBQWlCLCtCQUFqQixDQUFWO0FBQ0EsSUFBSUMsV0FBVyxJQUFmOztBQUVBLElBQUlDLFFBQVFDLElBQVIsS0FBaUIsVUFBckIsRUFBaUM7QUFDL0JDLFNBQU9DLEtBQVAsR0FBZSxFQUFmO0FBQ0FKLGFBQVdELFFBQVEsVUFBUixDQUFYO0FBQ0FGLFFBQU1HLFNBQVNLLE1BQVQsQ0FBZ0JDLFNBQWhCLENBQTBCLGtDQUExQixDQUFOOztBQUVBLE1BQUlULEdBQUosRUFBUztBQUNQRyxhQUFTTyxXQUFULENBQXFCQyxFQUFyQixDQUF3Qix5QkFBeEIsRUFBbUQsTUFBTTtBQUN2RFYsUUFBRSxpQkFBRjs7QUFFQTtBQUNBLFVBQUlXLFFBQVFWLFFBQVEsUUFBUixFQUFrQlcsTUFBOUI7QUFDQSxVQUFJQyxVQUFVQyxPQUFPQyxJQUFQLENBQVlKLEtBQVosRUFBbUJLLE1BQW5CLENBQTBCQyxLQUFLQSxLQUFLLENBQUNBLEVBQUVDLEtBQUYsQ0FBUSxzQ0FBUixDQUFyQyxDQUFkO0FBQ0FMLGNBQVFNLE9BQVIsQ0FBZ0JGLEtBQUs7QUFDbkJqQixVQUFHLGtDQUFpQ2lCLENBQUUsRUFBdEM7QUFDQSxlQUFPTixNQUFNTSxDQUFOLENBQVA7QUFDRCxPQUhEOztBQUtBWixhQUFPQyxLQUFQLENBQWFhLE9BQWIsQ0FBcUJDLE1BQU1BLElBQTNCO0FBQ0QsS0FaRDtBQWFEO0FBQ0Y7O0FBRUQ7Ozs7Ozs7O0FBUWUsU0FBU3RCLHdCQUFULENBQWtDdUIsWUFBbEMsRUFBZ0Q7QUFDN0QsTUFBSXRCLEdBQUosRUFBUztBQUNQLFFBQUk7QUFDRkUsY0FBUSxRQUFSLEVBQWtCcUIsU0FBbEIsQ0FBNEJDLEdBQTVCLEdBQWtDO0FBQ2hDQyxnQkFBU0MsRUFBRCxJQUFRcEIsT0FBT0MsS0FBUCxDQUFhb0IsSUFBYixDQUFrQkQsRUFBbEI7QUFEZ0IsT0FBbEM7O0FBSUF4QixjQUFRMEIsSUFBUixDQUFhMUIsT0FBYixDQUFxQix3QkFBckI7QUFDRCxLQU5ELENBTUUsT0FBTzJCLENBQVAsRUFBVTtBQUNWQyxjQUFRQyxLQUFSLENBQWUsZ0dBQStGRixFQUFFRyxPQUFRLEVBQXhIO0FBQ0Q7QUFDRjs7QUFFRGpCLFNBQU9DLElBQVAsQ0FBWU0sYUFBYVcsbUJBQXpCLEVBQThDYixPQUE5QyxDQUF1RGMsUUFBRCxJQUFjO0FBQ2xFLFFBQUlDLE1BQU0sb0JBQVVDLFNBQVYsQ0FBb0JGLFFBQXBCLENBQVY7O0FBRUFoQyxZQUFRbUMsVUFBUixDQUFvQixJQUFHRixHQUFJLEVBQTNCLElBQWdDLENBQUNHLE1BQUQsRUFBU0MsUUFBVCxLQUFzQjtBQUFBLGtDQUN2Q2pCLGFBQWFrQixXQUFiLENBQXlCRCxRQUF6QixDQUR1Qzs7QUFBQSxVQUMvQ0UsSUFEK0MseUJBQy9DQSxJQUQrQzs7O0FBR3BELFVBQUlBLFNBQVMsSUFBYixFQUFtQjtBQUNqQlgsZ0JBQVFDLEtBQVIsQ0FBZSwyQkFBMEJRLFFBQVMsaUZBQWxEO0FBQ0Q7O0FBRURELGFBQU9JLFFBQVAsQ0FBZ0JELElBQWhCLEVBQXNCRixRQUF0QjtBQUNELEtBUkQ7QUFTRCxHQVpEO0FBYUQiLCJmaWxlIjoicmVxdWlyZS1ob29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1pbWVUeXBlcyBmcm9tICdAcGF1bGNiZXR0cy9taW1lLXR5cGVzJztcclxuXHJcbmxldCBITVIgPSBmYWxzZTtcclxuXHJcbmNvbnN0IGQgPSByZXF1aXJlKCdkZWJ1ZycpKCdlbGVjdHJvbi1jb21waWxlOnJlcXVpcmUtaG9vaycpO1xyXG5sZXQgZWxlY3Ryb24gPSBudWxsO1xyXG5cclxuaWYgKHByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xyXG4gIHdpbmRvdy5fX2hvdCA9IFtdO1xyXG4gIGVsZWN0cm9uID0gcmVxdWlyZSgnZWxlY3Ryb24nKTtcclxuICBITVIgPSBlbGVjdHJvbi5yZW1vdGUuZ2V0R2xvYmFsKCdfX2VsZWN0cm9uX2NvbXBpbGVfaG1yX2VuYWJsZWRfXycpO1xyXG5cclxuICBpZiAoSE1SKSB7XHJcbiAgICBlbGVjdHJvbi5pcGNSZW5kZXJlci5vbignX19lbGVjdHJvbi1jb21waWxlX19ITVInLCAoKSA9PiB7XHJcbiAgICAgIGQoXCJHb3QgSE1SIHNpZ25hbCFcIik7XHJcblxyXG4gICAgICAvLyBSZXNldCB0aGUgbW9kdWxlIGNhY2hlXHJcbiAgICAgIGxldCBjYWNoZSA9IHJlcXVpcmUoJ21vZHVsZScpLl9jYWNoZTtcclxuICAgICAgbGV0IHRvRWplY3QgPSBPYmplY3Qua2V5cyhjYWNoZSkuZmlsdGVyKHggPT4geCAmJiAheC5tYXRjaCgvW1xcXFxcXC9dKG5vZGVfbW9kdWxlc3wuKlxcLmFzYXIpW1xcXFxcXC9dL2kpKTtcclxuICAgICAgdG9FamVjdC5mb3JFYWNoKHggPT4ge1xyXG4gICAgICAgIGQoYFJlbW92aW5nIG5vZGUgbW9kdWxlIGVudHJ5IGZvciAke3h9YCk7XHJcbiAgICAgICAgZGVsZXRlIGNhY2hlW3hdO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHdpbmRvdy5fX2hvdC5mb3JFYWNoKGZuID0+IGZuKCkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogSW5pdGlhbGl6ZXMgdGhlIG5vZGUuanMgaG9vayB0aGF0IGFsbG93cyB1cyB0byBpbnRlcmNlcHQgZmlsZXMgbG9hZGVkIGJ5XHJcbiAqIG5vZGUuanMgYW5kIHJld3JpdGUgdGhlbS4gVGhpcyBtZXRob2QgYWxvbmcgd2l0aCB7QGxpbmsgaW5pdGlhbGl6ZVByb3RvY29sSG9va31cclxuICogYXJlIHRoZSB0b3AtbGV2ZWwgbWV0aG9kcyB0aGF0IGVsZWN0cm9uLWNvbXBpbGUgYWN0dWFsbHkgdXNlcyB0byBpbnRlcmNlcHRcclxuICogY29kZSB0aGF0IEVsZWN0cm9uIGxvYWRzLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtDb21waWxlckhvc3R9IGNvbXBpbGVySG9zdCAgVGhlIGNvbXBpbGVyIGhvc3QgdG8gdXNlIGZvciBjb21waWxhdGlvbi5cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlZ2lzdGVyUmVxdWlyZUV4dGVuc2lvbihjb21waWxlckhvc3QpIHtcclxuICBpZiAoSE1SKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXF1aXJlKCdtb2R1bGUnKS5wcm90b3R5cGUuaG90ID0ge1xyXG4gICAgICAgIGFjY2VwdDogKGNiKSA9PiB3aW5kb3cuX19ob3QucHVzaChjYilcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHJlcXVpcmUubWFpbi5yZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyL3BhdGNoJyk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoYENvdWxkbid0IHJlcXVpcmUgcmVhY3QtaG90LWxvYWRlci9wYXRjaCwgeW91IG5lZWQgdG8gYWRkIHJlYWN0LWhvdC1sb2FkZXJAMyBhcyBhIGRlcGVuZGVuY3khICR7ZS5tZXNzYWdlfWApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgT2JqZWN0LmtleXMoY29tcGlsZXJIb3N0LmNvbXBpbGVyc0J5TWltZVR5cGUpLmZvckVhY2goKG1pbWVUeXBlKSA9PiB7XHJcbiAgICBsZXQgZXh0ID0gbWltZVR5cGVzLmV4dGVuc2lvbihtaW1lVHlwZSk7XHJcblxyXG4gICAgcmVxdWlyZS5leHRlbnNpb25zW2AuJHtleHR9YF0gPSAobW9kdWxlLCBmaWxlbmFtZSkgPT4ge1xyXG4gICAgICBsZXQge2NvZGV9ID0gY29tcGlsZXJIb3N0LmNvbXBpbGVTeW5jKGZpbGVuYW1lKTtcclxuXHJcbiAgICAgIGlmIChjb2RlID09PSBudWxsKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihgbnVsbCBjb2RlIHJldHVybmVkIGZvciBcIiR7ZmlsZW5hbWV9XCIuICBQbGVhc2UgcmFpc2UgYW4gaXNzdWUgb24gJ2VsZWN0cm9uLWNvbXBpbGUnIHdpdGggdGhlIGNvbnRlbnRzIG9mIHRoaXMgZmlsZS5gKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgbW9kdWxlLl9jb21waWxlKGNvZGUsIGZpbGVuYW1lKTtcclxuICAgIH07XHJcbiAgfSk7XHJcbn1cclxuIl19"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"17":1,"19":1,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"29":0,"30":0,"31":0,"32":0,"33":0,"36":0,"49":1,"50":0,"51":0,"52":0,"53":0,"56":0,"58":0,"62":0,"63":0,"65":0,"66":0,"68":0,"71":0,"72":0,"75":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/protocol-hook.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/protocol-hook.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":4,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":1,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},"b":{"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}}},"2":{"name":"_asyncToGenerator","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":31}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":40},"end":{"line":28,"column":52}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":110},"end":{"line":28,"column":137}}},"5":{"name":"step","line":28,"loc":{"start":{"line":28,"column":139},"end":{"line":28,"column":163}}},"6":{"name":"(anonymous_6)","line":28,"loc":{"start":{"line":28,"column":341},"end":{"line":28,"column":358}}},"7":{"name":"(anonymous_7)","line":28,"loc":{"start":{"line":28,"column":384},"end":{"line":28,"column":399}}},"8":{"name":"doesMapFileExist","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"9":{"name":"rigHtmlDocumentToInitializeElectronCompile","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":57}}},"10":{"name":"requestFileJob","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":42}}},"11":{"name":"addBypassChecker","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":41}}},"12":{"name":"initializeProtocolHook","line":127,"loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":46}}},"13":{"name":"(anonymous_13)","line":136,"loc":{"start":{"line":136,"column":33},"end":{"line":136,"column":61}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":50},"end":{"line":172,"column":75}}},"15":{"name":"(anonymous_15)","line":240,"loc":{"start":{"line":240,"column":11},"end":{"line":240,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":96}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":24}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":51}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"14":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":458}},"16":{"start":{"line":28,"column":33},"end":{"line":28,"column":456}},"17":{"start":{"line":28,"column":54},"end":{"line":28,"column":90}},"18":{"start":{"line":28,"column":91},"end":{"line":28,"column":453}},"19":{"start":{"line":28,"column":139},"end":{"line":28,"column":428}},"20":{"start":{"line":28,"column":165},"end":{"line":28,"column":263}},"21":{"start":{"line":28,"column":171},"end":{"line":28,"column":196}},"22":{"start":{"line":28,"column":197},"end":{"line":28,"column":220}},"23":{"start":{"line":28,"column":239},"end":{"line":28,"column":253}},"24":{"start":{"line":28,"column":254},"end":{"line":28,"column":261}},"25":{"start":{"line":28,"column":264},"end":{"line":28,"column":426}},"26":{"start":{"line":28,"column":281},"end":{"line":28,"column":296}},"27":{"start":{"line":28,"column":306},"end":{"line":28,"column":424}},"28":{"start":{"line":28,"column":360},"end":{"line":28,"column":380}},"29":{"start":{"line":28,"column":401},"end":{"line":28,"column":420}},"30":{"start":{"line":28,"column":429},"end":{"line":28,"column":449}},"31":{"start":{"line":30,"column":0},"end":{"line":30,"column":67}},"32":{"start":{"line":34,"column":0},"end":{"line":34,"column":71}},"33":{"start":{"line":35,"column":0},"end":{"line":35,"column":67}},"34":{"start":{"line":37,"column":0},"end":{"line":37,"column":61}},"35":{"start":{"line":39,"column":0},"end":{"line":39,"column":20}},"36":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}},"37":{"start":{"line":42,"column":0},"end":{"line":54,"column":1}},"38":{"start":{"line":43,"column":2},"end":{"line":43,"column":39}},"39":{"start":{"line":44,"column":2},"end":{"line":44,"column":53}},"40":{"start":{"line":44,"column":25},"end":{"line":44,"column":53}},"41":{"start":{"line":46,"column":2},"end":{"line":53,"column":5}},"42":{"start":{"line":47,"column":4},"end":{"line":52,"column":7}},"43":{"start":{"line":48,"column":6},"end":{"line":48,"column":29}},"44":{"start":{"line":50,"column":6},"end":{"line":50,"column":42}},"45":{"start":{"line":51,"column":6},"end":{"line":51,"column":19}},"46":{"start":{"line":61,"column":0},"end":{"line":85,"column":1}},"47":{"start":{"line":62,"column":2},"end":{"line":62,"column":30}},"48":{"start":{"line":63,"column":2},"end":{"line":63,"column":66}},"49":{"start":{"line":64,"column":2},"end":{"line":64,"column":27}},"50":{"start":{"line":66,"column":2},"end":{"line":72,"column":3}},"51":{"start":{"line":67,"column":4},"end":{"line":67,"column":45}},"52":{"start":{"line":67,"column":36},"end":{"line":67,"column":45}},"53":{"start":{"line":69,"column":4},"end":{"line":69,"column":56}},"54":{"start":{"line":70,"column":4},"end":{"line":70,"column":24}},"55":{"start":{"line":71,"column":4},"end":{"line":71,"column":10}},"56":{"start":{"line":74,"column":2},"end":{"line":82,"column":3}},"57":{"start":{"line":75,"column":4},"end":{"line":75,"column":79}},"58":{"start":{"line":76,"column":4},"end":{"line":81,"column":5}},"59":{"start":{"line":77,"column":6},"end":{"line":77,"column":46}},"60":{"start":{"line":77,"column":37},"end":{"line":77,"column":46}},"61":{"start":{"line":79,"column":6},"end":{"line":79,"column":65}},"62":{"start":{"line":80,"column":6},"end":{"line":80,"column":12}},"63":{"start":{"line":84,"column":2},"end":{"line":84,"column":26}},"64":{"start":{"line":87,"column":0},"end":{"line":104,"column":1}},"65":{"start":{"line":88,"column":2},"end":{"line":103,"column":5}},"66":{"start":{"line":89,"column":4},"end":{"line":97,"column":5}},"67":{"start":{"line":90,"column":6},"end":{"line":96,"column":7}},"68":{"start":{"line":91,"column":8},"end":{"line":91,"column":19}},"69":{"start":{"line":92,"column":8},"end":{"line":92,"column":15}},"70":{"start":{"line":94,"column":8},"end":{"line":94,"column":19}},"71":{"start":{"line":95,"column":8},"end":{"line":95,"column":15}},"72":{"start":{"line":99,"column":4},"end":{"line":102,"column":7}},"73":{"start":{"line":106,"column":0},"end":{"line":106,"column":26}},"74":{"start":{"line":115,"column":0},"end":{"line":117,"column":1}},"75":{"start":{"line":116,"column":2},"end":{"line":116,"column":37}},"76":{"start":{"line":127,"column":0},"end":{"line":244,"column":1}},"77":{"start":{"line":128,"column":2},"end":{"line":128,"column":54}},"78":{"start":{"line":130,"column":2},"end":{"line":130,"column":65}},"79":{"start":{"line":131,"column":2},"end":{"line":131,"column":58}},"80":{"start":{"line":133,"column":2},"end":{"line":133,"column":166}},"81":{"start":{"line":135,"column":2},"end":{"line":243,"column":8}},"82":{"start":{"line":136,"column":4},"end":{"line":238,"column":7}},"83":{"start":{"line":137,"column":6},"end":{"line":137,"column":49}},"84":{"start":{"line":139,"column":6},"end":{"line":139,"column":43}},"85":{"start":{"line":140,"column":6},"end":{"line":147,"column":7}},"86":{"start":{"line":141,"column":8},"end":{"line":144,"column":11}},"87":{"start":{"line":146,"column":8},"end":{"line":146,"column":15}},"88":{"start":{"line":151,"column":6},"end":{"line":157,"column":7}},"89":{"start":{"line":154,"column":8},"end":{"line":154,"column":72}},"90":{"start":{"line":155,"column":8},"end":{"line":155,"column":19}},"91":{"start":{"line":156,"column":8},"end":{"line":156,"column":15}},"92":{"start":{"line":159,"column":6},"end":{"line":159,"column":54}},"93":{"start":{"line":162,"column":6},"end":{"line":164,"column":7}},"94":{"start":{"line":163,"column":8},"end":{"line":163,"column":37}},"95":{"start":{"line":167,"column":6},"end":{"line":193,"column":7}},"96":{"start":{"line":170,"column":8},"end":{"line":189,"column":9}},"97":{"start":{"line":171,"column":10},"end":{"line":171,"column":36}},"98":{"start":{"line":172,"column":10},"end":{"line":186,"column":13}},"99":{"start":{"line":173,"column":12},"end":{"line":181,"column":13}},"100":{"start":{"line":174,"column":14},"end":{"line":180,"column":15}},"101":{"start":{"line":175,"column":16},"end":{"line":175,"column":27}},"102":{"start":{"line":176,"column":16},"end":{"line":176,"column":23}},"103":{"start":{"line":178,"column":16},"end":{"line":178,"column":27}},"104":{"start":{"line":179,"column":16},"end":{"line":179,"column":23}},"105":{"start":{"line":183,"column":12},"end":{"line":183,"column":82}},"106":{"start":{"line":184,"column":12},"end":{"line":184,"column":80}},"107":{"start":{"line":185,"column":12},"end":{"line":185,"column":19}},"108":{"start":{"line":188,"column":10},"end":{"line":188,"column":17}},"109":{"start":{"line":191,"column":8},"end":{"line":191,"column":41}},"110":{"start":{"line":192,"column":8},"end":{"line":192,"column":15}},"111":{"start":{"line":199,"column":6},"end":{"line":202,"column":7}},"112":{"start":{"line":200,"column":8},"end":{"line":200,"column":73}},"113":{"start":{"line":201,"column":8},"end":{"line":201,"column":15}},"114":{"start":{"line":204,"column":6},"end":{"line":210,"column":7}},"115":{"start":{"line":205,"column":8},"end":{"line":209,"column":9}},"116":{"start":{"line":206,"column":10},"end":{"line":206,"column":50}},"117":{"start":{"line":207,"column":10},"end":{"line":207,"column":43}},"118":{"start":{"line":208,"column":10},"end":{"line":208,"column":17}},"119":{"start":{"line":212,"column":6},"end":{"line":237,"column":7}},"120":{"start":{"line":213,"column":8},"end":{"line":213,"column":58}},"121":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"122":{"start":{"line":216,"column":10},"end":{"line":216,"column":80}},"123":{"start":{"line":219,"column":8},"end":{"line":225,"column":9}},"124":{"start":{"line":220,"column":10},"end":{"line":220,"column":88}},"125":{"start":{"line":221,"column":10},"end":{"line":221,"column":17}},"126":{"start":{"line":223,"column":10},"end":{"line":223,"column":79}},"127":{"start":{"line":224,"column":10},"end":{"line":224,"column":17}},"128":{"start":{"line":227,"column":8},"end":{"line":227,"column":76}},"129":{"start":{"line":228,"column":8},"end":{"line":228,"column":15}},"130":{"start":{"line":230,"column":8},"end":{"line":233,"column":11}},"131":{"start":{"line":231,"column":12},"end":{"line":231,"column":23}},"132":{"start":{"line":232,"column":12},"end":{"line":232,"column":19}},"133":{"start":{"line":235,"column":8},"end":{"line":235,"column":66}},"134":{"start":{"line":236,"column":8},"end":{"line":236,"column":15}},"135":{"start":{"line":240,"column":4},"end":{"line":242,"column":6}},"136":{"start":{"line":241,"column":6},"end":{"line":241,"column":41}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":264},"end":{"line":28,"column":264}},{"start":{"line":28,"column":264},"end":{"line":28,"column":264}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"5":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":19},"end":{"line":48,"column":22}},{"start":{"line":48,"column":26},"end":{"line":48,"column":28}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"11":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":16},"end":{"line":101,"column":52}},{"start":{"line":101,"column":56},"end":{"line":101,"column":68}}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":13},"end":{"line":128,"column":21}},{"start":{"line":128,"column":25},"end":{"line":128,"column":53}}]},"13":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"14":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"15":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":10},"end":{"line":151,"column":18}},{"start":{"line":151,"column":22},"end":{"line":151,"column":41}}]},"16":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":6}},{"start":{"line":162,"column":6},"end":{"line":162,"column":6}}]},"17":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"18":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":10},"end":{"line":167,"column":54}},{"start":{"line":167,"column":58},"end":{"line":167,"column":113}}]},"19":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"20":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":12}},{"start":{"line":173,"column":12},"end":{"line":173,"column":12}}]},"21":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":14},"end":{"line":174,"column":14}},{"start":{"line":174,"column":14},"end":{"line":174,"column":14}}]},"22":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"23":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":35}},{"start":{"line":199,"column":39},"end":{"line":199,"column":74}}]},"24":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"25":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8}},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"26":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":8}},{"start":{"line":219,"column":8},"end":{"line":219,"column":8}}]},"27":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":12},"end":{"line":219,"column":29}},{"start":{"line":219,"column":33},"end":{"line":219,"column":62}}]},"28":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":25},"end":{"line":220,"column":42}},{"start":{"line":220,"column":46},"end":{"line":220,"column":57}}]},"29":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":8}},{"start":{"line":230,"column":8},"end":{"line":230,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.rigHtmlDocumentToInitializeElectronCompile = rigHtmlDocumentToInitializeElectronCompile;","exports.addBypassChecker = addBypassChecker;","exports.initializeProtocolHook = initializeProtocolHook;","","var _url = require('url');","","var _url2 = _interopRequireDefault(_url);","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _mimeTypes = require('@paulcbetts/mime-types');","","var _mimeTypes2 = _interopRequireDefault(_mimeTypes);","","var _lruCache = require('lru-cache');","","var _lruCache2 = _interopRequireDefault(_lruCache);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","const magicWords = \"__magic__file__to__help__electron__compile.js\";","","// NB: These are duped in initialize-renderer so we can save startup time, make","// sure to run both!","const magicGlobalForRootCacheDir = '__electron_compile_root_cache_dir';","const magicGlobalForAppRootDir = '__electron_compile_app_root_dir';","","const d = require('debug')('electron-compile:protocol-hook');","","let protocol = null;","","const mapStatCache = new _lruCache2.default({ length: 512 });","function doesMapFileExist(filePath) {","  let ret = mapStatCache.get(filePath);","  if (ret !== undefined) return Promise.resolve(ret);","","  return new Promise(res => {","    _fs2.default.lstat(filePath, (err, s) => {","      let failed = err || !s;","","      mapStatCache.set(filePath, !failed);","      res(!failed);","    });","  });","}","","/**"," * Adds our script header to the top of all HTML files"," *"," * @private"," */","function rigHtmlDocumentToInitializeElectronCompile(doc) {","  let lines = doc.split(\"\\n\");","  let replacement = `<head><script src=\"${magicWords}\"></script>`;","  let replacedHead = false;","","  for (let i = 0; i < lines.length; i++) {","    if (!lines[i].match(/<head>/i)) continue;","","    lines[i] = lines[i].replace(/<head>/i, replacement);","    replacedHead = true;","    break;","  }","","  if (!replacedHead) {","    replacement = `<html$1><head><script src=\"${magicWords}\"></script></head>`;","    for (let i = 0; i < lines.length; i++) {","      if (!lines[i].match(/<html/i)) continue;","","      lines[i] = lines[i].replace(/<html([^>]+)>/i, replacement);","      break;","    }","  }","","  return lines.join(\"\\n\");","}","","function requestFileJob(filePath, finish) {","  _fs2.default.readFile(filePath, (err, buf) => {","    if (err) {","      if (err.errno === 34) {","        finish(-6); // net::ERR_FILE_NOT_FOUND","        return;","      } else {","        finish(-2); // net::FAILED","        return;","      }","    }","","    finish({","      data: buf,","      mimeType: _mimeTypes2.default.lookup(filePath) || 'text/plain'","    });","  });","}","","const bypassCheckers = [];","","/**"," * Adds a function that will be called on electron-compile's protocol hook"," * used to intercept file requests.  Use this to bypass electron-compile"," * entirely for certain URI's."," * "," * @param {Function} bypassChecker Function that will be called with the file path to determine whether to bypass or not"," */","function addBypassChecker(bypassChecker) {","  bypassCheckers.push(bypassChecker);","}","","/**"," * Initializes the protocol hook on file: that allows us to intercept files"," * loaded by Chromium and rewrite them. This method along with"," * {@link registerRequireExtension} are the top-level methods that electron-compile"," * actually uses to intercept code that Electron loads."," *"," * @param  {CompilerHost} compilerHost  The compiler host to use for compilation."," */","function initializeProtocolHook(compilerHost) {","  protocol = protocol || require('electron').protocol;","","  global[magicGlobalForRootCacheDir] = compilerHost.rootCacheDir;","  global[magicGlobalForAppRootDir] = compilerHost.appRoot;","","  const electronCompileSetupCode = `if (window.require) require('electron-compile/lib/initialize-renderer').initializeRendererProcess(${compilerHost.readOnlyMode});`;","","  protocol.interceptBufferProtocol('file', (() => {","    var _ref = _asyncToGenerator(function* (request, finish) {","      let uri = _url2.default.parse(request.url);","","      d(`Intercepting url ${request.url}`);","      if (request.url.indexOf(magicWords) > -1) {","        finish({","          mimeType: 'application/javascript',","          data: new Buffer(electronCompileSetupCode, 'utf8')","        });","","        return;","      }","","      // This is a protocol-relative URL that has gone pear-shaped in Electron,","      // let's rewrite it","      if (uri.host && uri.host.length > 1) {","        //let newUri = request.url.replace(/^file:/, \"https:\");","        // TODO: Jump off this bridge later","        d(`TODO: Found bogus protocol-relative URL, can't fix it up!!`);","        finish(-2);","        return;","      }","","      let filePath = decodeURIComponent(uri.pathname);","","      // NB: pathname has a leading '/' on Win32 for some reason","      if (process.platform === 'win32') {","        filePath = filePath.slice(1);","      }","","      // NB: Special-case files coming from atom.asar or node_modules","      if (filePath.match(/[\\/\\\\](atom|electron).asar/) || filePath.match(/[\\/\\\\](node_modules|bower_components)/)) {","        // NBs on NBs: If we're loading an HTML file from node_modules, we still have","        // to do the HTML document rigging","        if (filePath.match(/\\.html?$/i)) {","          let riggedContents = null;","          _fs2.default.readFile(filePath, 'utf8', function (err, contents) {","            if (err) {","              if (err.errno === 34) {","                finish(-6); // net::ERR_FILE_NOT_FOUND","                return;","              } else {","                finish(-2); // net::FAILED","                return;","              }","            }","","            riggedContents = rigHtmlDocumentToInitializeElectronCompile(contents);","            finish({ data: new Buffer(riggedContents), mimeType: 'text/html' });","            return;","          });","","          return;","        }","","        requestFileJob(filePath, finish);","        return;","      }","","      // NB: Chromium will somehow decide that external source map references","      // aren't relative to the file that was loaded for node.js modules, but","      // relative to the HTML file. Since we can't really figure out what the","      // real path is, we just need to squelch it.","      if (filePath.match(/\\.map$/i) && !(yield doesMapFileExist(filePath))) {","        finish({ data: new Buffer(\"\", 'utf8'), mimeType: 'text/plain' });","        return;","      }","","      for (const bypassChecker of bypassCheckers) {","        if (bypassChecker(filePath)) {","          d('bypassing compilers for:', filePath);","          requestFileJob(filePath, finish);","          return;","        }","      }","","      try {","        let result = yield compilerHost.compile(filePath);","","        if (result.mimeType === 'text/html') {","          result.code = rigHtmlDocumentToInitializeElectronCompile(result.code);","        }","","        if (result.binaryData || result.code instanceof Buffer) {","          finish({ data: result.binaryData || result.code, mimeType: result.mimeType });","          return;","        } else {","          finish({ data: new Buffer(result.code), mimeType: result.mimeType });","          return;","        }","      } catch (e) {","        let err = `Failed to compile ${filePath}: ${e.message}\\n${e.stack}`;","        d(err);","","        if (e.errno === 34 /*ENOENT*/) {","            finish(-6); // net::ERR_FILE_NOT_FOUND","            return;","          }","","        finish({ mimeType: 'text/plain', data: new Buffer(err) });","        return;","      }","    });","","    return function (_x, _x2) {","      return _ref.apply(this, arguments);","    };","  })());","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"l":{"3":1,"6":1,"7":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":4,"28":1,"30":1,"34":1,"35":1,"37":1,"39":1,"41":1,"42":1,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"51":0,"61":1,"62":0,"63":0,"64":0,"66":0,"67":0,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"84":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"99":0,"106":1,"115":1,"116":0,"127":1,"128":0,"130":0,"131":0,"133":0,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"146":0,"151":0,"154":0,"155":0,"156":0,"159":0,"162":0,"163":0,"167":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"178":0,"179":0,"183":0,"184":0,"185":0,"188":0,"191":0,"192":0,"199":0,"200":0,"201":0,"204":0,"205":0,"206":0,"207":0,"208":0,"212":0,"213":0,"215":0,"216":0,"219":0,"220":0,"221":0,"223":0,"224":0,"227":0,"228":0,"230":0,"231":0,"232":0,"235":0,"236":0,"240":0,"241":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/cli.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":2,"46":1,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":1,"66":0,"67":0,"68":1,"69":1,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,2],"7":[2,2],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,1],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":2,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":31},"end":{"line":10,"column":86}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":52}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":38},"end":{"line":42,"column":52}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":30}}},"5":{"name":"main","line":64,"loc":{"start":{"line":64,"column":9},"end":{"line":64,"column":42}}},"6":{"name":"_interopRequireDefault","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":37}}},"7":{"name":"_asyncToGenerator","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":31}}},"8":{"name":"(anonymous_8)","line":83,"loc":{"start":{"line":83,"column":40},"end":{"line":83,"column":52}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":110},"end":{"line":83,"column":137}}},"10":{"name":"step","line":83,"loc":{"start":{"line":83,"column":139},"end":{"line":83,"column":163}}},"11":{"name":"(anonymous_11)","line":83,"loc":{"start":{"line":83,"column":341},"end":{"line":83,"column":358}}},"12":{"name":"(anonymous_12)","line":83,"loc":{"start":{"line":83,"column":384},"end":{"line":83,"column":399}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":6,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"3":{"start":{"line":9,"column":0},"end":{"line":67,"column":5}},"4":{"start":{"line":10,"column":2},"end":{"line":62,"column":5}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"6":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"7":{"start":{"line":13,"column":6},"end":{"line":13,"column":26}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":61}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":40}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"11":{"start":{"line":20,"column":4},"end":{"line":24,"column":5}},"12":{"start":{"line":21,"column":6},"end":{"line":21,"column":57}},"13":{"start":{"line":22,"column":6},"end":{"line":22,"column":70}},"14":{"start":{"line":23,"column":6},"end":{"line":23,"column":36}},"15":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"16":{"start":{"line":27,"column":6},"end":{"line":27,"column":79}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":56}},"18":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"19":{"start":{"line":32,"column":6},"end":{"line":32,"column":116}},"20":{"start":{"line":34,"column":6},"end":{"line":34,"column":63}},"21":{"start":{"line":35,"column":6},"end":{"line":35,"column":17}},"22":{"start":{"line":37,"column":6},"end":{"line":37,"column":14}},"23":{"start":{"line":40,"column":4},"end":{"line":58,"column":8}},"24":{"start":{"line":41,"column":6},"end":{"line":57,"column":12}},"25":{"start":{"line":42,"column":8},"end":{"line":52,"column":11}},"26":{"start":{"line":43,"column":10},"end":{"line":51,"column":11}},"27":{"start":{"line":44,"column":12},"end":{"line":44,"column":47}},"28":{"start":{"line":45,"column":12},"end":{"line":45,"column":42}},"29":{"start":{"line":47,"column":12},"end":{"line":47,"column":58}},"30":{"start":{"line":48,"column":12},"end":{"line":48,"column":37}},"31":{"start":{"line":50,"column":12},"end":{"line":50,"column":23}},"32":{"start":{"line":54,"column":8},"end":{"line":56,"column":10}},"33":{"start":{"line":55,"column":10},"end":{"line":55,"column":46}},"34":{"start":{"line":60,"column":4},"end":{"line":60,"column":34}},"35":{"start":{"line":61,"column":4},"end":{"line":61,"column":43}},"36":{"start":{"line":64,"column":2},"end":{"line":66,"column":4}},"37":{"start":{"line":65,"column":4},"end":{"line":65,"column":39}},"38":{"start":{"line":69,"column":0},"end":{"line":69,"column":28}},"39":{"start":{"line":71,"column":0},"end":{"line":71,"column":43}},"40":{"start":{"line":73,"column":0},"end":{"line":73,"column":32}},"41":{"start":{"line":75,"column":0},"end":{"line":75,"column":47}},"42":{"start":{"line":77,"column":0},"end":{"line":77,"column":47}},"43":{"start":{"line":79,"column":0},"end":{"line":79,"column":46}},"44":{"start":{"line":81,"column":0},"end":{"line":81,"column":95}},"45":{"start":{"line":81,"column":39},"end":{"line":81,"column":93}},"46":{"start":{"line":83,"column":0},"end":{"line":83,"column":458}},"47":{"start":{"line":83,"column":33},"end":{"line":83,"column":456}},"48":{"start":{"line":83,"column":54},"end":{"line":83,"column":90}},"49":{"start":{"line":83,"column":91},"end":{"line":83,"column":453}},"50":{"start":{"line":83,"column":139},"end":{"line":83,"column":428}},"51":{"start":{"line":83,"column":165},"end":{"line":83,"column":263}},"52":{"start":{"line":83,"column":171},"end":{"line":83,"column":196}},"53":{"start":{"line":83,"column":197},"end":{"line":83,"column":220}},"54":{"start":{"line":83,"column":239},"end":{"line":83,"column":253}},"55":{"start":{"line":83,"column":254},"end":{"line":83,"column":261}},"56":{"start":{"line":83,"column":264},"end":{"line":83,"column":426}},"57":{"start":{"line":83,"column":281},"end":{"line":83,"column":296}},"58":{"start":{"line":83,"column":306},"end":{"line":83,"column":424}},"59":{"start":{"line":83,"column":360},"end":{"line":83,"column":380}},"60":{"start":{"line":83,"column":401},"end":{"line":83,"column":420}},"61":{"start":{"line":83,"column":429},"end":{"line":83,"column":449}},"62":{"start":{"line":85,"column":0},"end":{"line":88,"column":3}},"63":{"start":{"line":86,"column":2},"end":{"line":86,"column":20}},"64":{"start":{"line":87,"column":2},"end":{"line":87,"column":19}},"65":{"start":{"line":90,"column":0},"end":{"line":93,"column":3}},"66":{"start":{"line":91,"column":2},"end":{"line":91,"column":20}},"67":{"start":{"line":92,"column":2},"end":{"line":92,"column":19}},"68":{"start":{"line":95,"column":0},"end":{"line":95,"column":47}},"69":{"start":{"line":97,"column":0},"end":{"line":97,"column":520}},"70":{"start":{"line":99,"column":0},"end":{"line":119,"column":1}},"71":{"start":{"line":100,"column":2},"end":{"line":100,"column":26}},"72":{"start":{"line":102,"column":2},"end":{"line":105,"column":3}},"73":{"start":{"line":103,"column":4},"end":{"line":103,"column":21}},"74":{"start":{"line":104,"column":4},"end":{"line":104,"column":21}},"75":{"start":{"line":107,"column":2},"end":{"line":107,"column":28}},"76":{"start":{"line":108,"column":2},"end":{"line":108,"column":24}},"77":{"start":{"line":109,"column":2},"end":{"line":109,"column":26}},"78":{"start":{"line":110,"column":2},"end":{"line":110,"column":30}},"79":{"start":{"line":112,"column":2},"end":{"line":118,"column":5}},"80":{"start":{"line":112,"column":62},"end":{"line":112,"column":77}},"81":{"start":{"line":113,"column":4},"end":{"line":113,"column":34}},"82":{"start":{"line":114,"column":4},"end":{"line":114,"column":15}},"83":{"start":{"line":116,"column":4},"end":{"line":116,"column":107}},"84":{"start":{"line":117,"column":4},"end":{"line":117,"column":21}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":8},"end":{"line":12,"column":17}},{"start":{"line":12,"column":21},"end":{"line":12,"column":40}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":38},"end":{"line":27,"column":58}},{"start":{"line":27,"column":62},"end":{"line":27,"column":75}}]},"6":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":70},"end":{"line":81,"column":73}},{"start":{"line":81,"column":76},"end":{"line":81,"column":92}}]},"7":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":46},"end":{"line":81,"column":49}},{"start":{"line":81,"column":53},"end":{"line":81,"column":67}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":264},"end":{"line":83,"column":264}},{"start":{"line":83,"column":264},"end":{"line":83,"column":264}}]},"9":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":13}},{"start":{"line":86,"column":17},"end":{"line":86,"column":18}}]},"10":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":11}},{"start":{"line":87,"column":15},"end":{"line":87,"column":17}}]},"11":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":13}},{"start":{"line":91,"column":17},"end":{"line":91,"column":18}}]},"12":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":11}},{"start":{"line":92,"column":15},"end":{"line":92,"column":17}}]},"13":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":0},"end":{"line":99,"column":0}},{"start":{"line":99,"column":0},"end":{"line":99,"column":0}}]},"14":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"15":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":13}},{"start":{"line":102,"column":17},"end":{"line":102,"column":34}}]},"16":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":18},"end":{"line":113,"column":27}},{"start":{"line":113,"column":31},"end":{"line":113,"column":32}}]}},"code":["//#!/usr/bin/env node","'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.main = undefined;","","let main = exports.main = (() => {","  var _ref = _asyncToGenerator(function* (appDir, sourceDirs, cacheDir, sourceMapDir) {","    let compilerHost = null;","    if (!cacheDir || cacheDir.length < 1) {","      cacheDir = '.cache';","    }","","    let rootCacheDir = _path2.default.join(appDir, cacheDir);","    _mkdirp2.default.sync(rootCacheDir);","    let mapDir = rootCacheDir;","","    if (sourceMapDir) {","      mapDir = _path2.default.join(appDir, sourceMapDir);","      d(`specifed separate source map dir at ${mapDir}, creating it`);","      _mkdirp2.default.sync(mapDir);","    }","","    if (process.env.NODE_ENV !== 'production') {","      console.log(`Using NODE_ENV = ${process.env.NODE_ENV || 'development'}`);","    }","","    d(`main: ${appDir}, ${JSON.stringify(sourceDirs)}`);","    try {","      compilerHost = yield (0, _configParser.createCompilerHostFromProjectRoot)(appDir, rootCacheDir, sourceMapDir);","    } catch (e) {","      console.error(`Couldn't set up compilers: ${e.message}`);","      d(e.stack);","","      throw e;","    }","","    yield Promise.all(sourceDirs.map(function (dir) {","      return (0, _forAllFiles.forAllFiles)(dir, (() => {","        var _ref2 = _asyncToGenerator(function* (f) {","          try {","            d(`Starting compilation for ${f}`);","            yield compilerHost.compile(f);","          } catch (e) {","            console.error(`Failed to compile file: ${f}`);","            console.error(e.message);","","            d(e.stack);","          }","        });","","        return function (_x5) {","          return _ref2.apply(this, arguments);","        };","      })());","    }));","","    d('Saving out configuration');","    yield compilerHost.saveConfiguration();","  });","","  return function main(_x, _x2, _x3, _x4) {","    return _ref.apply(this, arguments);","  };","})();","","var _path = require('path');","","var _path2 = _interopRequireDefault(_path);","","var _mkdirp = require('mkdirp');","","var _mkdirp2 = _interopRequireDefault(_mkdirp);","","var _configParser = require('./config-parser');","","var _forAllFiles = require('./for-all-files');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","process.on('unhandledRejection', e => {","  d(e.message || e);","  d(e.stack || '');","});","","process.on('uncaughtException', e => {","  d(e.message || e);","  d(e.stack || '');","});","","const d = require('debug')('electron-compile');","","const yargs = require('yargs').usage('Usage: electron-compile --appdir [root-app-dir] paths...').alias('a', 'appdir').describe('a', 'The top-level application directory (i.e. where your package.json is)').default('a', process.cwd()).alias('c', 'cachedir').describe('c', 'The directory to put the cache').alias('s', 'sourcemapdir').describe('s', 'The directory to store sourcemap if compiler configured to have sourcemap file. Default to cachedir if not specified.').help('h').alias('h', 'help').epilog('Copyright 2015');","","if (process.mainModule === module) {","  const argv = yargs.argv;","","  if (!argv._ || argv._.length < 1) {","    yargs.showHelp();","    process.exit(-1);","  }","","  const sourceDirs = argv._;","  const appDir = argv.a;","  const cacheDir = argv.c;","  const sourceMapDir = argv.s;","","  main(appDir, sourceDirs, cacheDir, sourceMapDir).then(() => process.exit(0)).catch(e => {","    console.error(e.message || e);","    d(e.stack);","","    console.error(\"Compilation failed!\\nFor extra information, set the DEBUG environment variable to '*'\");","    process.exit(-1);","  });","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"l":{"4":1,"7":1,"9":1,"10":1,"11":0,"12":0,"13":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"50":0,"54":0,"55":0,"60":0,"61":0,"64":1,"65":0,"69":1,"71":1,"73":1,"75":1,"77":1,"79":1,"81":2,"83":1,"85":1,"86":0,"87":0,"90":1,"91":0,"92":0,"95":1,"97":1,"99":1,"100":0,"102":0,"103":0,"104":0,"107":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0,"117":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/custom-operators.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/custom-operators.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":2},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"retryWithDelayOrError","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":51}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":38}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":20},"end":{"line":41,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":33}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"11":{"start":{"line":23,"column":0},"end":{"line":32,"column":1}},"12":{"start":{"line":24,"column":2},"end":{"line":31,"column":5}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":37}},"14":{"start":{"line":27,"column":4},"end":{"line":28,"column":27}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":120}},"16":{"start":{"line":34,"column":0},"end":{"line":46,"column":2}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":101}},"18":{"start":{"line":38,"column":4},"end":{"line":38,"column":94}},"19":{"start":{"line":38,"column":25},"end":{"line":38,"column":83}},"20":{"start":{"line":38,"column":81},"end":{"line":38,"column":82}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":91}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":79}},"23":{"start":{"line":44,"column":36},"end":{"line":44,"column":77}},"24":{"start":{"line":48,"column":0},"end":{"line":50,"column":1}},"25":{"start":{"line":49,"column":2},"end":{"line":49,"column":64}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":36},"end":{"line":30,"column":81}},{"start":{"line":30,"column":84},"end":{"line":30,"column":119}}]},"2":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":73},"end":{"line":36,"column":85}},{"start":{"line":36,"column":88},"end":{"line":36,"column":100}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":20},"end":{"line":36,"column":40}},{"start":{"line":36,"column":44},"end":{"line":36,"column":70}}]},"4":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":74},"end":{"line":42,"column":86}},{"start":{"line":42,"column":89},"end":{"line":42,"column":90}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":21},"end":{"line":42,"column":41}},{"start":{"line":42,"column":45},"end":{"line":42,"column":71}}]}},"code":["'use strict';","","var _Observable = require('rxjs/Observable');","","var _async = require('rxjs/scheduler/async');","","require('rxjs/add/observable/range');","","require('rxjs/add/observable/throw');","","require('rxjs/add/observable/timer');","","require('rxjs/add/operator/mergeMap');","","require('rxjs/add/operator/map');","","require('rxjs/add/operator/retryWhen');","","require('rxjs/add/operator/switch');","","require('rxjs/add/operator/zip');","","function retryWithDelayOrError(errors, maxRetries) {","  return _Observable.Observable.range(1, maxRetries + 1).zip(errors, (i, e) => {","    return { attempts: i, error: e };","  }).mergeMap((_ref) => {","    let attempts = _ref.attempts,","        error = _ref.error;","","    return attempts <= maxRetries ? _Observable.Observable.timer(attempts * 1000) : _Observable.Observable.throw(error);","  });","}","","const newCoolOperators = {","  guaranteedThrottle: function (time) {","    let scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _async.async;","","    return this.map(x => _Observable.Observable.timer(time, scheduler).map(() => x)).switch();","  },","","  retryAtIntervals: function () {","    let maxRetries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;","","    return this.retryWhen(errors => retryWithDelayOrError(errors, maxRetries));","  }","};","","for (const key of Object.keys(newCoolOperators)) {","  _Observable.Observable.prototype[key] = newCoolOperators[key];","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jdXN0b20tb3BlcmF0b3JzLmpzIl0sIm5hbWVzIjpbInJldHJ5V2l0aERlbGF5T3JFcnJvciIsImVycm9ycyIsIm1heFJldHJpZXMiLCJyYW5nZSIsInppcCIsImkiLCJlIiwiYXR0ZW1wdHMiLCJlcnJvciIsIm1lcmdlTWFwIiwidGltZXIiLCJ0aHJvdyIsIm5ld0Nvb2xPcGVyYXRvcnMiLCJndWFyYW50ZWVkVGhyb3R0bGUiLCJ0aW1lIiwic2NoZWR1bGVyIiwibWFwIiwieCIsInN3aXRjaCIsInJldHJ5QXRJbnRlcnZhbHMiLCJyZXRyeVdoZW4iLCJrZXkiLCJPYmplY3QiLCJrZXlzIiwicHJvdG90eXBlIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLHFCQUFULENBQStCQyxNQUEvQixFQUF1Q0MsVUFBdkMsRUFBbUQ7QUFDakQsU0FBTyx1QkFBV0MsS0FBWCxDQUFpQixDQUFqQixFQUFvQkQsYUFBYSxDQUFqQyxFQUNKRSxHQURJLENBQ0FILE1BREEsRUFDUSxDQUFDSSxDQUFELEVBQUlDLENBQUosS0FBVTtBQUNyQixXQUFPLEVBQUVDLFVBQVVGLENBQVosRUFBZUcsT0FBT0YsQ0FBdEIsRUFBUDtBQUNELEdBSEksRUFJSkcsUUFKSSxDQUlLLFVBQXVCO0FBQUEsUUFBckJGLFFBQXFCLFFBQXJCQSxRQUFxQjtBQUFBLFFBQVhDLEtBQVcsUUFBWEEsS0FBVzs7QUFDL0IsV0FBT0QsWUFBWUwsVUFBWixHQUNMLHVCQUFXUSxLQUFYLENBQWlCSCxXQUFXLElBQTVCLENBREssR0FFTCx1QkFBV0ksS0FBWCxDQUFpQkgsS0FBakIsQ0FGRjtBQUdELEdBUkksQ0FBUDtBQVNEOztBQUVELE1BQU1JLG1CQUFtQjtBQUN2QkMsc0JBQW9CLFVBQVNDLElBQVQsRUFBa0M7QUFBQSxRQUFuQkMsU0FBbUI7O0FBQ3BELFdBQU8sS0FDSkMsR0FESSxDQUNDQyxDQUFELElBQU8sdUJBQVdQLEtBQVgsQ0FBaUJJLElBQWpCLEVBQXVCQyxTQUF2QixFQUFrQ0MsR0FBbEMsQ0FBc0MsTUFBTUMsQ0FBNUMsQ0FEUCxFQUVKQyxNQUZJLEVBQVA7QUFHRCxHQUxzQjs7QUFPdkJDLG9CQUFrQixZQUF5QjtBQUFBLFFBQWhCakIsVUFBZ0IsdUVBQUgsQ0FBRzs7QUFDekMsV0FBTyxLQUFLa0IsU0FBTCxDQUFnQm5CLE1BQUQsSUFBWUQsc0JBQXNCQyxNQUF0QixFQUE4QkMsVUFBOUIsQ0FBM0IsQ0FBUDtBQUNEO0FBVHNCLENBQXpCOztBQWFBLEtBQUssTUFBTW1CLEdBQVgsSUFBa0JDLE9BQU9DLElBQVAsQ0FBWVgsZ0JBQVosQ0FBbEIsRUFBaUQ7QUFDL0MseUJBQVdZLFNBQVgsQ0FBcUJILEdBQXJCLElBQTRCVCxpQkFBaUJTLEdBQWpCLENBQTVCO0FBQ0QiLCJmaWxlIjoiY3VzdG9tLW9wZXJhdG9ycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcclxuaW1wb3J0IHthc3luY30gZnJvbSAncnhqcy9zY2hlZHVsZXIvYXN5bmMnO1xyXG5cclxuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL3JhbmdlJztcclxuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL3Rocm93JztcclxuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL3RpbWVyJztcclxuXHJcbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvbWVyZ2VNYXAnO1xyXG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL21hcCc7XHJcbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvcmV0cnlXaGVuJztcclxuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9zd2l0Y2gnO1xyXG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3ppcCc7XHJcblxyXG5mdW5jdGlvbiByZXRyeVdpdGhEZWxheU9yRXJyb3IoZXJyb3JzLCBtYXhSZXRyaWVzKSB7XHJcbiAgcmV0dXJuIE9ic2VydmFibGUucmFuZ2UoMSwgbWF4UmV0cmllcyArIDEpXHJcbiAgICAuemlwKGVycm9ycywgKGksIGUpID0+IHtcclxuICAgICAgcmV0dXJuIHsgYXR0ZW1wdHM6IGksIGVycm9yOiBlIH07XHJcbiAgICB9KVxyXG4gICAgLm1lcmdlTWFwKCh7YXR0ZW1wdHMsIGVycm9yfSkgPT4ge1xyXG4gICAgICByZXR1cm4gYXR0ZW1wdHMgPD0gbWF4UmV0cmllcyA/XHJcbiAgICAgICAgT2JzZXJ2YWJsZS50aW1lcihhdHRlbXB0cyAqIDEwMDApIDpcclxuICAgICAgICBPYnNlcnZhYmxlLnRocm93KGVycm9yKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5jb25zdCBuZXdDb29sT3BlcmF0b3JzID0ge1xyXG4gIGd1YXJhbnRlZWRUaHJvdHRsZTogZnVuY3Rpb24odGltZSwgc2NoZWR1bGVyID0gYXN5bmMpIHtcclxuICAgIHJldHVybiB0aGlzXHJcbiAgICAgIC5tYXAoKHgpID0+IE9ic2VydmFibGUudGltZXIodGltZSwgc2NoZWR1bGVyKS5tYXAoKCkgPT4geCkpXHJcbiAgICAgIC5zd2l0Y2goKTtcclxuICB9LFxyXG5cclxuICByZXRyeUF0SW50ZXJ2YWxzOiBmdW5jdGlvbihtYXhSZXRyaWVzID0gMykge1xyXG4gICAgcmV0dXJuIHRoaXMucmV0cnlXaGVuKChlcnJvcnMpID0+IHJldHJ5V2l0aERlbGF5T3JFcnJvcihlcnJvcnMsIG1heFJldHJpZXMpKTtcclxuICB9LFxyXG59O1xyXG5cclxuXHJcbmZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG5ld0Nvb2xPcGVyYXRvcnMpKSB7XHJcbiAgT2JzZXJ2YWJsZS5wcm90b3R5cGVba2V5XSA9IG5ld0Nvb2xPcGVyYXRvcnNba2V5XTtcclxufVxyXG4iXX0="],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"24":0,"25":0,"27":0,"30":0,"34":1,"36":0,"38":0,"42":0,"44":0,"48":1,"49":2}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/es6-shim.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/es6-shim.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":67}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}}},"branchMap":{},"code":["'use strict';","","var path = require('path');","var electronCompile = require('electron-compile');","","var packageJson = require('./package.json');","let initScript = path.resolve(__dirname, packageJson.originalMain);","electronCompile.init(__dirname, initScript);","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lczYtc2hpbS5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImVsZWN0cm9uQ29tcGlsZSIsInBhY2thZ2VKc29uIiwiaW5pdFNjcmlwdCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJvcmlnaW5hbE1haW4iLCJpbml0Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU9DLFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUMsa0JBQWtCRCxRQUFRLGtCQUFSLENBQXRCOztBQUVBLElBQUlFLGNBQWNGLFFBQVEsZ0JBQVIsQ0FBbEI7QUFDQSxJQUFJRyxhQUFhSixLQUFLSyxPQUFMLENBQWFDLFNBQWIsRUFBd0JILFlBQVlJLFlBQXBDLENBQWpCO0FBQ0FMLGdCQUFnQk0sSUFBaEIsQ0FBcUJGLFNBQXJCLEVBQWdDRixVQUFoQyIsImZpbGUiOiJlczYtc2hpbS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG52YXIgZWxlY3Ryb25Db21waWxlID0gcmVxdWlyZSgnZWxlY3Ryb24tY29tcGlsZScpO1xyXG5cclxudmFyIHBhY2thZ2VKc29uID0gcmVxdWlyZSgnLi9wYWNrYWdlLmpzb24nKTtcclxubGV0IGluaXRTY3JpcHQgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBwYWNrYWdlSnNvbi5vcmlnaW5hbE1haW4pO1xyXG5lbGVjdHJvbkNvbXBpbGUuaW5pdChfX2Rpcm5hbWUsIGluaXRTY3JpcHQpO1xyXG4iXX0="],"l":{"3":2,"4":2,"6":2,"7":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/initialize-renderer.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/initialize-renderer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"initializeRendererProcess","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":71}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":67}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":67}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}},"11":{"start":{"line":29,"column":0},"end":{"line":60,"column":1}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":34}},"13":{"start":{"line":30,"column":27},"end":{"line":30,"column":34}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":86}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":79}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":26}},"17":{"start":{"line":38,"column":2},"end":{"line":55,"column":3}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":89}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":101}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":89}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":46}},"23":{"start":{"line":50,"column":4},"end":{"line":50,"column":53}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":50}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":114}},"26":{"start":{"line":57,"column":2},"end":{"line":57,"column":25}},"27":{"start":{"line":58,"column":2},"end":{"line":58,"column":50}},"28":{"start":{"line":59,"column":2},"end":{"line":59,"column":29}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.initializeRendererProcess = initializeRendererProcess;","","var _compilerHost = require('./compiler-host');","","var _compilerHost2 = _interopRequireDefault(_compilerHost);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// NB: These are duped in protocol-hook so we can save startup time, make","// sure to run both!","const magicGlobalForRootCacheDir = '__electron_compile_root_cache_dir';","const magicGlobalForAppRootDir = '__electron_compile_app_root_dir';","","const d = require('debug')('electron-compile:initialize-renderer');","","let rendererInitialized = false;","","/**"," * Called by our rigged script file at the top of every HTML file to set up"," * the same compilers as the browser process that created us"," *"," * @private"," */","function initializeRendererProcess(readOnlyMode) {","  if (rendererInitialized) return;","","  let rootCacheDir = require('electron').remote.getGlobal(magicGlobalForRootCacheDir);","  let appRoot = require('electron').remote.getGlobal(magicGlobalForAppRootDir);","  let compilerHost = null;","","  // NB: This has to be synchronous because we need to block HTML parsing","  // until we're set up","  if (readOnlyMode) {","    d(`Setting up electron-compile in precompiled mode with cache dir: ${rootCacheDir}`);","","    // NB: React cares SUPER HARD about this, and this is the earliest place ","    // we can set it up to ensure React picks it up correctly","    process.env.NODE_ENV = 'production';","    compilerHost = _compilerHost2.default.createReadonlyFromConfigurationSync(rootCacheDir, appRoot);","  } else {","    d(`Setting up electron-compile in development mode with cache dir: ${rootCacheDir}`);","","    var _require = require('./config-parser');","","    const createCompilers = _require.createCompilers;","","    const compilersByMimeType = createCompilers();","","    compilerHost = _compilerHost2.default.createFromConfigurationSync(rootCacheDir, appRoot, compilersByMimeType);","  }","","  require('./x-require');","  require('./require-hook').default(compilerHost);","  rendererInitialized = true;","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbml0aWFsaXplLXJlbmRlcmVyLmpzIl0sIm5hbWVzIjpbImluaXRpYWxpemVSZW5kZXJlclByb2Nlc3MiLCJtYWdpY0dsb2JhbEZvclJvb3RDYWNoZURpciIsIm1hZ2ljR2xvYmFsRm9yQXBwUm9vdERpciIsImQiLCJyZXF1aXJlIiwicmVuZGVyZXJJbml0aWFsaXplZCIsInJlYWRPbmx5TW9kZSIsInJvb3RDYWNoZURpciIsInJlbW90ZSIsImdldEdsb2JhbCIsImFwcFJvb3QiLCJjb21waWxlckhvc3QiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjcmVhdGVSZWFkb25seUZyb21Db25maWd1cmF0aW9uU3luYyIsImNyZWF0ZUNvbXBpbGVycyIsImNvbXBpbGVyc0J5TWltZVR5cGUiLCJjcmVhdGVGcm9tQ29uZmlndXJhdGlvblN5bmMiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7OztRQWlCZ0JBLHlCLEdBQUFBLHlCOztBQWpCaEI7Ozs7OztBQUVBO0FBQ0E7QUFDQSxNQUFNQyw2QkFBNkIsbUNBQW5DO0FBQ0EsTUFBTUMsMkJBQTJCLGlDQUFqQzs7QUFFQSxNQUFNQyxJQUFJQyxRQUFRLE9BQVIsRUFBaUIsc0NBQWpCLENBQVY7O0FBRUEsSUFBSUMsc0JBQXNCLEtBQTFCOztBQUVBOzs7Ozs7QUFNTyxTQUFTTCx5QkFBVCxDQUFtQ00sWUFBbkMsRUFBaUQ7QUFDdEQsTUFBSUQsbUJBQUosRUFBeUI7O0FBRXpCLE1BQUlFLGVBQWVILFFBQVEsVUFBUixFQUFvQkksTUFBcEIsQ0FBMkJDLFNBQTNCLENBQXFDUiwwQkFBckMsQ0FBbkI7QUFDQSxNQUFJUyxVQUFVTixRQUFRLFVBQVIsRUFBb0JJLE1BQXBCLENBQTJCQyxTQUEzQixDQUFxQ1Asd0JBQXJDLENBQWQ7QUFDQSxNQUFJUyxlQUFlLElBQW5COztBQUVBO0FBQ0E7QUFDQSxNQUFJTCxZQUFKLEVBQWtCO0FBQ2hCSCxNQUFHLG1FQUFrRUksWUFBYSxFQUFsRjs7QUFFQTtBQUNBO0FBQ0FLLFlBQVFDLEdBQVIsQ0FBWUMsUUFBWixHQUF1QixZQUF2QjtBQUNBSCxtQkFBZSx1QkFBYUksbUNBQWIsQ0FBaURSLFlBQWpELEVBQStERyxPQUEvRCxDQUFmO0FBQ0QsR0FQRCxNQU9PO0FBQ0xQLE1BQUcsbUVBQWtFSSxZQUFhLEVBQWxGOztBQURLLG1CQUV1QkgsUUFBUSxpQkFBUixDQUZ2Qjs7QUFBQSxVQUVHWSxlQUZILFlBRUdBLGVBRkg7O0FBR0wsVUFBTUMsc0JBQXNCRCxpQkFBNUI7O0FBRUFMLG1CQUFlLHVCQUFhTywyQkFBYixDQUF5Q1gsWUFBekMsRUFBdURHLE9BQXZELEVBQWdFTyxtQkFBaEUsQ0FBZjtBQUNEOztBQUVEYixVQUFRLGFBQVI7QUFDQUEsVUFBUSxnQkFBUixFQUEwQmUsT0FBMUIsQ0FBa0NSLFlBQWxDO0FBQ0FOLHdCQUFzQixJQUF0QjtBQUNEIiwiZmlsZSI6ImluaXRpYWxpemUtcmVuZGVyZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcGlsZXJIb3N0IGZyb20gJy4vY29tcGlsZXItaG9zdCc7XG5cbi8vIE5COiBUaGVzZSBhcmUgZHVwZWQgaW4gcHJvdG9jb2wtaG9vayBzbyB3ZSBjYW4gc2F2ZSBzdGFydHVwIHRpbWUsIG1ha2Vcbi8vIHN1cmUgdG8gcnVuIGJvdGghXG5jb25zdCBtYWdpY0dsb2JhbEZvclJvb3RDYWNoZURpciA9ICdfX2VsZWN0cm9uX2NvbXBpbGVfcm9vdF9jYWNoZV9kaXInO1xuY29uc3QgbWFnaWNHbG9iYWxGb3JBcHBSb290RGlyID0gJ19fZWxlY3Ryb25fY29tcGlsZV9hcHBfcm9vdF9kaXInO1xuXG5jb25zdCBkID0gcmVxdWlyZSgnZGVidWcnKSgnZWxlY3Ryb24tY29tcGlsZTppbml0aWFsaXplLXJlbmRlcmVyJyk7XG5cbmxldCByZW5kZXJlckluaXRpYWxpemVkID0gZmFsc2U7XG5cbi8qKlxuICogQ2FsbGVkIGJ5IG91ciByaWdnZWQgc2NyaXB0IGZpbGUgYXQgdGhlIHRvcCBvZiBldmVyeSBIVE1MIGZpbGUgdG8gc2V0IHVwXG4gKiB0aGUgc2FtZSBjb21waWxlcnMgYXMgdGhlIGJyb3dzZXIgcHJvY2VzcyB0aGF0IGNyZWF0ZWQgdXNcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZVJlbmRlcmVyUHJvY2VzcyhyZWFkT25seU1vZGUpIHtcbiAgaWYgKHJlbmRlcmVySW5pdGlhbGl6ZWQpIHJldHVybjtcblxuICBsZXQgcm9vdENhY2hlRGlyID0gcmVxdWlyZSgnZWxlY3Ryb24nKS5yZW1vdGUuZ2V0R2xvYmFsKG1hZ2ljR2xvYmFsRm9yUm9vdENhY2hlRGlyKTtcbiAgbGV0IGFwcFJvb3QgPSByZXF1aXJlKCdlbGVjdHJvbicpLnJlbW90ZS5nZXRHbG9iYWwobWFnaWNHbG9iYWxGb3JBcHBSb290RGlyKTtcbiAgbGV0IGNvbXBpbGVySG9zdCA9IG51bGw7XG5cbiAgLy8gTkI6IFRoaXMgaGFzIHRvIGJlIHN5bmNocm9ub3VzIGJlY2F1c2Ugd2UgbmVlZCB0byBibG9jayBIVE1MIHBhcnNpbmdcbiAgLy8gdW50aWwgd2UncmUgc2V0IHVwXG4gIGlmIChyZWFkT25seU1vZGUpIHtcbiAgICBkKGBTZXR0aW5nIHVwIGVsZWN0cm9uLWNvbXBpbGUgaW4gcHJlY29tcGlsZWQgbW9kZSB3aXRoIGNhY2hlIGRpcjogJHtyb290Q2FjaGVEaXJ9YCk7XG5cbiAgICAvLyBOQjogUmVhY3QgY2FyZXMgU1VQRVIgSEFSRCBhYm91dCB0aGlzLCBhbmQgdGhpcyBpcyB0aGUgZWFybGllc3QgcGxhY2UgXG4gICAgLy8gd2UgY2FuIHNldCBpdCB1cCB0byBlbnN1cmUgUmVhY3QgcGlja3MgaXQgdXAgY29ycmVjdGx5XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAncHJvZHVjdGlvbic7XG4gICAgY29tcGlsZXJIb3N0ID0gQ29tcGlsZXJIb3N0LmNyZWF0ZVJlYWRvbmx5RnJvbUNvbmZpZ3VyYXRpb25TeW5jKHJvb3RDYWNoZURpciwgYXBwUm9vdCk7XG4gIH0gZWxzZSB7XG4gICAgZChgU2V0dGluZyB1cCBlbGVjdHJvbi1jb21waWxlIGluIGRldmVsb3BtZW50IG1vZGUgd2l0aCBjYWNoZSBkaXI6ICR7cm9vdENhY2hlRGlyfWApO1xuICAgIGNvbnN0IHsgY3JlYXRlQ29tcGlsZXJzIH0gPSByZXF1aXJlKCcuL2NvbmZpZy1wYXJzZXInKTtcbiAgICBjb25zdCBjb21waWxlcnNCeU1pbWVUeXBlID0gY3JlYXRlQ29tcGlsZXJzKCk7XG5cbiAgICBjb21waWxlckhvc3QgPSBDb21waWxlckhvc3QuY3JlYXRlRnJvbUNvbmZpZ3VyYXRpb25TeW5jKHJvb3RDYWNoZURpciwgYXBwUm9vdCwgY29tcGlsZXJzQnlNaW1lVHlwZSk7XG4gIH1cblxuICByZXF1aXJlKCcuL3gtcmVxdWlyZScpO1xuICByZXF1aXJlKCcuL3JlcXVpcmUtaG9vaycpLmRlZmF1bHQoY29tcGlsZXJIb3N0KTtcbiAgcmVuZGVyZXJJbml0aWFsaXplZCA9IHRydWU7XG59XG4iXX0="],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"16":1,"17":1,"19":1,"21":1,"29":1,"30":0,"32":0,"33":0,"34":0,"38":0,"39":0,"43":0,"44":0,"46":0,"48":0,"50":0,"52":0,"54":0,"57":0,"58":0,"59":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/live-reload.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/live-reload.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,1],"9":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}}},"2":{"name":"enableLiveReload","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":28}}},"3":{"name":"reloadAllWindows","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":28}}},"4":{"name":"enableLiveReloadNaive","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":33}}},"5":{"name":"triggerHMRInRenderers","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":33}}},"6":{"name":"enableReactHMR","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":65}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":38}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":95}},"17":{"start":{"line":34,"column":39},"end":{"line":34,"column":93}},"18":{"start":{"line":36,"column":0},"end":{"line":51,"column":1}},"19":{"start":{"line":37,"column":2},"end":{"line":37,"column":87}},"20":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"21":{"start":{"line":41,"column":2},"end":{"line":41,"column":161}},"22":{"start":{"line":41,"column":64},"end":{"line":41,"column":161}},"23":{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},"24":{"start":{"line":45,"column":6},"end":{"line":45,"column":23}},"25":{"start":{"line":46,"column":6},"end":{"line":46,"column":12}},"26":{"start":{"line":49,"column":6},"end":{"line":49,"column":30}},"27":{"start":{"line":53,"column":0},"end":{"line":53,"column":18}},"28":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"29":{"start":{"line":55,"column":2},"end":{"line":55,"column":52}},"30":{"start":{"line":58,"column":0},"end":{"line":69,"column":1}},"31":{"start":{"line":59,"column":2},"end":{"line":66,"column":5}},"32":{"start":{"line":60,"column":4},"end":{"line":60,"column":55}},"33":{"start":{"line":60,"column":26},"end":{"line":60,"column":55}},"34":{"start":{"line":62,"column":4},"end":{"line":65,"column":7}},"35":{"start":{"line":63,"column":6},"end":{"line":63,"column":44}},"36":{"start":{"line":64,"column":6},"end":{"line":64,"column":49}},"37":{"start":{"line":64,"column":38},"end":{"line":64,"column":47}},"38":{"start":{"line":68,"column":2},"end":{"line":68,"column":26}},"39":{"start":{"line":71,"column":0},"end":{"line":77,"column":1}},"40":{"start":{"line":72,"column":2},"end":{"line":72,"column":143}},"41":{"start":{"line":72,"column":87},"end":{"line":72,"column":141}},"42":{"start":{"line":74,"column":2},"end":{"line":74,"column":139}},"43":{"start":{"line":74,"column":54},"end":{"line":74,"column":108}},"44":{"start":{"line":74,"column":106},"end":{"line":74,"column":107}},"45":{"start":{"line":76,"column":2},"end":{"line":76,"column":248}},"46":{"start":{"line":76,"column":40},"end":{"line":76,"column":192}},"47":{"start":{"line":76,"column":75},"end":{"line":76,"column":191}},"48":{"start":{"line":76,"column":160},"end":{"line":76,"column":190}},"49":{"start":{"line":76,"column":210},"end":{"line":76,"column":246}},"50":{"start":{"line":79,"column":0},"end":{"line":85,"column":1}},"51":{"start":{"line":80,"column":2},"end":{"line":82,"column":5}},"52":{"start":{"line":81,"column":4},"end":{"line":81,"column":55}},"53":{"start":{"line":84,"column":2},"end":{"line":84,"column":31}},"54":{"start":{"line":87,"column":0},"end":{"line":95,"column":1}},"55":{"start":{"line":88,"column":2},"end":{"line":88,"column":49}},"56":{"start":{"line":90,"column":2},"end":{"line":90,"column":143}},"57":{"start":{"line":90,"column":87},"end":{"line":90,"column":141}},"58":{"start":{"line":92,"column":2},"end":{"line":92,"column":139}},"59":{"start":{"line":92,"column":54},"end":{"line":92,"column":108}},"60":{"start":{"line":92,"column":106},"end":{"line":92,"column":107}},"61":{"start":{"line":94,"column":2},"end":{"line":94,"column":238}},"62":{"start":{"line":94,"column":40},"end":{"line":94,"column":179}},"63":{"start":{"line":94,"column":75},"end":{"line":94,"column":178}},"64":{"start":{"line":94,"column":147},"end":{"line":94,"column":177}},"65":{"start":{"line":94,"column":197},"end":{"line":94,"column":236}}},"branchMap":{"1":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":70},"end":{"line":34,"column":73}},{"start":{"line":34,"column":76},"end":{"line":34,"column":92}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":46},"end":{"line":34,"column":49}},{"start":{"line":34,"column":53},"end":{"line":34,"column":67}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":69},"end":{"line":37,"column":81}},{"start":{"line":37,"column":84},"end":{"line":37,"column":86}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":36}},{"start":{"line":37,"column":40},"end":{"line":37,"column":66}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":32}},{"start":{"line":41,"column":36},"end":{"line":41,"column":62}}]},"7":{"line":43,"type":"switch","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":12}},{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},{"start":{"line":48,"column":4},"end":{"line":49,"column":30}}]},"8":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":0},"end":{"line":54,"column":0}},{"start":{"line":54,"column":0},"end":{"line":54,"column":0}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.enableLiveReload = enableLiveReload;","","var _fileChangeCache = require('./file-change-cache');","","var _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);","","var _pathwatcherRx = require('./pathwatcher-rx');","","var _Observable = require('rxjs/Observable');","","require('./custom-operators');","","require('rxjs/add/observable/defer');","","require('rxjs/add/observable/empty');","","require('rxjs/add/observable/fromPromise');","","require('rxjs/add/operator/catch');","","require('rxjs/add/operator/filter');","","require('rxjs/add/operator/mergeMap');","","require('rxjs/add/operator/switchMap');","","require('rxjs/add/operator/timeout');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function enableLiveReload() {","  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","  let strategy = options.strategy;","","","  if (process.type !== 'browser' || !global.globalCompilerHost) throw new Error(\"Call this from the browser process, right after initializing electron-compile\");","","  switch (strategy) {","    case 'react-hmr':","      enableReactHMR();","      break;","    case 'naive':","    default:","      enableLiveReloadNaive();","  }","}","","let BrowserWindow;","if (process.type === 'browser') {","  BrowserWindow = require('electron').BrowserWindow;","}","","function reloadAllWindows() {","  let ret = BrowserWindow.getAllWindows().map(wnd => {","    if (!wnd.isVisible()) return Promise.resolve(true);","","    return new Promise(res => {","      wnd.webContents.reloadIgnoringCache();","      wnd.once('ready-to-show', () => res(true));","    });","  });","","  return Promise.all(ret);","}","","function enableLiveReloadNaive() {","  let filesWeCareAbout = global.globalCompilerHost.listenToCompileEvents().filter(x => !_fileChangeCache2.default.isInNodeModules(x.filePath));","","  let weShouldReload = filesWeCareAbout.mergeMap(x => (0, _pathwatcherRx.watchPath)(x.filePath).map(() => x)).guaranteedThrottle(1 * 1000);","","  return weShouldReload.switchMap(() => _Observable.Observable.defer(() => _Observable.Observable.fromPromise(reloadAllWindows()).timeout(5 * 1000).catch(() => _Observable.Observable.empty()))).subscribe(() => console.log(\"Reloaded all windows!\"));","}","","function triggerHMRInRenderers() {","  BrowserWindow.getAllWindows().forEach(window => {","    window.webContents.send('__electron-compile__HMR');","  });","","  return Promise.resolve(true);","}","","function enableReactHMR() {","  global.__electron_compile_hmr_enabled__ = true;","","  let filesWeCareAbout = global.globalCompilerHost.listenToCompileEvents().filter(x => !_fileChangeCache2.default.isInNodeModules(x.filePath));","","  let weShouldReload = filesWeCareAbout.mergeMap(x => (0, _pathwatcherRx.watchPath)(x.filePath).map(() => x)).guaranteedThrottle(1 * 1000);","","  return weShouldReload.switchMap(() => _Observable.Observable.defer(() => _Observable.Observable.fromPromise(triggerHMRInRenderers()).catch(() => _Observable.Observable.empty()))).subscribe(() => console.log(\"HMR sent to all windows!\"));","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9saXZlLXJlbG9hZC5qcyJdLCJuYW1lcyI6WyJlbmFibGVMaXZlUmVsb2FkIiwib3B0aW9ucyIsInN0cmF0ZWd5IiwicHJvY2VzcyIsInR5cGUiLCJnbG9iYWwiLCJnbG9iYWxDb21waWxlckhvc3QiLCJFcnJvciIsImVuYWJsZVJlYWN0SE1SIiwiZW5hYmxlTGl2ZVJlbG9hZE5haXZlIiwiQnJvd3NlcldpbmRvdyIsInJlcXVpcmUiLCJyZWxvYWRBbGxXaW5kb3dzIiwicmV0IiwiZ2V0QWxsV2luZG93cyIsIm1hcCIsInduZCIsImlzVmlzaWJsZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVzIiwid2ViQ29udGVudHMiLCJyZWxvYWRJZ25vcmluZ0NhY2hlIiwib25jZSIsImFsbCIsImZpbGVzV2VDYXJlQWJvdXQiLCJsaXN0ZW5Ub0NvbXBpbGVFdmVudHMiLCJmaWx0ZXIiLCJ4IiwiaXNJbk5vZGVNb2R1bGVzIiwiZmlsZVBhdGgiLCJ3ZVNob3VsZFJlbG9hZCIsIm1lcmdlTWFwIiwiZ3VhcmFudGVlZFRocm90dGxlIiwic3dpdGNoTWFwIiwiZGVmZXIiLCJmcm9tUHJvbWlzZSIsInRpbWVvdXQiLCJjYXRjaCIsImVtcHR5Iiwic3Vic2NyaWJlIiwiY29uc29sZSIsImxvZyIsInRyaWdnZXJITVJJblJlbmRlcmVycyIsImZvckVhY2giLCJ3aW5kb3ciLCJzZW5kIiwiX19lbGVjdHJvbl9jb21waWxlX2htcl9lbmFibGVkX18iXSwibWFwcGluZ3MiOiI7Ozs7O1FBZ0JnQkEsZ0IsR0FBQUEsZ0I7O0FBaEJoQjs7OztBQUNBOztBQUNBOztBQUVBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRU8sU0FBU0EsZ0JBQVQsR0FBc0M7QUFBQSxNQUFaQyxPQUFZLHVFQUFKLEVBQUk7QUFBQSxNQUNyQ0MsUUFEcUMsR0FDeEJELE9BRHdCLENBQ3JDQyxRQURxQzs7O0FBRzNDLE1BQUlDLFFBQVFDLElBQVIsS0FBaUIsU0FBakIsSUFBOEIsQ0FBQ0MsT0FBT0Msa0JBQTFDLEVBQThELE1BQU0sSUFBSUMsS0FBSixDQUFVLCtFQUFWLENBQU47O0FBRTlELFVBQU9MLFFBQVA7QUFDQSxTQUFLLFdBQUw7QUFDRU07QUFDQTtBQUNGLFNBQUssT0FBTDtBQUNBO0FBQ0VDO0FBTkY7QUFRRDs7QUFFRCxJQUFJQyxhQUFKO0FBQ0EsSUFBSVAsUUFBUUMsSUFBUixLQUFpQixTQUFyQixFQUFnQztBQUM5Qk0sa0JBQWdCQyxRQUFRLFVBQVIsRUFBb0JELGFBQXBDO0FBQ0Q7O0FBRUQsU0FBU0UsZ0JBQVQsR0FBNEI7QUFDMUIsTUFBSUMsTUFBTUgsY0FBY0ksYUFBZCxHQUE4QkMsR0FBOUIsQ0FBa0NDLE9BQU87QUFDakQsUUFBSSxDQUFDQSxJQUFJQyxTQUFKLEVBQUwsRUFBc0IsT0FBT0MsUUFBUUMsT0FBUixDQUFnQixJQUFoQixDQUFQOztBQUV0QixXQUFPLElBQUlELE9BQUosQ0FBYUUsR0FBRCxJQUFTO0FBQzFCSixVQUFJSyxXQUFKLENBQWdCQyxtQkFBaEI7QUFDQU4sVUFBSU8sSUFBSixDQUFTLGVBQVQsRUFBMEIsTUFBTUgsSUFBSSxJQUFKLENBQWhDO0FBQ0QsS0FITSxDQUFQO0FBSUQsR0FQUyxDQUFWOztBQVNBLFNBQU9GLFFBQVFNLEdBQVIsQ0FBWVgsR0FBWixDQUFQO0FBQ0Q7O0FBRUQsU0FBU0oscUJBQVQsR0FBaUM7QUFDL0IsTUFBSWdCLG1CQUFtQnBCLE9BQU9DLGtCQUFQLENBQTBCb0IscUJBQTFCLEdBQ3BCQyxNQURvQixDQUNiQyxLQUFLLENBQUMsMEJBQWlCQyxlQUFqQixDQUFpQ0QsRUFBRUUsUUFBbkMsQ0FETyxDQUF2Qjs7QUFHQSxNQUFJQyxpQkFBaUJOLGlCQUNsQk8sUUFEa0IsQ0FDVEosS0FBSyw4QkFBVUEsRUFBRUUsUUFBWixFQUFzQmYsR0FBdEIsQ0FBMEIsTUFBTWEsQ0FBaEMsQ0FESSxFQUVsQkssa0JBRmtCLENBRUMsSUFBRSxJQUZILENBQXJCOztBQUlBLFNBQU9GLGVBQ0pHLFNBREksQ0FDTSxNQUFNLHVCQUFXQyxLQUFYLENBQWlCLE1BQU0sdUJBQVdDLFdBQVgsQ0FBdUJ4QixrQkFBdkIsRUFBMkN5QixPQUEzQyxDQUFtRCxJQUFFLElBQXJELEVBQTJEQyxLQUEzRCxDQUFpRSxNQUFNLHVCQUFXQyxLQUFYLEVBQXZFLENBQXZCLENBRFosRUFFSkMsU0FGSSxDQUVNLE1BQU1DLFFBQVFDLEdBQVIsQ0FBWSx1QkFBWixDQUZaLENBQVA7QUFHRDs7QUFFRCxTQUFTQyxxQkFBVCxHQUFpQztBQUMvQmpDLGdCQUFjSSxhQUFkLEdBQThCOEIsT0FBOUIsQ0FBdUNDLE1BQUQsSUFBWTtBQUNoREEsV0FBT3hCLFdBQVAsQ0FBbUJ5QixJQUFuQixDQUF3Qix5QkFBeEI7QUFDRCxHQUZEOztBQUlBLFNBQU81QixRQUFRQyxPQUFSLENBQWdCLElBQWhCLENBQVA7QUFDRDs7QUFFRCxTQUFTWCxjQUFULEdBQTBCO0FBQ3hCSCxTQUFPMEMsZ0NBQVAsR0FBMEMsSUFBMUM7O0FBRUEsTUFBSXRCLG1CQUFtQnBCLE9BQU9DLGtCQUFQLENBQTBCb0IscUJBQTFCLEdBQ3BCQyxNQURvQixDQUNiQyxLQUFLLENBQUMsMEJBQWlCQyxlQUFqQixDQUFpQ0QsRUFBRUUsUUFBbkMsQ0FETyxDQUF2Qjs7QUFHQSxNQUFJQyxpQkFBaUJOLGlCQUNsQk8sUUFEa0IsQ0FDVEosS0FBSyw4QkFBVUEsRUFBRUUsUUFBWixFQUFzQmYsR0FBdEIsQ0FBMEIsTUFBTWEsQ0FBaEMsQ0FESSxFQUVsQkssa0JBRmtCLENBRUMsSUFBRSxJQUZILENBQXJCOztBQUlBLFNBQU9GLGVBQ0pHLFNBREksQ0FDTSxNQUFNLHVCQUFXQyxLQUFYLENBQWlCLE1BQU0sdUJBQVdDLFdBQVgsQ0FBdUJPLHVCQUF2QixFQUFnREwsS0FBaEQsQ0FBc0QsTUFBTSx1QkFBV0MsS0FBWCxFQUE1RCxDQUF2QixDQURaLEVBRUpDLFNBRkksQ0FFTSxNQUFNQyxRQUFRQyxHQUFSLENBQVksMEJBQVosQ0FGWixDQUFQO0FBR0QiLCJmaWxlIjoibGl2ZS1yZWxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmlsZUNoYW5nZWRDYWNoZSBmcm9tICcuL2ZpbGUtY2hhbmdlLWNhY2hlJztcbmltcG9ydCB7d2F0Y2hQYXRofSBmcm9tICcuL3BhdGh3YXRjaGVyLXJ4JztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuaW1wb3J0ICcuL2N1c3RvbS1vcGVyYXRvcnMnO1xuXG5pbXBvcnQgJ3J4anMvYWRkL29ic2VydmFibGUvZGVmZXInO1xuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL2VtcHR5JztcbmltcG9ydCAncnhqcy9hZGQvb2JzZXJ2YWJsZS9mcm9tUHJvbWlzZSc7XG5cbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvY2F0Y2gnO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9maWx0ZXInO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9tZXJnZU1hcCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3N3aXRjaE1hcCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3RpbWVvdXQnO1xuXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlTGl2ZVJlbG9hZChvcHRpb25zPXt9KSB7XG4gIGxldCB7IHN0cmF0ZWd5IH0gPSBvcHRpb25zO1xuXG4gIGlmIChwcm9jZXNzLnR5cGUgIT09ICdicm93c2VyJyB8fCAhZ2xvYmFsLmdsb2JhbENvbXBpbGVySG9zdCkgdGhyb3cgbmV3IEVycm9yKFwiQ2FsbCB0aGlzIGZyb20gdGhlIGJyb3dzZXIgcHJvY2VzcywgcmlnaHQgYWZ0ZXIgaW5pdGlhbGl6aW5nIGVsZWN0cm9uLWNvbXBpbGVcIik7XG5cbiAgc3dpdGNoKHN0cmF0ZWd5KSB7XG4gIGNhc2UgJ3JlYWN0LWhtcic6XG4gICAgZW5hYmxlUmVhY3RITVIoKTtcbiAgICBicmVhaztcbiAgY2FzZSAnbmFpdmUnOlxuICBkZWZhdWx0OlxuICAgIGVuYWJsZUxpdmVSZWxvYWROYWl2ZSgpO1xuICB9XG59XG5cbmxldCBCcm93c2VyV2luZG93O1xuaWYgKHByb2Nlc3MudHlwZSA9PT0gJ2Jyb3dzZXInKSB7XG4gIEJyb3dzZXJXaW5kb3cgPSByZXF1aXJlKCdlbGVjdHJvbicpLkJyb3dzZXJXaW5kb3c7XG59XG5cbmZ1bmN0aW9uIHJlbG9hZEFsbFdpbmRvd3MoKSB7XG4gIGxldCByZXQgPSBCcm93c2VyV2luZG93LmdldEFsbFdpbmRvd3MoKS5tYXAod25kID0+IHtcbiAgICBpZiAoIXduZC5pc1Zpc2libGUoKSkgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0cnVlKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzKSA9PiB7XG4gICAgICB3bmQud2ViQ29udGVudHMucmVsb2FkSWdub3JpbmdDYWNoZSgpO1xuICAgICAgd25kLm9uY2UoJ3JlYWR5LXRvLXNob3cnLCAoKSA9PiByZXModHJ1ZSkpO1xuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gUHJvbWlzZS5hbGwocmV0KTtcbn1cblxuZnVuY3Rpb24gZW5hYmxlTGl2ZVJlbG9hZE5haXZlKCkge1xuICBsZXQgZmlsZXNXZUNhcmVBYm91dCA9IGdsb2JhbC5nbG9iYWxDb21waWxlckhvc3QubGlzdGVuVG9Db21waWxlRXZlbnRzKClcbiAgICAuZmlsdGVyKHggPT4gIUZpbGVDaGFuZ2VkQ2FjaGUuaXNJbk5vZGVNb2R1bGVzKHguZmlsZVBhdGgpKTtcblxuICBsZXQgd2VTaG91bGRSZWxvYWQgPSBmaWxlc1dlQ2FyZUFib3V0XG4gICAgLm1lcmdlTWFwKHggPT4gd2F0Y2hQYXRoKHguZmlsZVBhdGgpLm1hcCgoKSA9PiB4KSlcbiAgICAuZ3VhcmFudGVlZFRocm90dGxlKDEqMTAwMCk7XG5cbiAgcmV0dXJuIHdlU2hvdWxkUmVsb2FkXG4gICAgLnN3aXRjaE1hcCgoKSA9PiBPYnNlcnZhYmxlLmRlZmVyKCgpID0+IE9ic2VydmFibGUuZnJvbVByb21pc2UocmVsb2FkQWxsV2luZG93cygpKS50aW1lb3V0KDUqMTAwMCkuY2F0Y2goKCkgPT4gT2JzZXJ2YWJsZS5lbXB0eSgpKSkpXG4gICAgLnN1YnNjcmliZSgoKSA9PiBjb25zb2xlLmxvZyhcIlJlbG9hZGVkIGFsbCB3aW5kb3dzIVwiKSk7XG59XG5cbmZ1bmN0aW9uIHRyaWdnZXJITVJJblJlbmRlcmVycygpIHtcbiAgQnJvd3NlcldpbmRvdy5nZXRBbGxXaW5kb3dzKCkuZm9yRWFjaCgod2luZG93KSA9PiB7XG4gICAgd2luZG93LndlYkNvbnRlbnRzLnNlbmQoJ19fZWxlY3Ryb24tY29tcGlsZV9fSE1SJyk7XG4gIH0pO1xuXG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG59XG5cbmZ1bmN0aW9uIGVuYWJsZVJlYWN0SE1SKCkge1xuICBnbG9iYWwuX19lbGVjdHJvbl9jb21waWxlX2htcl9lbmFibGVkX18gPSB0cnVlO1xuXG4gIGxldCBmaWxlc1dlQ2FyZUFib3V0ID0gZ2xvYmFsLmdsb2JhbENvbXBpbGVySG9zdC5saXN0ZW5Ub0NvbXBpbGVFdmVudHMoKVxuICAgIC5maWx0ZXIoeCA9PiAhRmlsZUNoYW5nZWRDYWNoZS5pc0luTm9kZU1vZHVsZXMoeC5maWxlUGF0aCkpO1xuXG4gIGxldCB3ZVNob3VsZFJlbG9hZCA9IGZpbGVzV2VDYXJlQWJvdXRcbiAgICAubWVyZ2VNYXAoeCA9PiB3YXRjaFBhdGgoeC5maWxlUGF0aCkubWFwKCgpID0+IHgpKVxuICAgIC5ndWFyYW50ZWVkVGhyb3R0bGUoMSoxMDAwKTtcblxuICByZXR1cm4gd2VTaG91bGRSZWxvYWRcbiAgICAuc3dpdGNoTWFwKCgpID0+IE9ic2VydmFibGUuZGVmZXIoKCkgPT4gT2JzZXJ2YWJsZS5mcm9tUHJvbWlzZSh0cmlnZ2VySE1SSW5SZW5kZXJlcnMoKSkuY2F0Y2goKCkgPT4gT2JzZXJ2YWJsZS5lbXB0eSgpKSkpXG4gICAgLnN1YnNjcmliZSgoKSA9PiBjb25zb2xlLmxvZyhcIkhNUiBzZW50IHRvIGFsbCB3aW5kb3dzIVwiKSk7XG59XG4iXX0="],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"37":0,"38":0,"41":0,"43":0,"45":0,"46":0,"49":0,"53":1,"54":1,"55":0,"58":1,"59":0,"60":0,"62":0,"63":0,"64":0,"68":0,"71":1,"72":0,"74":0,"76":0,"79":1,"80":0,"81":0,"84":0,"87":1,"88":0,"90":0,"92":0,"94":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/pathwatcher-rx.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/pathwatcher-rx.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":2,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"watchPathDirect","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"3":{"name":"watchPath","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":51}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"12":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"13":{"start":{"line":25,"column":0},"end":{"line":45,"column":1}},"14":{"start":{"line":26,"column":2},"end":{"line":44,"column":5}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"16":{"start":{"line":29,"column":4},"end":{"line":32,"column":7}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":23}},"18":{"start":{"line":30,"column":16},"end":{"line":30,"column":23}},"19":{"start":{"line":31,"column":6},"end":{"line":31,"column":41}},"20":{"start":{"line":34,"column":4},"end":{"line":37,"column":7}},"21":{"start":{"line":35,"column":6},"end":{"line":35,"column":18}},"22":{"start":{"line":36,"column":6},"end":{"line":36,"column":20}},"23":{"start":{"line":39,"column":4},"end":{"line":43,"column":7}},"24":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":24}},"26":{"start":{"line":47,"column":0},"end":{"line":47,"column":58}},"27":{"start":{"line":48,"column":0},"end":{"line":55,"column":1}},"28":{"start":{"line":49,"column":2},"end":{"line":49,"column":37}},"29":{"start":{"line":50,"column":2},"end":{"line":50,"column":22}},"30":{"start":{"line":50,"column":11},"end":{"line":50,"column":22}},"31":{"start":{"line":52,"column":2},"end":{"line":52,"column":56}},"32":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}},"33":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.watchPathDirect = watchPathDirect;","exports.watchPath = watchPath;","","var _fs = require('fs');","","var _fs2 = _interopRequireDefault(_fs);","","var _Observable = require('rxjs/Observable');","","var _Subscription = require('rxjs/Subscription');","","var _lruCache = require('lru-cache');","","var _lruCache2 = _interopRequireDefault(_lruCache);","","require('rxjs/add/operator/publish');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function watchPathDirect(directory) {","  return _Observable.Observable.create(subj => {","    let dead = false;","","    const watcher = _fs2.default.watch(directory, {}, (eventType, fileName) => {","      if (dead) return;","      subj.next({ eventType, fileName });","    });","","    watcher.on('error', e => {","      dead = true;","      subj.error(e);","    });","","    return new _Subscription.Subscription(() => {","      if (!dead) {","        watcher.close();","      }","    });","  });","}","","const pathCache = new _lruCache2.default({ length: 256 });","function watchPath(directory) {","  let ret = pathCache.get(directory);","  if (ret) return ret;","","  ret = watchPathDirect(directory).publish().refCount();","  pathCache.set(directory, ret);","  return ret;","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXRod2F0Y2hlci1yeC5qcyJdLCJuYW1lcyI6WyJ3YXRjaFBhdGhEaXJlY3QiLCJ3YXRjaFBhdGgiLCJkaXJlY3RvcnkiLCJjcmVhdGUiLCJzdWJqIiwiZGVhZCIsIndhdGNoZXIiLCJ3YXRjaCIsImV2ZW50VHlwZSIsImZpbGVOYW1lIiwibmV4dCIsIm9uIiwiZSIsImVycm9yIiwiY2xvc2UiLCJwYXRoQ2FjaGUiLCJsZW5ndGgiLCJyZXQiLCJnZXQiLCJwdWJsaXNoIiwicmVmQ291bnQiLCJzZXQiXSwibWFwcGluZ3MiOiI7Ozs7O1FBT2dCQSxlLEdBQUFBLGU7UUFtQkFDLFMsR0FBQUEsUzs7QUExQmhCOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7OztBQUVPLFNBQVNELGVBQVQsQ0FBeUJFLFNBQXpCLEVBQW9DO0FBQ3pDLFNBQU8sdUJBQVdDLE1BQVgsQ0FBbUJDLElBQUQsSUFBVTtBQUNqQyxRQUFJQyxPQUFPLEtBQVg7O0FBRUEsVUFBTUMsVUFBVSxhQUFHQyxLQUFILENBQVNMLFNBQVQsRUFBb0IsRUFBcEIsRUFBd0IsQ0FBQ00sU0FBRCxFQUFZQyxRQUFaLEtBQXlCO0FBQy9ELFVBQUlKLElBQUosRUFBVTtBQUNWRCxXQUFLTSxJQUFMLENBQVUsRUFBQ0YsU0FBRCxFQUFZQyxRQUFaLEVBQVY7QUFDRCxLQUhlLENBQWhCOztBQUtBSCxZQUFRSyxFQUFSLENBQVcsT0FBWCxFQUFxQkMsQ0FBRCxJQUFPO0FBQ3pCUCxhQUFPLElBQVA7QUFDQUQsV0FBS1MsS0FBTCxDQUFXRCxDQUFYO0FBQ0QsS0FIRDs7QUFLQSxXQUFPLCtCQUFpQixNQUFNO0FBQUUsVUFBSSxDQUFDUCxJQUFMLEVBQVc7QUFBRUMsZ0JBQVFRLEtBQVI7QUFBa0I7QUFBRSxLQUExRCxDQUFQO0FBQ0QsR0FkTSxDQUFQO0FBZUQ7O0FBRUQsTUFBTUMsWUFBWSx1QkFBUSxFQUFFQyxRQUFRLEdBQVYsRUFBUixDQUFsQjtBQUNPLFNBQVNmLFNBQVQsQ0FBbUJDLFNBQW5CLEVBQThCO0FBQ25DLE1BQUllLE1BQU1GLFVBQVVHLEdBQVYsQ0FBY2hCLFNBQWQsQ0FBVjtBQUNBLE1BQUllLEdBQUosRUFBUyxPQUFPQSxHQUFQOztBQUVUQSxRQUFNakIsZ0JBQWdCRSxTQUFoQixFQUEyQmlCLE9BQTNCLEdBQXFDQyxRQUFyQyxFQUFOO0FBQ0FMLFlBQVVNLEdBQVYsQ0FBY25CLFNBQWQsRUFBeUJlLEdBQXpCO0FBQ0EsU0FBT0EsR0FBUDtBQUNEIiwiZmlsZSI6InBhdGh3YXRjaGVyLXJ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xyXG5pbXBvcnQge1N1YnNjcmlwdGlvbn0gZnJvbSAncnhqcy9TdWJzY3JpcHRpb24nO1xyXG5pbXBvcnQgTFJVIGZyb20gJ2xydS1jYWNoZSc7XHJcblxyXG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3B1Ymxpc2gnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoUGF0aERpcmVjdChkaXJlY3RvcnkpIHtcclxuICByZXR1cm4gT2JzZXJ2YWJsZS5jcmVhdGUoKHN1YmopID0+IHtcclxuICAgIGxldCBkZWFkID0gZmFsc2U7XHJcblxyXG4gICAgY29uc3Qgd2F0Y2hlciA9IGZzLndhdGNoKGRpcmVjdG9yeSwge30sIChldmVudFR5cGUsIGZpbGVOYW1lKSA9PiB7XHJcbiAgICAgIGlmIChkZWFkKSByZXR1cm47XHJcbiAgICAgIHN1YmoubmV4dCh7ZXZlbnRUeXBlLCBmaWxlTmFtZX0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgd2F0Y2hlci5vbignZXJyb3InLCAoZSkgPT4ge1xyXG4gICAgICBkZWFkID0gdHJ1ZTtcclxuICAgICAgc3Viai5lcnJvcihlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBuZXcgU3Vic2NyaXB0aW9uKCgpID0+IHsgaWYgKCFkZWFkKSB7IHdhdGNoZXIuY2xvc2UoKTsgfSB9KTtcclxuICB9KTtcclxufVxyXG5cclxuY29uc3QgcGF0aENhY2hlID0gbmV3IExSVSh7IGxlbmd0aDogMjU2IH0pO1xyXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hQYXRoKGRpcmVjdG9yeSkge1xyXG4gIGxldCByZXQgPSBwYXRoQ2FjaGUuZ2V0KGRpcmVjdG9yeSk7XHJcbiAgaWYgKHJldCkgcmV0dXJuIHJldDtcclxuXHJcbiAgcmV0ID0gd2F0Y2hQYXRoRGlyZWN0KGRpcmVjdG9yeSkucHVibGlzaCgpLnJlZkNvdW50KCk7XHJcbiAgcGF0aENhY2hlLnNldChkaXJlY3RvcnksIHJldCk7XHJcbiAgcmV0dXJuIHJldDtcclxufVxyXG4iXX0="],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":2,"25":1,"26":0,"27":0,"29":0,"30":0,"31":0,"34":0,"35":0,"36":0,"39":0,"40":0,"41":0,"47":1,"48":1,"49":0,"50":0,"52":0,"53":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/packager-cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/packager-cli.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":2,"89":1,"90":5,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":1,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,2],"9":[2,2],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,1],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":2,"13":5,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":31},"end":{"line":10,"column":54}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":63},"end":{"line":11,"column":76}}},"3":{"name":"packageDirToResourcesDir","line":21,"loc":{"start":{"line":21,"column":9},"end":{"line":21,"column":47}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":32},"end":{"line":27,"column":53}}},"5":{"name":"copySmallFile","line":34,"loc":{"start":{"line":34,"column":9},"end":{"line":34,"column":42}}},"6":{"name":"(anonymous_6)","line":40,"loc":{"start":{"line":40,"column":32},"end":{"line":40,"column":55}}},"7":{"name":"compileAndShim","line":68,"loc":{"start":{"line":68,"column":9},"end":{"line":68,"column":38}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":32},"end":{"line":74,"column":70}}},"9":{"name":"runAsarArchive","line":93,"loc":{"start":{"line":93,"column":9},"end":{"line":93,"column":43}}},"10":{"name":"(anonymous_10)","line":99,"loc":{"start":{"line":99,"column":32},"end":{"line":99,"column":49}}},"11":{"name":"packagerMain","line":134,"loc":{"start":{"line":134,"column":9},"end":{"line":134,"column":36}}},"12":{"name":"_interopRequireDefault","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":37}}},"13":{"name":"_asyncToGenerator","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":31}}},"14":{"name":"(anonymous_14)","line":159,"loc":{"start":{"line":159,"column":40},"end":{"line":159,"column":52}}},"15":{"name":"(anonymous_15)","line":159,"loc":{"start":{"line":159,"column":110},"end":{"line":159,"column":137}}},"16":{"name":"step","line":159,"loc":{"start":{"line":159,"column":139},"end":{"line":159,"column":163}}},"17":{"name":"(anonymous_17)","line":159,"loc":{"start":{"line":159,"column":341},"end":{"line":159,"column":358}}},"18":{"name":"(anonymous_18)","line":159,"loc":{"start":{"line":159,"column":384},"end":{"line":159,"column":399}}},"19":{"name":"splitOutAsarArguments","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":37}}},"20":{"name":"parsePackagerOutput","line":187,"loc":{"start":{"line":187,"column":0},"end":{"line":187,"column":37}}},"21":{"name":"findExecutableOrGuess","line":204,"loc":{"start":{"line":204,"column":0},"end":{"line":204,"column":53}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":6,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":93}},"3":{"start":{"line":9,"column":0},"end":{"line":24,"column":5}},"4":{"start":{"line":10,"column":2},"end":{"line":19,"column":5}},"5":{"start":{"line":11,"column":4},"end":{"line":13,"column":7}},"6":{"start":{"line":12,"column":6},"end":{"line":12,"column":32}},"7":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"8":{"start":{"line":15,"column":6},"end":{"line":15,"column":85}},"9":{"start":{"line":17,"column":6},"end":{"line":17,"column":65}},"10":{"start":{"line":21,"column":2},"end":{"line":23,"column":4}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}},"12":{"start":{"line":26,"column":0},"end":{"line":37,"column":5}},"13":{"start":{"line":27,"column":2},"end":{"line":32,"column":5}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":34}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":48}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":42}},"17":{"start":{"line":34,"column":2},"end":{"line":36,"column":4}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":40}},"19":{"start":{"line":39,"column":0},"end":{"line":71,"column":5}},"20":{"start":{"line":40,"column":2},"end":{"line":66,"column":5}},"21":{"start":{"line":41,"column":4},"end":{"line":41,"column":60}},"22":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}},"23":{"start":{"line":44,"column":4},"end":{"line":54,"column":5}},"24":{"start":{"line":45,"column":6},"end":{"line":45,"column":69}},"25":{"start":{"line":45,"column":60},"end":{"line":45,"column":69}},"26":{"start":{"line":47,"column":6},"end":{"line":47,"column":56}},"27":{"start":{"line":48,"column":6},"end":{"line":48,"column":51}},"28":{"start":{"line":50,"column":6},"end":{"line":50,"column":40}},"29":{"start":{"line":50,"column":31},"end":{"line":50,"column":40}},"30":{"start":{"line":52,"column":6},"end":{"line":52,"column":61}},"31":{"start":{"line":53,"column":6},"end":{"line":53,"column":47}},"32":{"start":{"line":56,"column":4},"end":{"line":56,"column":29}},"33":{"start":{"line":57,"column":4},"end":{"line":57,"column":117}},"34":{"start":{"line":59,"column":4},"end":{"line":59,"column":47}},"35":{"start":{"line":60,"column":4},"end":{"line":60,"column":37}},"36":{"start":{"line":61,"column":4},"end":{"line":61,"column":37}},"37":{"start":{"line":63,"column":4},"end":{"line":63,"column":115}},"38":{"start":{"line":65,"column":4},"end":{"line":65,"column":116}},"39":{"start":{"line":68,"column":2},"end":{"line":70,"column":4}},"40":{"start":{"line":69,"column":4},"end":{"line":69,"column":40}},"41":{"start":{"line":73,"column":0},"end":{"line":96,"column":5}},"42":{"start":{"line":74,"column":2},"end":{"line":91,"column":5}},"43":{"start":{"line":75,"column":4},"end":{"line":75,"column":60}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":47}},"45":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"46":{"start":{"line":79,"column":6},"end":{"line":79,"column":51}},"47":{"start":{"line":82,"column":4},"end":{"line":82,"column":72}},"48":{"start":{"line":84,"column":4},"end":{"line":85,"column":42}},"49":{"start":{"line":88,"column":4},"end":{"line":88,"column":48}},"50":{"start":{"line":89,"column":4},"end":{"line":89,"column":92}},"51":{"start":{"line":90,"column":4},"end":{"line":90,"column":55}},"52":{"start":{"line":93,"column":2},"end":{"line":95,"column":4}},"53":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"54":{"start":{"line":98,"column":0},"end":{"line":137,"column":5}},"55":{"start":{"line":99,"column":2},"end":{"line":132,"column":5}},"56":{"start":{"line":100,"column":4},"end":{"line":100,"column":39}},"57":{"start":{"line":101,"column":4},"end":{"line":101,"column":26}},"58":{"start":{"line":103,"column":4},"end":{"line":103,"column":60}},"59":{"start":{"line":105,"column":4},"end":{"line":106,"column":50}},"60":{"start":{"line":108,"column":4},"end":{"line":108,"column":87}},"61":{"start":{"line":110,"column":4},"end":{"line":111,"column":43}},"62":{"start":{"line":114,"column":4},"end":{"line":114,"column":61}},"63":{"start":{"line":115,"column":4},"end":{"line":115,"column":69}},"64":{"start":{"line":116,"column":4},"end":{"line":116,"column":58}},"65":{"start":{"line":118,"column":4},"end":{"line":118,"column":65}},"66":{"start":{"line":119,"column":4},"end":{"line":131,"column":5}},"67":{"start":{"line":120,"column":6},"end":{"line":120,"column":39}},"68":{"start":{"line":122,"column":6},"end":{"line":122,"column":30}},"69":{"start":{"line":122,"column":21},"end":{"line":122,"column":30}},"70":{"start":{"line":124,"column":6},"end":{"line":124,"column":35}},"71":{"start":{"line":125,"column":6},"end":{"line":125,"column":31}},"72":{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},"73":{"start":{"line":127,"column":8},"end":{"line":127,"column":36}},"74":{"start":{"line":130,"column":6},"end":{"line":130,"column":54}},"75":{"start":{"line":134,"column":2},"end":{"line":136,"column":4}},"76":{"start":{"line":135,"column":4},"end":{"line":135,"column":40}},"77":{"start":{"line":139,"column":0},"end":{"line":139,"column":54}},"78":{"start":{"line":140,"column":0},"end":{"line":140,"column":50}},"79":{"start":{"line":141,"column":0},"end":{"line":141,"column":54}},"80":{"start":{"line":143,"column":0},"end":{"line":143,"column":28}},"81":{"start":{"line":145,"column":0},"end":{"line":145,"column":43}},"82":{"start":{"line":147,"column":0},"end":{"line":147,"column":32}},"83":{"start":{"line":149,"column":0},"end":{"line":149,"column":47}},"84":{"start":{"line":151,"column":0},"end":{"line":151,"column":36}},"85":{"start":{"line":153,"column":0},"end":{"line":153,"column":28}},"86":{"start":{"line":155,"column":0},"end":{"line":155,"column":35}},"87":{"start":{"line":157,"column":0},"end":{"line":157,"column":95}},"88":{"start":{"line":157,"column":39},"end":{"line":157,"column":93}},"89":{"start":{"line":159,"column":0},"end":{"line":159,"column":458}},"90":{"start":{"line":159,"column":33},"end":{"line":159,"column":456}},"91":{"start":{"line":159,"column":54},"end":{"line":159,"column":90}},"92":{"start":{"line":159,"column":91},"end":{"line":159,"column":453}},"93":{"start":{"line":159,"column":139},"end":{"line":159,"column":428}},"94":{"start":{"line":159,"column":165},"end":{"line":159,"column":263}},"95":{"start":{"line":159,"column":171},"end":{"line":159,"column":196}},"96":{"start":{"line":159,"column":197},"end":{"line":159,"column":220}},"97":{"start":{"line":159,"column":239},"end":{"line":159,"column":253}},"98":{"start":{"line":159,"column":254},"end":{"line":159,"column":261}},"99":{"start":{"line":159,"column":264},"end":{"line":159,"column":426}},"100":{"start":{"line":159,"column":281},"end":{"line":159,"column":296}},"101":{"start":{"line":159,"column":306},"end":{"line":159,"column":424}},"102":{"start":{"line":159,"column":360},"end":{"line":159,"column":380}},"103":{"start":{"line":159,"column":401},"end":{"line":159,"column":420}},"104":{"start":{"line":159,"column":429},"end":{"line":159,"column":449}},"105":{"start":{"line":161,"column":0},"end":{"line":161,"column":56}},"106":{"start":{"line":162,"column":0},"end":{"line":162,"column":45}},"107":{"start":{"line":164,"column":0},"end":{"line":185,"column":1}},"108":{"start":{"line":165,"column":2},"end":{"line":167,"column":3}},"109":{"start":{"line":165,"column":21},"end":{"line":165,"column":47}},"110":{"start":{"line":166,"column":4},"end":{"line":166,"column":105}},"111":{"start":{"line":170,"column":2},"end":{"line":170,"column":50}},"112":{"start":{"line":170,"column":29},"end":{"line":170,"column":48}},"113":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"114":{"start":{"line":173,"column":4},"end":{"line":173,"column":49}},"115":{"start":{"line":176,"column":2},"end":{"line":176,"column":73}},"116":{"start":{"line":176,"column":41},"end":{"line":176,"column":71}},"117":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"118":{"start":{"line":178,"column":4},"end":{"line":178,"column":47}},"119":{"start":{"line":181,"column":2},"end":{"line":181,"column":63}},"120":{"start":{"line":182,"column":2},"end":{"line":182,"column":87}},"121":{"start":{"line":184,"column":2},"end":{"line":184,"column":63}},"122":{"start":{"line":187,"column":0},"end":{"line":202,"column":1}},"123":{"start":{"line":189,"column":2},"end":{"line":189,"column":22}},"124":{"start":{"line":190,"column":2},"end":{"line":190,"column":33}},"125":{"start":{"line":192,"column":2},"end":{"line":192,"column":60}},"126":{"start":{"line":192,"column":33},"end":{"line":192,"column":58}},"127":{"start":{"line":193,"column":2},"end":{"line":193,"column":72}},"128":{"start":{"line":193,"column":15},"end":{"line":193,"column":72}},"129":{"start":{"line":194,"column":2},"end":{"line":194,"column":28}},"130":{"start":{"line":197,"column":2},"end":{"line":201,"column":3}},"131":{"start":{"line":198,"column":4},"end":{"line":198,"column":53}},"132":{"start":{"line":198,"column":39},"end":{"line":198,"column":51}},"133":{"start":{"line":200,"column":4},"end":{"line":200,"column":52}},"134":{"start":{"line":204,"column":0},"end":{"line":217,"column":1}},"135":{"start":{"line":205,"column":2},"end":{"line":205,"column":87}},"136":{"start":{"line":207,"column":2},"end":{"line":208,"column":40}},"137":{"start":{"line":210,"column":2},"end":{"line":214,"column":3}},"138":{"start":{"line":211,"column":4},"end":{"line":211,"column":81}},"139":{"start":{"line":212,"column":4},"end":{"line":212,"column":63}},"140":{"start":{"line":213,"column":4},"end":{"line":213,"column":140}},"141":{"start":{"line":216,"column":2},"end":{"line":216,"column":23}},"142":{"start":{"line":219,"column":0},"end":{"line":226,"column":1}},"143":{"start":{"line":220,"column":2},"end":{"line":225,"column":5}},"144":{"start":{"line":220,"column":40},"end":{"line":220,"column":55}},"145":{"start":{"line":221,"column":4},"end":{"line":221,"column":34}},"146":{"start":{"line":222,"column":4},"end":{"line":222,"column":15}},"147":{"start":{"line":224,"column":4},"end":{"line":224,"column":21}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":16},"end":{"line":59,"column":32}},{"start":{"line":59,"column":36},"end":{"line":59,"column":46}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"6":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]},"7":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"8":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":70},"end":{"line":157,"column":73}},{"start":{"line":157,"column":76},"end":{"line":157,"column":92}}]},"9":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":46},"end":{"line":157,"column":49}},{"start":{"line":157,"column":53},"end":{"line":157,"column":67}}]},"10":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":264},"end":{"line":159,"column":264}},{"start":{"line":159,"column":264},"end":{"line":159,"column":264}}]},"11":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"12":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"13":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"14":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"15":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"16":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"17":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":51},"end":{"line":212,"column":57}},{"start":{"line":212,"column":60},"end":{"line":212,"column":62}}]},"18":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":0},"end":{"line":219,"column":0}},{"start":{"line":219,"column":0},"end":{"line":219,"column":0}}]},"19":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":18},"end":{"line":221,"column":27}},{"start":{"line":221,"column":31},"end":{"line":221,"column":32}}]}},"code":["//#!/usr/bin/env node","'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.packagerMain = exports.runAsarArchive = exports.packageDirToResourcesDir = undefined;","","let packageDirToResourcesDir = exports.packageDirToResourcesDir = (() => {","  var _ref = _asyncToGenerator(function* (packageDir) {","    let appDir = (yield _promise.pfs.readdir(packageDir)).find(function (x) {","      return x.match(/\\.app$/i);","    });","    if (appDir) {","      return _path2.default.join(packageDir, appDir, 'Contents', 'Resources', 'app');","    } else {","      return _path2.default.join(packageDir, 'resources', 'app');","    }","  });","","  return function packageDirToResourcesDir(_x) {","    return _ref.apply(this, arguments);","  };","})();","","let copySmallFile = (() => {","  var _ref2 = _asyncToGenerator(function* (from, to) {","    d(`Copying ${from} => ${to}`);","","    let buf = yield _promise.pfs.readFile(from);","    yield _promise.pfs.writeFile(to, buf);","  });","","  return function copySmallFile(_x2, _x3) {","    return _ref2.apply(this, arguments);","  };","})();","","let compileAndShim = (() => {","  var _ref3 = _asyncToGenerator(function* (packageDir) {","    let appDir = yield packageDirToResourcesDir(packageDir);","","    d(`Looking in ${appDir}`);","    for (let entry of yield _promise.pfs.readdir(appDir)) {","      if (entry.match(/^(node_modules|bower_components)$/)) continue;","","      let fullPath = _path2.default.join(appDir, entry);","      let stat = yield _promise.pfs.stat(fullPath);","","      if (!stat.isDirectory()) continue;","","      d(`Executing electron-compile: ${appDir} => ${entry}`);","      yield (0, _cli.main)(appDir, [fullPath]);","    }","","    d('Copying in es6-shim');","    let packageJson = JSON.parse((yield _promise.pfs.readFile(_path2.default.join(appDir, 'package.json'), 'utf8')));","","    let index = packageJson.main || 'index.js';","    packageJson.originalMain = index;","    packageJson.main = 'es6-shim.js';","","    yield copySmallFile(_path2.default.join(__dirname, 'es6-shim.js'), _path2.default.join(appDir, 'es6-shim.js'));","","    yield _promise.pfs.writeFile(_path2.default.join(appDir, 'package.json'), JSON.stringify(packageJson, null, 2));","  });","","  return function compileAndShim(_x4) {","    return _ref3.apply(this, arguments);","  };","})();","","let runAsarArchive = exports.runAsarArchive = (() => {","  var _ref4 = _asyncToGenerator(function* (packageDir, asarUnpackDir) {","    let appDir = yield packageDirToResourcesDir(packageDir);","","    let asarArgs = ['pack', 'app', 'app.asar'];","    if (asarUnpackDir) {","      asarArgs.push('--unpack-dir', asarUnpackDir);","    }","","    var _findExecutableOrGues = findExecutableOrGuess('asar', asarArgs);","","    let cmd = _findExecutableOrGues.cmd,","        args = _findExecutableOrGues.args;","","","    d(`Running ${cmd} ${JSON.stringify(args)}`);","    yield (0, _spawnRx.spawnPromise)(cmd, args, { cwd: _path2.default.join(appDir, '..') });","    _rimraf2.default.sync(_path2.default.join(appDir));","  });","","  return function runAsarArchive(_x5, _x6) {","    return _ref4.apply(this, arguments);","  };","})();","","let packagerMain = exports.packagerMain = (() => {","  var _ref5 = _asyncToGenerator(function* (argv) {","    d(`argv: ${JSON.stringify(argv)}`);","    argv = argv.splice(2);","","    var _splitOutAsarArgument = splitOutAsarArguments(argv);","","    let packagerArgs = _splitOutAsarArgument.packagerArgs,","        asarArgs = _splitOutAsarArgument.asarArgs;","","    var _findExecutableOrGues2 = findExecutableOrGuess(electronPackager, packagerArgs);","","    let cmd = _findExecutableOrGues2.cmd,","        args = _findExecutableOrGues2.args;","","","    d(`Spawning electron-packager: ${JSON.stringify(args)}`);","    let packagerOutput = yield (0, _spawnRx.spawnPromise)(cmd, args);","    let packageDirs = parsePackagerOutput(packagerOutput);","","    d(`Starting compilation for ${JSON.stringify(packageDirs)}`);","    for (let packageDir of packageDirs) {","      yield compileAndShim(packageDir);","","      if (!asarArgs) continue;","","      d('Starting ASAR packaging');","      let asarUnpackDir = null;","      if (asarArgs.length === 2) {","        asarUnpackDir = asarArgs[1];","      }","","      yield runAsarArchive(packageDir, asarUnpackDir);","    }","  });","","  return function packagerMain(_x7) {","    return _ref5.apply(this, arguments);","  };","})();","","exports.splitOutAsarArguments = splitOutAsarArguments;","exports.parsePackagerOutput = parsePackagerOutput;","exports.findExecutableOrGuess = findExecutableOrGuess;","","var _path = require('path');","","var _path2 = _interopRequireDefault(_path);","","var _rimraf = require('rimraf');","","var _rimraf2 = _interopRequireDefault(_rimraf);","","var _promise = require('./promise');","","var _cli = require('./cli');","","var _spawnRx = require('spawn-rx');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }","","const d = require('debug')('electron-compile:packager');","const electronPackager = 'electron-packager';","","function splitOutAsarArguments(argv) {","  if (argv.find(x => x.match(/^--asar-unpack$/))) {","    throw new Error(\"electron-compile doesn't support --asar-unpack at the moment, use asar-unpack-dir\");","  }","","  // Strip --asar altogether","  let ret = argv.filter(x => !x.match(/^--asar/));","","  if (ret.length === argv.length) {","    return { packagerArgs: ret, asarArgs: null };","  }","","  let indexOfUnpack = ret.findIndex(x => x.match(/^--asar-unpack-dir$/));","  if (indexOfUnpack < 0) {","    return { packagerArgs: ret, asarArgs: [] };","  }","","  let unpackArgs = ret.slice(indexOfUnpack, indexOfUnpack + 1);","  let notUnpackArgs = ret.slice(0, indexOfUnpack).concat(ret.slice(indexOfUnpack + 2));","","  return { packagerArgs: notUnpackArgs, asarArgs: unpackArgs };","}","","function parsePackagerOutput(output) {","  // NB: Yes, this is fragile as fuck. :-/","  console.log(output);","  let lines = output.split('\\n');","","  let idx = lines.findIndex(x => x.match(/Wrote new app/i));","  if (idx < 1) throw new Error(`Packager output is invalid: ${output}`);","  lines = lines.splice(idx);","","  // Multi-platform case","  if (lines[0].match(/Wrote new apps/)) {","    return lines.splice(1).filter(x => x.length > 1);","  } else {","    return [lines[0].replace(/^.*new app to /, '')];","  }","}","","function findExecutableOrGuess(cmdToFind, argsToUse) {","  var _findActualExecutable = (0, _spawnRx.findActualExecutable)(cmdToFind, argsToUse);","","  let cmd = _findActualExecutable.cmd,","      args = _findActualExecutable.args;","","  if (cmd === electronPackager) {","    d(`Can't find ${cmdToFind}, falling back to where it should be as a guess!`);","    let cmdSuffix = process.platform === 'win32' ? '.cmd' : '';","    return (0, _spawnRx.findActualExecutable)(_path2.default.resolve(__dirname, '..', '..', '.bin', `${cmdToFind}${cmdSuffix}`), argsToUse);","  }","","  return { cmd, args };","}","","if (process.mainModule === module) {","  packagerMain(process.argv).then(() => process.exit(0)).catch(e => {","    console.error(e.message || e);","    d(e.stack);","","    process.exit(-1);","  });","}","//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"l":{"4":1,"7":1,"9":1,"10":1,"11":0,"12":0,"14":0,"15":0,"17":0,"21":1,"22":0,"26":1,"27":1,"28":0,"30":0,"31":0,"34":1,"35":0,"39":1,"40":1,"41":0,"43":0,"44":0,"45":0,"47":0,"48":0,"50":0,"52":0,"53":0,"56":0,"57":0,"59":0,"60":0,"61":0,"63":0,"65":0,"68":1,"69":0,"73":1,"74":1,"75":0,"77":0,"78":0,"79":0,"82":0,"84":0,"88":0,"89":0,"90":0,"93":1,"94":0,"98":1,"99":1,"100":0,"101":0,"103":0,"105":0,"108":0,"110":0,"114":0,"115":0,"116":0,"118":0,"119":0,"120":0,"122":0,"124":0,"125":0,"126":0,"127":0,"130":0,"134":1,"135":0,"139":1,"140":1,"141":1,"143":1,"145":1,"147":1,"149":1,"151":1,"153":1,"155":1,"157":2,"159":5,"161":1,"162":1,"164":1,"165":0,"166":0,"170":0,"172":0,"173":0,"176":0,"177":0,"178":0,"181":0,"182":0,"184":0,"187":1,"189":0,"190":0,"192":0,"193":0,"194":0,"197":0,"198":0,"200":0,"204":1,"205":0,"207":0,"210":0,"211":0,"212":0,"213":0,"216":0,"219":1,"220":0,"221":0,"222":0,"224":0}},"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/x-require.js":{"path":"/home/travis/build/npmtest/node-npmtest-electron-compile/node_modules/electron-compile/lib/x-require.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[1,0],"6":[1,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}},"2":{"name":"requireModule","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":33}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":30},"end":{"line":45,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":13,"column":0},"end":{"line":29,"column":1}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":22}},"8":{"start":{"line":16,"column":2},"end":{"line":23,"column":3}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":47}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":51}},"11":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"12":{"start":{"line":21,"column":6},"end":{"line":21,"column":35}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":20}},"14":{"start":{"line":35,"column":0},"end":{"line":52,"column":5}},"15":{"start":{"line":36,"column":2},"end":{"line":36,"column":78}},"16":{"start":{"line":36,"column":66},"end":{"line":36,"column":78}},"17":{"start":{"line":38,"column":2},"end":{"line":49,"column":5}},"18":{"start":{"line":40,"column":6},"end":{"line":40,"column":42}},"19":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"20":{"start":{"line":42,"column":8},"end":{"line":42,"column":28}},"21":{"start":{"line":46,"column":6},"end":{"line":46,"column":37}},"22":{"start":{"line":46,"column":30},"end":{"line":46,"column":37}},"23":{"start":{"line":47,"column":6},"end":{"line":47,"column":28}},"24":{"start":{"line":51,"column":2},"end":{"line":51,"column":69}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"6":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":33}},{"start":{"line":36,"column":37},"end":{"line":36,"column":44}},{"start":{"line":36,"column":48},"end":{"line":36,"column":64}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"8":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":14}},{"start":{"line":41,"column":18},"end":{"line":41,"column":33}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _url = require('url');","","var _url2 = _interopRequireDefault(_url);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function requireModule(href) {","  let filePath = href;","","  if (filePath.match(/^file:/i)) {","    let theUrl = _url2.default.parse(filePath);","    filePath = decodeURIComponent(theUrl.pathname);","","    if (process.platform === 'win32') {","      filePath = filePath.slice(1);","    }","  }","","  // NB: We don't do any path canonicalization here because we rely on","  // InlineHtmlCompiler to have already converted any relative paths that","  // were used with x-require into absolute paths.","  require(filePath);","}","","/**"," * @private"," */","","exports.default = (() => {","  if (process.type !== 'renderer' || !window || !window.document) return null;","","  let proto = Object.assign(Object.create(HTMLElement.prototype), {","    createdCallback: function () {","      let href = this.getAttribute('src');","      if (href && href.length > 0) {","        requireModule(href);","      }","    },","    attributeChangedCallback: function (attrName, oldVal, newVal) {","      if (attrName !== 'src') return;","      requireModule(newVal);","    }","  });","","  return document.registerElement('x-require', { prototype: proto });","})();","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy94LXJlcXVpcmUuanMiXSwibmFtZXMiOlsicmVxdWlyZU1vZHVsZSIsImhyZWYiLCJmaWxlUGF0aCIsIm1hdGNoIiwidGhlVXJsIiwicGFyc2UiLCJkZWNvZGVVUklDb21wb25lbnQiLCJwYXRobmFtZSIsInByb2Nlc3MiLCJwbGF0Zm9ybSIsInNsaWNlIiwicmVxdWlyZSIsInR5cGUiLCJ3aW5kb3ciLCJkb2N1bWVudCIsInByb3RvIiwiT2JqZWN0IiwiYXNzaWduIiwiY3JlYXRlIiwiSFRNTEVsZW1lbnQiLCJwcm90b3R5cGUiLCJjcmVhdGVkQ2FsbGJhY2siLCJnZXRBdHRyaWJ1dGUiLCJsZW5ndGgiLCJhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2siLCJhdHRyTmFtZSIsIm9sZFZhbCIsIm5ld1ZhbCIsInJlZ2lzdGVyRWxlbWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLFNBQVNBLGFBQVQsQ0FBdUJDLElBQXZCLEVBQTZCO0FBQzNCLE1BQUlDLFdBQVdELElBQWY7O0FBRUEsTUFBSUMsU0FBU0MsS0FBVCxDQUFlLFNBQWYsQ0FBSixFQUErQjtBQUM3QixRQUFJQyxTQUFTLGNBQUlDLEtBQUosQ0FBVUgsUUFBVixDQUFiO0FBQ0FBLGVBQVdJLG1CQUFtQkYsT0FBT0csUUFBMUIsQ0FBWDs7QUFFQSxRQUFJQyxRQUFRQyxRQUFSLEtBQXFCLE9BQXpCLEVBQWtDO0FBQ2hDUCxpQkFBV0EsU0FBU1EsS0FBVCxDQUFlLENBQWYsQ0FBWDtBQUNEO0FBQ0Y7O0FBRUQ7QUFDQTtBQUNBO0FBQ0FDLFVBQVFULFFBQVI7QUFDRDs7QUFFRDs7OztrQkFHZSxDQUFDLE1BQU07QUFDcEIsTUFBSU0sUUFBUUksSUFBUixLQUFpQixVQUFqQixJQUErQixDQUFDQyxNQUFoQyxJQUEwQyxDQUFDQSxPQUFPQyxRQUF0RCxFQUFnRSxPQUFPLElBQVA7O0FBRWhFLE1BQUlDLFFBQVFDLE9BQU9DLE1BQVAsQ0FBY0QsT0FBT0UsTUFBUCxDQUFjQyxZQUFZQyxTQUExQixDQUFkLEVBQW9EO0FBQzlEQyxxQkFBaUIsWUFBVztBQUMxQixVQUFJcEIsT0FBTyxLQUFLcUIsWUFBTCxDQUFrQixLQUFsQixDQUFYO0FBQ0EsVUFBSXJCLFFBQVFBLEtBQUtzQixNQUFMLEdBQWMsQ0FBMUIsRUFBNkI7QUFDM0J2QixzQkFBY0MsSUFBZDtBQUNEO0FBQ0YsS0FONkQ7QUFPOUR1Qiw4QkFBMEIsVUFBU0MsUUFBVCxFQUFtQkMsTUFBbkIsRUFBMkJDLE1BQTNCLEVBQW1DO0FBQzNELFVBQUlGLGFBQWEsS0FBakIsRUFBd0I7QUFDeEJ6QixvQkFBYzJCLE1BQWQ7QUFDRDtBQVY2RCxHQUFwRCxDQUFaOztBQWFBLFNBQU9iLFNBQVNjLGVBQVQsQ0FBeUIsV0FBekIsRUFBc0MsRUFBRVIsV0FBV0wsS0FBYixFQUF0QyxDQUFQO0FBQ0QsQ0FqQmMsRyIsImZpbGUiOiJ4LXJlcXVpcmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXJsIGZyb20gJ3VybCc7XHJcblxyXG5mdW5jdGlvbiByZXF1aXJlTW9kdWxlKGhyZWYpIHtcclxuICBsZXQgZmlsZVBhdGggPSBocmVmO1xyXG4gIFxyXG4gIGlmIChmaWxlUGF0aC5tYXRjaCgvXmZpbGU6L2kpKSB7XHJcbiAgICBsZXQgdGhlVXJsID0gdXJsLnBhcnNlKGZpbGVQYXRoKTtcclxuICAgIGZpbGVQYXRoID0gZGVjb2RlVVJJQ29tcG9uZW50KHRoZVVybC5wYXRobmFtZSk7XHJcblxyXG4gICAgaWYgKHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMicpIHtcclxuICAgICAgZmlsZVBhdGggPSBmaWxlUGF0aC5zbGljZSgxKTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLy8gTkI6IFdlIGRvbid0IGRvIGFueSBwYXRoIGNhbm9uaWNhbGl6YXRpb24gaGVyZSBiZWNhdXNlIHdlIHJlbHkgb25cclxuICAvLyBJbmxpbmVIdG1sQ29tcGlsZXIgdG8gaGF2ZSBhbHJlYWR5IGNvbnZlcnRlZCBhbnkgcmVsYXRpdmUgcGF0aHMgdGhhdFxyXG4gIC8vIHdlcmUgdXNlZCB3aXRoIHgtcmVxdWlyZSBpbnRvIGFic29sdXRlIHBhdGhzLlxyXG4gIHJlcXVpcmUoZmlsZVBhdGgpO1xyXG59XHJcblxyXG4vKipcclxuICogQHByaXZhdGVcclxuICovIFxyXG5leHBvcnQgZGVmYXVsdCAoKCkgPT4ge1xyXG4gIGlmIChwcm9jZXNzLnR5cGUgIT09ICdyZW5kZXJlcicgfHwgIXdpbmRvdyB8fCAhd2luZG93LmRvY3VtZW50KSByZXR1cm4gbnVsbDtcclxuICBcclxuICBsZXQgcHJvdG8gPSBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoSFRNTEVsZW1lbnQucHJvdG90eXBlKSwge1xyXG4gICAgY3JlYXRlZENhbGxiYWNrOiBmdW5jdGlvbigpIHtcclxuICAgICAgbGV0IGhyZWYgPSB0aGlzLmdldEF0dHJpYnV0ZSgnc3JjJyk7XHJcbiAgICAgIGlmIChocmVmICYmIGhyZWYubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHJlcXVpcmVNb2R1bGUoaHJlZik7XHJcbiAgICAgIH1cclxuICAgIH0sIFxyXG4gICAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrOiBmdW5jdGlvbihhdHRyTmFtZSwgb2xkVmFsLCBuZXdWYWwpIHtcclxuICAgICAgaWYgKGF0dHJOYW1lICE9PSAnc3JjJykgcmV0dXJuO1xyXG4gICAgICByZXF1aXJlTW9kdWxlKG5ld1ZhbCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBkb2N1bWVudC5yZWdpc3RlckVsZW1lbnQoJ3gtcmVxdWlyZScsIHsgcHJvdG90eXBlOiBwcm90byB9KTtcclxufSkoKTtcclxuIl19"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"14":0,"16":0,"17":0,"18":0,"20":0,"21":0,"28":0,"35":1,"36":1,"38":0,"40":0,"41":0,"42":0,"46":0,"47":0,"51":0}}}